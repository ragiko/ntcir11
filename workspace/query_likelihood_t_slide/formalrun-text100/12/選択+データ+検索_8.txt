はじめに
GISでは地図を表示するためのジオメトリーと同様に重要な情報が、表示されている地物の属性データです。例えば地図上に示されている植生図を示す ポリゴンデータの一つのポリゴンには、そのポリゴンがもつ様々な属性値、例えば植生群落名、ポリゴンの面積、調査者の名前など持たせることができます。逆にそれらの属性地を使い条件に合うポリゴンを取り出したり、属性値に基づき地物を塗り分けたり、属性値から更に別の属性地を計算したりすることができます。ここではQGISでどのよ うに属性値の表示、検索、編集をするのか見て見ます。
属性テーブルの表示とその構成
属性テーブルを開くには画面左側に通常表示される「レイヤ」ウィンドウから目的とするレイヤを右クリックし、コンテクストメニューから「属性テーブルを開く」を選択するか、「属性メニューバー」の「属性テーブルのオープン」をクリックします(図1-80)。
図1-80 「属性テーブルのオープン」による属性テーブルへのアクセス
属性テーブルは各行に個別のデータを収納し、都道府県名、市町村名などの属性を列によって示します。ですから図1-80ではf_codeがFA001のデー  ターの都道府県名(nam)が北海道(HOKKAIDO)であることがわかります。テーブルウィンドウの一番上には現在表示されている属性テーブルのレイヤー名、選択されている地物件  数、そして地物の総数が示されます。現在示されている範囲外の情報にはスクロールバーを使って移動することができます。また属性テーブルの下方には様々な機能へアクセスするためのショートカットアイコンが用意されています。これらには「すべての選択を解除する」、「選択部分を戦闘に移動する」、「セクションを反転する」、「選択している行をクリップボードへコピー」、「選択された行のデータにズームする」、「編集モードの変更」、「選択地物を削除する」、「新規カラム」、「カラムの削除」、「フィールド計算機のオープン」が含まれます。また属性によるデータ(行)の検索に関する様々な機能も提供されています。
図1-80 属性テーブル
属性テーブルとマップレイヤ
属性テーブルには、地物に関する情報が数値、テキスト、日付などのフォーマットで保存されます。これらの情報はもちろん属性テーブルを見ることによっても見れますが、マップレイヤーで「地物情報表示」ツールを利用することによっても見ることができます。「地物情報表示」アイコンをクリックした上で(図1-81)、レイヤの対象とする地物をクリックすると「地物情報」ウィンドウが現れ、その地物に関する属性情報の一覧を表示してくれます(図8-82)。
図1-81 地物情報表示ツール
図1-82 地物情報表示ツールによる地物の属性情報の表示
属性テーブルのフォーマット
属性テーブルの各フィールド(列)にはそれぞれ属性値があります。これらのフィールド属性値を見たり、より属性テーブルを使いやすくするためには、レイヤーメニューのプロパティーから「フィールド」タブを選択し、フィールド属性値を閲覧したり、各フィールドに対し様々な設定を行います(図1-83)。このフィールドタブでは各列の名前、データタイプ、データの長さ、データの精度などの情報を見ることができます。また、編集モードを切り替えれば新しいフィールドの追加もこのタブで行えます。フィールドタブ内にあるフィールドの「別名」設定も属性テーブルを使いやすくするためにとても便利な機能です。この機能は例えばベクタデータフォーマットとして頻繁に用いられるシェープファイルの属性値フィールド名が英数半角文字で10文字までしか使えないような場合に、「別名」としてよりわかりやすい名前をそのフィールドにつける場合に用いられます。「別名」が指定されているフィールドはフィールドの「名称」に変わり「別名」が属性テーブルで示されることになります。各フィールドで設定できる「ウィジェットの編集」では、各列に入力できるデータのタイプや範囲を限定することができ、データ入力の迅速化が行えます。フィールドタブの上方では列の削除、新しい列の追加や「フィールド計算機」などの作業も行うことができるようになっていますが、実際には「カラムの削除」機能は現時点(バージョン1.7.1)では使えません。
図1-83 属性テーブルのフィールド属性
属性の検索
属性テーブルでは必要な情報を検索し、表示、編集することができます。属性テーブルの検索,、絞込みを行うには属性テーブルの下部にあるテキストボックス、各種アイコンとチェックボックスを使います。例として市町村レイヤの属性テーブルで東京都に関連するすべての地物を選択するとします。そのためにはテキストボックスに「東京都」と入力し、図1-84のドロップダウンメニューから都道府県名が収納されているフィールド名である「PREF」を選択し、「検索」ボタンをクリックします。
図1-84 属性の検索例
すると例えば63件のレコードが選択されます。選択されたレコードだけを表示させたいのであれば、属性テーブルの下方にある「選択された部分のみを表示する」をチェックするか、属性テーブル内のアイコン(図1-85)の左から2番目「選択部分を先頭に移動する」をクリックし、選択されたレコードをテーブルの最上部に持っていくこともできます。このほかのアイコンを使うと、全選択解除、選択範囲を反転、選択行のクリップボードへのコピー、なども行えます。
図1-85 属性テーブルで提供されている各種ツール
一旦検索して選択されているレコードの中からさらに絞り込み検索を行うには「選択された部分のみ検索する」をチェックしてから先ほどと同じようにテキストボックスに、たとえば「千代田区」と入力し、ドロップダウンメニューからそれに該当するフィールド(列)名を選択した後、「検索」ボタンをクリックします。検索した情報が属する地物自体をビューで見たい場合には、目的とする情報が示された状態で虫眼鏡のアイコンをクリックします(図1-85)。この場合地図の拡大倍率などが設定できないため、1点データなどを表示させようとすると地物が大きく拡大されて表示されてしまいます。このような拡大倍率を設定できないディフォルトの検索機能を補うには、「Find by Attribute」プラグインが便利です。プラグインインストーラを使って「Find by Attribute」プラグインをインストールすると図1-86のアイコンが追加されるのでアイコンをクリックすると新しいウィンドウが現れます。現れたウィンドウで検索条件を指定した後「Zoom Scale」を指定し、さらに「Auto  Zoom」をチェックした後「Search」ボタンをクリックすると目的の地物が指定したスケールで表示されます。図1-87は千代田区をズームスケール 300000で検索した結果です。
図1-86 Find by Attributeプラグイン
図1-87 Find by Attributeプラグインを用いた地物の検索
さらに高度な検索を行う場合には属性テーブルの右下にある「アドバンスドサーチ」を使います。「アドバンスドサーチ」ボタンをクリックすると「検索クエリビルダ」ウィンドウが表示されます(図1-88)。このクエリビルダを使うことにより、部分的なSQL構文を使った検索が行えるようになると同時に「値」の「サンプル」または「すべての」値を表示さ せることができるため、高度な検索と共に単純なタイプミスなどによる検索の失敗を防ぐことができます。実際の検索文はクエリビルダ下部の「SQL where   句」のテキストボックスにSQLのWhere句を書き、「OK」をクリックして検索を行います。SQL文章が文法的に正しいかどうかは検索文章を書いた後 「テスト」ボタンをクリックして行うことができます。ちなみに東京都の千代田区を検索するための構文は
PREF = '東京都' AND CITY1 = '千代田区'
となります。これは二つの検索条件を「AND」を使ってつなげたもので、このほかにもOR、NOT、IN、LIKE、各種等号、不等号を使った検索 が行えます。ワイルドカードも使えるため、検索語の一部が不明であったり、ある文字を含む複数のレコードの検索なども行えます。以下いくつかのSQL  where 句の例を挙げました。
PREF  IN  ('東京都', '秋田県', '長野県')
PREF  LIKE '福%'
H_NUM <= 69542
図1-88 アドバンストサーチによる検索クエリビルダウィンドウ
列の削除、新しい列の追加や演算
「属性テーブルのフォーマット」ですでに触れたように、属性テーブルでは自由にフィールド(列)やレコード(行)の削除や追加をすることができます。フィールドの追加やレコードの削除を行うためには、まず「編集モードの変更」を行い、編集モードに入り、そののち作業を行います。追加や削除の操作はその対象となるフィールドやレコードを選択した後、それに該当するアイコンをクリックすることにより行います。ただし現時点ではフィールドの削除がうまく行えないため、フィールドの削除を行いたい場合には「Table manager」プラグインをプラグインインストーラーからインストールして利用します。
フィールド計算機
属性テーブルではさらに、フィールド計算機機能を利用して新しく追加した列にすでに存在する列を使って演算を行った結果を保存することができます。例えば市町村ポリゴンデータの例では、各市町村の面積と人口を元に新しく人口密度を計算し、その結果を「density」という列を新しく作って保存したい場合などです。またあるフィールドの値を新しいフィールドを作ってコピーする際やポリゴンの面積を求める際にもフィールド計算機を利用することができます。図1-89はポリゴンの面積を求めてその値を新規フィールド「polygon_area」として保存する作業を行なっています。関数としては算術関数だけではなく、文字列から整数、文字列から実数、数値から文字列への変換などのデータタイプの変換も行えるようになっています(図1-89)。
図1-89 フィールド計算機
外部テーブルの結合
ベクタデータの属性テーブルには、共通するフィールドを使って外部テーブルを結合することができます。例えば市町村のポリゴンデータがあり、そのポリゴンの属性に市町村の人口をまとめたテーブルを結合してやり、市町村ポリゴンを人口により塗り分けしたい場合などにこの外部テーブルの結合は使えます。また、複数の外部テーブルを結合させてデータの検索なども行えます。
QGISでは、外部テーブルはカンマ区切りのテキストファイル(拡張子CSV)でなければなりません。一般の表計算ソフトにはCSV形式でファイルを保存する機能が備わっているので、表計算ソフトでデータを作成したり、他のファイル形式のデータがあれば、一度表計算ソフトに取り込んで、データの中身を確認した後、CSV形式で保存してやることで外部テーブルとして使うことができます。
外部テーブルに必要な条件のもう一つは、ベクタレイヤの属性値テーブルの一つのフィールド(列)と共通するフィールドが外部テーブルにもあることです。ただしこの場合、QGISではCSVの各フィールドをすべてテキストの形で読み込んでしまうために、ベクタレイヤの共通フィールドのデータタイプが整数で、外部テーブルも見かけ上は整数だけれども実はテキストとして読み込まれてしまったため、外部テーブルの結合がうまくいかない場合があります。これを避ける方法としては、共通のフィールドのデータタイプを初めからテキストにしておく、ということも考えられますが、それではせっかく結合しても、例えば表示したいデータが人口のような数値である場合は、そのままでは数値として取り扱うことができません。
CSVTファイル
このようなCSVの外部テーブルの問題を解決するために必要なのが、各列のデータタイプを定義したCSVTファイルです。CSVTファイルは、データのタイプをテキストで定義したCSVファイルです。ですから、ノートパッドなどのテキストエディターで自分で書いてもいいですし、表計算ソフトを使って各列のデータタイプを定義した後、CSVファイルとしてとりあえず保存し、出力されたCSVファイルの拡張子を手動でCSVTと書き換えることによってもできます。ただし、表計算ソフトを使ってCSVTファイルの元となるCSVファイルを作成した際は、表計算ソフトの設定などにより、必要なダブルクォーテーションマークなどが入らないことがあるので、必ずテキストエディターでデータタイプの定義のフォーマットが正確か確認して下さい。
CSVTファイルを使って定義できるデータタイプは今のところ以下のように限られています。
Integer : 整数 (例) 1, 2, 3,
Real : 実数 (例) 5.36, 100034.456,
String : テキスト (例) 宮城県, 福島県,
Date  (YYYY-MM-DD) : 日付 (例) 2011-04-19
Time (HH:MM:SS+nn) : 時刻 (例) 12:25:43pm
DateTime (YYYY-MM-DD HH:MM:SS+nn) : 日付と時刻 (例) 2011-04-19 12:25:43pm
例えば、1列目が整数、2列目が実数、3列目がテキストで構成されたCSVファイルの属性を定義するCSVTファイルは以下のように書きます。
"Integer","Real","String"
また、データタイプに加え、桁数(幅)と精度(precisions)も定義することができます。
"Integer(5)","Real(10.7)","String(15)"
このようにしてデータ自体が収められているCSVファイルと、CSVファイルのデータタイプを定義したCSVTファイルの2つを用意すれば、QGISに外部テーブルとして取り込んだ際に、すべての列が正しく認識されます。更に詳しくCSVファイルの扱いを知りたい方は、GDALのホームページを参考にして下さい。
QGISでのCSVテキストファイルの取り扱い。5分19秒
QGISにテキストファイルをデータタイプ込みで読み込むためには、CSVファイルに付随するCSVTファイルを自分で作る必要があります。そのためのステップを解説しました。
次のページへ ｜  目次へ
属性テーブルの検索と操作 &mdash; GeoPacific.org
