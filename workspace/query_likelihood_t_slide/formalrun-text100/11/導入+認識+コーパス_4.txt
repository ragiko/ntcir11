*1
昔の検討
*2
HMMの特徴の分かりやすい説明:ディジタル蝸牛モデルとHMMを用いた音声認識(東京理科大 佐藤先生)
*3
リンク先のレジストレーションのページで、IDとパスワードを登録してください。なお、宮澤のIDはこちら。
*4
試行錯誤の後 田中君に感謝!!
*5
"m-kouki"のところを自分の環境に置き換えてください。
*6
TeraTermProやターミナル
*7
詳細:コーパス加工用プログラム/日本語話し言葉コーパス(CSJ)/ディレクトリをサーチしてXMLファイルのパスを取得する
*8
もしも disc03 に収録された音声のみを対象にしたい場合は、第一引数に /home/CSJ/disc03 を指定します。また、もしも単独話者のみを対象にしたい場合は、第二引数に話者名(「S08F1465」など)を指定します。
*9
詳細:コーパスのXML解析/日本語話し言葉コーパス(CSJ)/HTK学習用の転記テキストファイル(.PROMPTファイル)を作成する
*10
PROMPTファイル作成までは、コーパスの転記ファイルの表記法によってプログラムが変わってきますが、以下は共通の処理になります
*11
参考:音声メディア研究室 HMM 作成メモ
*12
PROMPT ファイル中に長音記号がない場合や直前の音素と結合したくない場合(独立した音素として扱いたい場合)は、関係ない文字列を入れればOK
*13
mkphones0.led(音声メディア研究室 HMM 作成メモ より) を作成して、HTK付属の $ HLEd -l '*' -d ./transcription/CSJ_F_monophones0.dict -i ./transcription/CSJ_F_train.phone0.lbl mkphones0.led ./transcription/CSJ_F_train.word.lbl を実行して作成することもできます。ただし、CSJ_F_train.word.lbl に、同じ単語で複数の読みをする語があるため、結果は同じにはなりません。
*14
PROMPT ファイル中に長音記号がない場合や直前の音素と結合したくない場合(独立した音素として扱いたい場合)は、関係ない文字列を入れればOK
*15
mkphones0.led から DE sp を除いた mkphones1.led を作成して、HTK付属の $HLEd -l '*' -d ./transcription/CSJ_F_monophones1.dict -i CSJ_F_train.phone1.lbl mkphones1.led ./transcription/CSJ_F_train.word.lbl を実行して作成することもできます。ただし、結果は同じにはなりません。
*16
改行しないと、以下の処理で「ERROR [+1230]  ReadLabId: string arg expected ...」エラーが出ます。
*17
mfcファイルはバイナリなので読めません。テキストファイルに変換するには、次のコードを実行します。 HList -o -h .mfcファイル名 > .txtファイル名
*18
proto 中の「~o」という文字列が含まれる行を hmm0/macro に書き出しています(参考)。
*19
音素ラベル train.phone0.lbl の中に空白行が混ざってHERestが失敗する場合もあるようです。
*20
なお、教科書(p.13)ではこの処理は行わず、はじめから sp と sil を定義した hmmdefs で学習を行い、HHEd のみ実行しています。音声メディア研究室 HMM 作成メモ では、sil の状態3 のみコピーして sp を追記しています。ここでは sil を丸ごとコピーして sp を作っていますが、より適当な方法があるかもしれません。
*21
HViteコマンドは、類似した音素を統合するある種の教師なし学習を行っています。詳細は HTK Book のp.178以降 および p.244以降 を参照
*22
指定すると、ERROR [+6251]  Input file is not in RIFF format のエラーが出ます(config.hcopyのSOURCEFORMAT と SOURCEKIND の値を「HTK」に書き換えると、エラーは消えました)。
*23
ただし、aligned.mlf の結果、分析されていないlabファイルがあります。これらは後のトライフォン学習の際に mfc ファイル読み込みエラーになるので、そこで対処する必要があります。
*24
早大鍔木様にお教えいただきました。ありがとうございました。
*25
モノフォンの段階では統計情報 stats を出力していませんが、この時点で話者適応を行なうなら、「-s stats」オプションを追加しておく必要があります。
*26
maketrihed、Perlスクリプト冒頭のおまじない を自分の環境にあわせて、 $ chmod a+x maketrihed で実行可能にして、maketrihed にパスを通しておきます(本文書では /home/m-kouki/HTK/bin/ の中に入れました)。
*27
これをしないと、以下の学習で ERROR [+6510]  LOpen: Unable to open label file が出ます。
*28
テキストでは、「認識に必要な全てのモデルのリスト triphone_all.lst を作成する」とありますが、トライフォン音素リスト triphones.lst との違いが不明だったので、とりあえず triphones.lst をそのまま使っています。
*29
HTK Book の p.39 も参照してください。
*30
mkclscript、先頭のおまじないを「#!/usr/bin/perl」に書き換えて、 $ chmod a+x mkclscript を実行しておくこと
*31
mkclscript の引数は、HTK辞書作成手順 - 岡田特研 を参考にしました。テキストの引数とは異なっています。また、ここではトライフォンのリストでなく、モノフォンのリストを指定していますが、問題はないようです。
*32
ファイルパスは絶対パスのみ、うまくいきました。$HTK_HOME は使えません。
*33
例えば「L_Nasal」は「鼻音が前に来る」ことを示します。ここをより日本語に適した設定に変えることは、研究の意義があります(テキスト p.20 より)。
*34
モノフォンが混ざっているようですが…とりあえず先に進みます。
*35
mfcファイルの数が多いと、計算にかなり時間がかかります
*36
単語ラベル CSJ_F_train.word.lbl には、発話のない区間(「.」しかないラベル)がありますが、「WARNING [-1330]  HLStats: Empty file ～」の警告が出るだけで問題なく実行されます。
*37
参考:HTK Book p.39
*38
参考:HTKによるHMMの学習
*39
これをしないと、以下で「ERROR [+6570]  GetLabelList: n[1] > numLists[0]」エラーが出ます(エラー対処の参考)。
*40
これをしないと、以下で「ERROR [+6510]  LOpen: Unable to open label file」エラーが出ます(エラー対処の参考)。
*41
HResults に -f オプションをつけると、ひとつひとつの発話番号に対する認識結果が出力されます(デバッグに役立ちます)。
*42
エラーの詳細 参考
*43
発音辞書 recog_CSJ_F_monophones1.dict(CSJ_F_monophones1.dict に START と END を付け加えたもの)は、テキストでは "triphones.dict" になっていますが、出自が不明なため、ここではこれを使っています。
*44
このエラーは、十分な量の音声データを使ってトライフォン学習を行っていれば、回避できると思われます。
HTKによる音響モデル構築 - Miyazawa’s Pukiwiki 公開版
