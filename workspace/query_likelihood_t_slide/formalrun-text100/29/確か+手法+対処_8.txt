もう1つのブルートフォース
ここまで、世間一般でいわれるブルートフォースについて解説してきた。おそらく多くの方は「パスワードを総当りで試していく攻撃」という攻撃手法のことをブルートフォース、もしくは辞書攻撃であるという認識を持っているのではないだろうか。
しかし、ブルートフォースのパターンはそれだけではない。中にはパスワードを固定し、つまり通常のブルートフォースとは逆の発想で、弱いパスワードを設定しているユーザー名を推測して見つけ出す「リバースブルートフォース」という手法も存在する。
筆者の設置した「Kojoney」では、以下のようなリバースブルートフォースによるログイン試行を観測したことがあった。
ID = root / PASSWORD = password 
ID = admin / PASSWORD = password 
ID = test / PASSWORD = password 
ID = oracle / PASSWORD = password 
ID = guest / PASSWORD = password
SSHから少し話がそれるが、とあるシステム管理をしている知人から聞いた話によると、オンラインバンキングのようにログイン失敗回数が限られており、一定回数以上ログインに失敗するとロックがかかるような仕組みのサイトに対して、リバースブルートフォースが用いられることも多いそうだ。
リバースブルートフォースでは、パスワードではなくユーザー名を辞書によって変動させ、ログイン試行を行う。つまり、一般的にシステム内に存在しそうな「root」や「admin」「oracle」といったユーザー以外も狙われる場合があるという認識を持つ必要がある。
まれに「まさか、この広大なインターネットの中から自分のシステムが狙われることはないだろう」という認識を持っている方もいるが、そうした認識は捨てていただきたい。侵入を行おうとする者の発想とは、「この広大なインターネットだ。ヘボなパスワードを設定しているユーザーはごまんといるだろう」というものなのだ。
独自ドメインも持たず、Webサービスもメールサービスも提供していない筆者のサーバにさえ、毎日のように侵入を試みたアタックがあるのである。これこそ、こうした侵入者の考えを裏付ける十分な証拠ではないだろうか。
侵入への対策は根本から
ここで、SSHへの侵入の試みへの対策を簡単にいくつか紹介しよう。
運用上必要な公開範囲を再考する
まず、そもそもそのサービスををインターネットに公開する必要があるかどうか、その必要性から考えるべきだろう。また、公開する必要があるならば、ソースIPアドレスによるアクセス制限を行うことも検討してほしい。
標準のポート(TCP/22)を利用しない
毎日のようにログイン試行がやってきていたSSHのポート番号を「22022」に変更し、1カ月間放置するという実験を行ったことがある。その結果、ログイン試行回数はゼロであった。これにより、狙われる確率を激減させることが可能であるといえる。
そもそもパスワードによる認証を行わない
パスワードではなく、公開鍵を用いた認証を採用する方法だ。SSHサーバ上で秘密鍵と公開鍵を生成し、秘密鍵をクライアントとなるマシンにコピーして登録し、それ以後は、その鍵を利用して認証を行うという設定にする。事前に鍵の交換や設定変更が必要となるため、少々敷居が高いかもしれないが、パスワードアタックに対しては効果てきめんである。SSHサービスが稼動しているサーバを運用しているならば、ぜひ利用していただきたい(インターネット上に多くの情報が掲載されているため、ここでは詳細を控える)。
セキュリティ・ダークナイト(5):リアリティはないけど、脅威は確かにいるよ (4/5) - @IT
