NTTコムウェア株式会社
プロジェクト管理統括部 技術SE部門 DB技術グループ
坂下 徹
Oracleデータベースの性能対策の重要な機能、「Statspack」や「Oracle Enterprise Manager 10g Diagnostics Pack」(※オプションライセンス)の利用ポイントをお伝えします。使わないと"もったいない"機能です!(Diagnostics Packの有無による違いはここ)
- INDEX - 
1 はじめに
2 性能対策概要
3 Statspack
・ 3.1 インストール
・ 3.2 メンテナンス
・ 3.3 レポート作成
・ 3.4 Statspackが不向きなケース
4 Diagnostics Pack
・ 4.1 Automatic Workload Repository (AWR)
・ 4.2 Automatic Database Diagnostic Monitor(ADDM)
・ 4.3 Active Session History (ASH)
・ 4.4 Automatic Workload Repository(AWR)ビュー
5 まとめ
1 はじめに 
ご存じの通り、Oracleは様々な優れた機能を備えています。しかし、それらの機能も各システムの業務要件によって、使うケースと使わないケースに分かれます。ただし、こと性能問題に関しては全てのシステムで起こる可能性があるため、性能対策機能と、その機能に対するデータベース管理者の知識は必須といえます。もちろん、Oracleには優れた性能対策機能も備わっています。その1つがOracle8iで登場したStatspackです。Oracle Database 10gではStatspackを進化させたAWRやADDMという機能が追加され、Oracle Enterprise Manager 10g Diagnostics Pack(以下、Diagnostics Pack)で利用することが可能になりました。しかし、データベース管理者の方はこれらの機能をうまく使いこなしているでしょうか。せっかくよい機能があっても、うまく使いこなせていないのでは意味がありません。
今回、合計3回の連載の中でStatspackとDiagnostics Packに焦点をあて、それらの機能の特徴、使い方、実際の分析に関するポイントを説明したいと思いますので、皆さんもぜひご活用ください。
1回目 StatspackとDiagnostics Packの概要と使用方法
2回目 ケーススタディ(Statspack)
3回目 ケーススタディ(Diagnostics Pack)
次回の2回目の記事では実際にあるワークロードを実行し、Statspackを用いて分析します。3回目では2回目のワークロードと同じものをDiagnostics Packを用いて分析します。ここではDiagnostics PackがStatspackよりもどれだけ使いやすいかをイメージしていただきたいと思います。また、「オラクル通信No.107」(2007年3月1日発行)にも関連記事を掲載していますので、あわせてご覧ください。
なお、今回説明する内容やスクリプトの実行結果はOracle Database 10g Release 2(以下、10g R2)のバージョンをベースに説明しています。バージョンに依存する部分は一部ですが補足説明したいと思います。また、Oracle Enterprise Managerは10g Release 2 Database Controlを使用しています。Grid Controlや他のバージョンのOracle Enterprise Managerの場合、若干画面表示やリンクが異なることもありますのでご注意ください。
では、早速StatspackとDiagnostics Packの概要と使い方について説明します。
インデックスに戻る
2 性能対策概要 
性能にかかわる業務は「分析」と「対処」の2種類に大きく分かれるかと思います。後者はまさに、性能を意識した物理設計であり、SQLチューニングであり、またはOSのチューニング等の実施そのものです。しかし、これらの対処をするにも、どこを改善すべきかを的確に判断しなければなりません。たとえば、ある性能問題に対して、まったく関係のないSQLをチューニングしても意味がありません。そこで、問題となる箇所がどこかを的確に判断するために重要となるのが前者の「分析」になります。分析さえ的確にできれば、その分析過程の中で対処案もおのずと見えてくることが多いようです。
性能を分析するにも、その分析対象となる情報を取得する必要があります。たとえばOSのリソース分析をする際には事前にvmstatなどの情報を取得しておかなければなりません。同じく、Oracleでも性能情報を事前に取得しておくための準備が必要になります。それがStatspackであり、Diagnostics Packになります。ただし、Diagnostics PackはStatspack以上のことがStatspackより簡単にできるため、Statspackよりもメリットが大きいといえます。では、まずは基本となるStatspackを説明し、次にDiagnostics Packを説明していきたいと思います。
インデックスに戻る
3 Statspack 
StatspackはOracleの性能分析をするためのレポートを作成するOracleデータベース標準のツールで、Oracle8iから登場しました。OracleデータベースのEnterprise Editionだけでなく、Standard Editionでも使用できるため、全ての環境で使用することができます。Statspackは指定する期間のデータベース関連の様々な統計情報をレポートとして作成します。データベース管理者はこのレポートを用いて性能を分析することになります。統計情報を取得する期間を指定するために必要となるのがスナップショットです。このスナップショットはSQL*Plusから手動で取得することもできますが、Jobやcronなどを用いて定期的に自動取得するのが一般的です。逆に、スナップショットがなければStatspackレポートも作成することができません。スナップショットさえあれば、過去のどの時点のレポートを作成するかは自由に選ぶことができます(図1-1)。
図1-1 Statspack概要(拡大画像を表示)
スナップショットの処理そのものは、メモリ(SGA)上にある性能関連の統計データをテーブルへ保存しているだけです。よって、スナップショットの処理そのものもあまり大きな負荷はかからず、また、スナップショットを実行していない時間帯は何も負荷がかかりません。したがって、SQL Traceに比べてオーバーヘッドがとても小さいといえます。もちろんSQL Traceとは取得できる情報が異なるため、うまく使い分けましょう。
なお、Statspackには様々なスクリプトを使用しますが、Statspackが登場したばかりの8.1.6のバージョンではそれ以降のバージョンとスクリプト名が異なります。本書では8.1.6のスクリプトは紹介しませんのでご注意ください。ただし、それぞれのバージョン毎にある後述のStatspackマニュアルには8.1.6のスクリプト名の説明もありますので、そちらを参照してください。
3.1 インストール 
データベースを作成した直後のままではStatspackを使用することはできません。事前にStatspackをインストールする必要があります。StatspackはPERFSTATと呼ばれるスキーマの、STATS$の文字列で始まる名前の数十個のテーブルから構成されます。このインストールはSYSユーザでspcreate.sqlを実行することで可能です(図1-2)。スクリプト実行の途中、PERFSTATユーザのパスワードやデフォルト表領域、デフォルト一時表領域を指定する必要があります。spcreate.sqlを実行する前に決めておきましょう。
図1-2 Statspackのインストール(拡大画像を表示)
Statspackのインストールをしていないシステムも実はあるのではないでしょうか。既に運用を開始しているシステムの場合、性能を分析するためにまずStatspackをインストールしなければならないのですが、システム管理者やお客様などにStatspackをインストールする許可を得なければならなくなります。また、設計書にもその変更内容を記載しなければなりません。Statspackのインストール作業そのものはとても簡単なのですが、いろいろと面倒なことが多く、肝心の性能分析がすぐに始められないなどの問題が生じます。よって、Statspackは忘れずに運用開始前からインストールしておきましょう。
(補足)スクリプト実行時の「?」マーク
図1-2ではSQL*Plusからスクリプトを呼び出す際に 「@?/…」のように「?」マークを用いていますが、これは$ORACLE_HOMEを表しています。文字入力が楽になるので知っておくと便利です。
3.2 メンテナンス 
前述の通り、Statspackレポートを作成するためには2つ以上のスナップショットが必要になります。スナップショットはパラメータを変更することで、取得できる情報を変更することも可能です。また、Statspackのスナップショットもテーブルに保存されるため、他の表領域と同様に、いっぱいにならないように古いデータを定期的に削除しましょう。
スナップショット
Statspackレポートは2点のスナップショット間の分析をすることになるため、レポートを作成するためにはインスタンス起動後に最低2つのスナップショットが必要になります。スナップショットはPERFSTATユーザでstatspack.snapを実行して作成します。
実行例
SQL> connect perfstat/********
SQL> execute statspack.snap
PL/SQLプロシージャが正常に完了しました。
この処理を図1-1のようにJobやcronでstatspack.snapが定期的に実行されるように設定しましょう。各システム要件にもよりますが1時間に1回程度の周期で実行するのが一般的です。より細かい時間単位での分析が必要な場合は、その周期を短く設定しましょう。もちろん、スナップショットの回数が増えるので、その分オーバーヘッドは大きくなります。
スナップショットパラメータ
statspack.snapプロシージャは様々なパラメータを指定することが可能ですが、特に重要となるのがi_snap_levelです。i_snap_levelを変更することで、スナップショットが取得する情報を変更することができます(表1-1)。
表1-1 i_snap_levelの違い
OTN Japan - Oracleデータベース 性能対策機能 〜 StatspackとDiagnostics Packを使いこなす 〜 第1回 StatspackとDiagnostics Packの概要と使用方法
