 
［序 論］
HDLとは、CPUなどのディジタル回路の動作や構造をプログラム形式によって記述し、設計できるというものである。さらにHDLによって記述されたプログラムを論理合成することにより、回路の自動設計が行え、設計期間の短縮を図ることができる。
ここでは、まず1章でディジタル回路の設計の流れを追い、つぎに2章においてHDLの中でも代表的な言語であるVHDLを中心にHDLの説明を行う。そして、3章でHDLによる設計手法について述べ、第4章ではHDLに関連した特許について述べる。
⇒トップに戻る
［第1章］ディジタル回路の設計手順
HDLについての説明を行う前に、ディジタル回路の設計手順の全体の流れを述べて、HDL記述が設計期間短縮にどのような役割を果たすかを説明する。
ディジタル回路の設計工程の全体像は図1に示すように、いくつかの段階に分けられ、それぞれの設計段階にはハードウェアの表現が存在する。
(1)仕様設計
最上流の仕様設計は、「ソフトウェアインターフェイス設計」、「外部インターフェイス設計」、「アーキテクチャ設計」からなる。ソフトウェアインターフェイス設計とは、ソフトウェアから見たハードウェアの機能や動作を決定することである。たとえば、CPUの設計ではソフトウェアから見たCPUの仕様、すなわちインストラクション(命令)セットやレジスタセット、さらにアドレッシングモードを決定することである。次に外部インターフェイス設計とは、自分を取り巻く周辺のLSIとの通信のためのインターフェイスを定義することである。たとえば、CPUの外部インターフェイスの場合なら、データやアドレス、更に制御信号を定義し信号のやり取りの順番やタイミングを定義することである。3番目のアーキテクチャ設計は、LSI内部の機能ブロック(モジュール)の構成と機構を決定することである。具体的には、性能(1クロックあたりの処理量)とハードウェアのリソースとのトレードオフを決定することになる。CPUの設計なら、パイプラインの段数やパイプラインステージの決定、さらに、命令間のレジスタ読み書き順番制御機構の設計や割り込み例外制御機構の設計、キャッシュサイズの検討などとなる。これら各種の設計のハードウェア表現は仕様書である。
(2)RTL(Register Transfer Level)設計
RTL設計では、仕様設計から出力された仕様書を元に、まずLSI内部を機能ブロックに分割するが、ブロックがレジスタと組合わせ回路とで構成されるところまでブロック分割を繰り返す。ついで、そのようにして得られたブロックの中のレジスタとレジスタ間の組合わせを決定しクロックごとの回路の動作を決定する。このときの表現をRTL記述といい、抽象度のレベルをRTLという。RTL設計は機能設計とも言う。RTL記述はVHDLなどのHDLを用いて行われる。この段階で記述することにより大幅な設計期間短縮が図られる。
(3)ゲートレベル設計
ゲートレベル設計とはRTL設計から出力されたRTL記述を入力として論理回路図を得ることである。即ち、RTL記述を構成する組合わせ回路やレジスタを、ANDやOR、あるいはフリップフロップなどのセルを用いて構成する工程である。この時の表現を論理回路図あるいはゲートレベル記述という。なお、ゲートレベル設計は論理設計とも呼ばれ、抽象度のレベルはゲートレベルと呼ばれる。
従来のゲートレベル設計では、ゲート(セル)を用いて回路を構築していくボトムアップ的設計手法が取られていたが、現在では、HDLを用いてRTL記述が行われ、自動的にゲートレベルに展開することが可能になっている。このような現在の設計手法はトップダウン設計と呼ばれる。これにより、設計効率は大幅に向上した。
(4)回路設計
回路設計で使用するセルは、当然ながらトランジスタで構成される。回路設計ではトランジスタの電気的特性を考慮して、セルの論理的な機能を実現するように接続関係と幾何学的な配置と配線を決定する。それに基づきセルのレイアウト図も作成される。フルカスタムでLSIを作るときは、論理設計と並行して回路設計が行われる。
(5)レイアウト設計とデザインルールチェック
セルをチップ上に配置し、セル間の配線経路を決定する工程である。この時セルの形状・寸法とコンタクト位置などの情報を持ったライブラリのデータを使って配置・配線が行われる。このときの表現をレイアウト図という。
デザインルールチェックは、配置・配線が設計規則に違反していないか調べる工程である。
⇒トップに戻る
［第2章］HDLについて
HDLの概要について述べる。
<第1節>VHDLの歴史
従来、マイクロプロセッサなどのディジタル回路の設計は、人間の手作業によって行われてきたが、半導体集積化技術の飛躍的な向上に伴って、回路の規模は増大の一途をたどっており、人間の手作業による回路図作成は既に限界となってきている。このため近年、ハードウェア記述言語(HDL :
Hardware description language)を用いたプログラミング形式のディジタル回路設計が行われるようになっている。HDLは40年近くの長い歴史を持っており、設計者間のコミュニケーションの正確化、設計期間の短縮、シミュレーション作業の軽減などを目的として開発された。HDLによるハードウェアの設計手法は、すでにASIC(特定用途向け集積回路)などの大規模集積回路の設計でさかんに利用されている。HDLによる設計はASICに限らず、FPGAやPLDなどを使用した比較的小規模な設計にもさまざまなメリットをもたらしている。
HDLの中でも特に高い記述能力を持つVHDL(Very High
speed Integrated Circuit HDL : VHSIC HDL) は、1970年代に開始した米国防省のVHSICプロジェクトで開発されたHDLであり、1987年にIEEE
std-1076として標準化された。VHDLは回路を階層的にとらえ、最下層の回路を動作的に記述し、それより上位の回路を構造的に記述するといったように、ハードウェアを構造と動作の両方で記述することができる。
⇒トップに戻る
<第2節>HDLによる回路設計の記述レベル
設計の記述レベルには、大きく分けてスイッチ・レベル、論理レベル(ゲートレベル)、RTL(レジスタトランスファレベル)、ビヘイビア・レベル、アーキテクチャ・レベルの5つのレベルがある。それぞれ、第1章で述べた回路設計、ゲートレベル設計、RTL設計、仕様設計に対応する。
現在、実用化されている合成可能な記述レベルは、主に論理レベルとRTLであるが、ビヘイビア・レベルからも合成可能なビヘイビア合成可能なビヘイビア合成ツールが実用化され始めている。記述レベルが上位になるに従い、設計の抽象度レベルは高くなり、詳細な回路機能を記述する必要がなくなる。ここでは論理合成可能な論理レベル、RTLレベル、ビヘイビアレベルについて述べる。
［HDL(ハードウェア記述言語)］
