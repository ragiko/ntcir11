
「ドラゴンコレクション」(以下、ドラコレ)はコナミデジタルエンタテインメントが製作・運営しているソーシャルゲームである。同社の廣田氏による講演では、ドラコレを運用するインフラ技術について紹介された。
廣田氏によれば、ドラコレのHTTPリクエストはピーク時で1秒間に5けた台にのぼり、それを3けたの台数のサーバによって運用しているという。サーバ技術自体はCentOS+Apache+PHP+MySQL(+memcached)という一般的なLAMP環境であり、複数のソフトウェアロードバランサとDNSラウンドロビンを併用することによって負荷分散を行っている。
スケールアウトが必要な場合は、フロントサーバは単に台数を増やすことで、RDBMSは機能分割とシャーディングによって処理能力を増強する。RDBMSに関しては、Read性能がボトルネックになっている場合にはReadレプリカを追加すること対処するとのことだ。
サービスの開始当初はパブリッククラウドを利用していたが、次のような理由からドラコレの運用には不都合な場面が多くなり、現在は自社サーバで運用しているという。
ディスクI/O性能が不安定(当時、物理ディスクを占有できるサービスがなかったため)
内部ネットワークのトラフィックの限界が不明
クラウドサービス全体のメンテナンスに都合を合わせる必要がある
これらの問題は一般的なWebサービスであれば問題ないレベルだったが、ドラコレの場合にはトラフィックが非常に高いことに加え、モバイルソーシャルアプリ特有の問題に対処しなければならなかった。その過程で障壁になったのが、クラウド内部の状態を自分たちで完全に把握・制御できないということである。そのため、ドラコレでは最終的にパブリッククラウドでの運用を断念したとのことだ。
この「モバイルソーシャルアプリ特有の問題」とは、「5秒問題」と呼ばれるものである。ソーシャルアプリの場合、ガジェットサーバをソーシャルネットサービスの運営会社が、コンテンツサーバを自社が用意する仕組みが一般的だ。コンテンツサーバは、GREEガジェットサーバからのリクエストに対して一定時間以内(GREEの場合は5秒)にレスポンスを返さなければならない。このルールに規定回数以上違反すると、一時的に公開を停止されてしまう。
ドラコレでは、瞬間的に負荷が急増した場合でも、この5秒ルールに違反しないように、5秒以上かかりそうな処理は途中で中断してエラーメッセージを返す処理を導入しているという。この「5秒キャンセル」機能の実装に当たっては、スクリプトの実行時間をサーバとの接続待ちやディスクI/O待ちの時間も含めて正確に計測するためにチューニングしており、時間指定の単位は1秒未満の制度になっているとの話である。
5秒問題に関連して、一部のレスポンスが極端に遅くなるという問題が発生したこともあるという。パケットを解析した結果、SYNパケットをロストすることがあり、これが2回続くこと5秒ルールを満たせなくなる、ということが判明した。さらに調査すると、このパケットロストはスイッチのキューで瞬間的にパケットがあふれるマイクロバーストが発生していることが分かった。この問題には、内部ネットワークのRTOの設定をSYNパケットのみ変更することで対処している。
こういった問題の把握や対策は、インフラ側の状態が完全に把握できなければ難しいため、自社サーバでなければ都合が悪いことがある、とのことだ。なお、前述の変更を行って半年、ドラコレでは1度も公開停止処置を受けていないそうだ。
関連リンク
2012/02/16 デブサミ2012【16-A-2】大ヒットソーシャルアプリ「ドラゴンコレクション」の裏側 〜 超高トラフィックを支えるアプリ・インフラの明日から使えるテクニック 限定紹介! #devsumi #devsumiA - Togetter
GREEにおけるNode.js
グリー 開発本部 エンジニア 久富木隆一氏とRobert J. Gould氏によるセッション「Node.jsテクノロジースタック for ソーシャルアプリケーション」では、Node.jsが取り上げられた。
GREEの新しいグローバルテクノロジースタックでは、Node.jsを採用し、サーバからクライアントまでを一貫してJavaScriptによって開発できる。グリーの久富木隆一氏とRobert J. Gould氏からは、ソーシャルアプリのバックエンドでNode.jsを活用するノウハウについての発表が行われた。
まず、GREEでは下記のような構成でNode.jsを活用しているとのこと。
Strict Modeを使ったコード品質の確保
node-browserifyでクライアントとサーバのコードを共有
node-seqによる非同期フロー管理
long-stack-tracesによるデバッグ情報の取得
console.errorなどをファイルにダンプ
非同期コードの例外をキャッチする独自モジュール(node-gree)
Node.jsはモジュールを追加することでさまざまな構成が可能なほか、自前でモジュールも作成できるため、多彩なニーズに柔軟に対応できることが大きな魅力である。JavaScriptはHTML5のキーテクノロジーでもあるため、HTML5のサポートを進めるグリーにとってもNode.jsはニーズにマッチした強力なツールであるといえる。
ソーシャルアプリのインフラはNode.jsが主役になるか〜デブサミまとめレポート(ソーシャル&インフラ編) - @IT
