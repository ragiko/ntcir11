Cのソースでおまじないのように必ず記述される#includeプリプロセッサ指令ですが、これの記述を間違えると外部のファイルが取り込まれないため、想定外のエラーがぞろぞろ出てくることがあります。
#記号を忘れた場合
リスト1は、前回紹介した九九プログラムのソースですが、先頭のincludeの前に#記号がありません(マークの箇所)。このソースをコンパイルすると、以下のようなエラーメッセージが出力されます ※1 。
C:\CLANG\SRC\ex1201.c 1: include の関数定義がおかしい
C:\CLANG\SRC\ex1201.c 1: < のあたりに構文上の誤りがある
C:\CLANG\SRC\ex1201.c 4: パラメタ宣言はできない
C:\CLANG\SRC\ex1201.c 4: main はパラメタリストにない
C:\CLANG\SRC\ex1201.c 4: { のあたりに構文上の誤りがある
C:\CLANG\SRC\ex1201.c 7: 警告: 関数 printf は宣言されていないので、int 型とみなす
C:\CLANG\SRC\ex1201.c 14: 警告: main が未使用
リスト1:include指令の前に#記号がない～(ex1201.c)
include <stdio.h> -------- 
int	main(void)
{
int i, j;
for (i = 1; i <= 9; i++) {
printf(" %d の段\n", i);
for (j=1; j<=9; j++) {
printf("%d x %d = %d\n", i, j, i * j);
}
printf("----------------\n", i);
}
return (0);
}
1つのミスで7個のエラー!?
1箇所間違っただけなのに、7件のエラーが出力されました。メッセージを個別に見ていきましょう。
C:\CLANG\SRC\ex1201.c 1: include の関数定義がおかしい
明らかにマークの箇所に対するエラーです。先頭に#記号がないため、コンパイラはincludeの行を『型の指定されていない関数の宣言』とみなして処理し、続く<stdio.h>の箇所でその定義が正しくないと判断します。
C:\CLANG\SRC\ex1201.c 1: < のあたりに構文上の誤りがある
上記のエラーに関連するエラーです。コンパイラがincludeを関数の宣言と見なしたため、当然それに続いて引数を示す()が記述されていると判断したものの、その代わりに<記号に出くわしてしまったためにこのエラーが発生します。
C:\CLANG\SRC\ex1201.c 4: パラメタ宣言はできない
4行目のint main(void)に対するエラーです。パラメタ(パラメータ)とは関数の引数のことです。これが宣言できないというのは、やはり最初のエラーに関連して、この行がincludeという関数宣言の続きと判断されているためです。
1行目(include...)の最後にCの構文の終わりを示す「;」記号がないため、この部分を1行目からの続きと解釈している訳です。
C:\CLANG\SRC\ex1201.c 4: main はパラメタリストにない
これも上のエラーと同様に、1行目のエラーに関連してint main(void)に対して発生したエラーです。mainという語がincludeという関数の引数には存在しない……という意味です。
この段階で、最初のエラーに起因する「includeが宣言されていない関数の定義かもしれない」という判断がまだ続いていることが分かります。
C:\CLANG\SRC\ex1201.c 4: { のあたりに構文上の誤りがある
これも、1行目のincludeを宣言されていない関数の定義と見なしたために発生するエラーです。上記2つのエラーにあるとおりint main(void)が無効なのですから、続く処理ブロックの開始記号「{」も文法的に間違っていると判断されます。
C:\CLANG\SRC\ex1201.c 7: 警告: 関数 printf は宣言されていないので、int 型とみなす
これもまた、1行目のincludeに関連するエラーです。1行目が正しく処理されていないため、printfを含む標準関数の宣言を行っているstdio.hが取り込まれていません。よって、printf関数は宣言されてないことになります。
そのため、宣言されていないまま使用したprintf関数に対していわゆる「暗黙のint型」 ※2 が適用されるのです。
これは致命的なエラーではなく警告(warning)なので、コンパイルは中止されません。
C:\CLANG\SRC\ex1201.c 14: 警告: main が未使用
これもやはり、1行目のエラーに関連したものです。int main(void)というmain関数の定義行がincludeという関数定義の続きと見なされて無効になったため、Cプログラムの入り口であるmain関数が存在しないと判断されたのです。
これも警告であるため、コンパイルは中止されません。main関数を定義しないCのプログラムも存在するためです。 ※3 
もう一度基礎からC言語 第12回 エラーメッセージと対処方法(2)～1つのミスとたくさんのエラー #includeプリプロセッサ指令関連
