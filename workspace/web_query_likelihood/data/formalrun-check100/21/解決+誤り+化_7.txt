3.1.1 Javaヒープの低アドレス空間でメモリーを確保できない
64-bitプラットフォームでは、JRockitでJavaヒープの低アドレス空間(4GB)の領域が不足し、クラスの割当て時にOutofMemoryエラーが発生することがあります。
このエラーを回避するには、次のように-XX:InitialClassBlockMemoryオプションを使用して、JVM起動中に4GBの低ヒープでメモリーを確保します。
-XX:+UnlockDiagnosticVMOptions -XX:InitialClassBlockMemory=100M
3.1.2 マルチコア・マシンでデフォルト数のガベージ・コレクション・スレッドを使用中にスレッドが飢餓状態になる
-XXgcThreadsオプションで指定するガベージ コレクション・スレッドのデフォルト値は、マシンのコアおよびハードウェア・スレッドの数に基づいていました。
ガベージ・コレクションのヒューリスティックが改善され、ガベージ・コレクション・スレッドの数が動的に選択されるようになりました。大きなマルチコア・マシンでは、オーバーヘッドを減らすために、より保守的なガベージ・コレクション・スレッド数が動的に選択されるようになります。
3.1.3 JRockit JVMでのSUIDまたはSGIDの設定中のエラー
Javaライブラリに対してSUIDまたはSGIDを設定しない場合、有効なユーザーが実際のユーザーと同じになりませんでした。また、JRockit JVMを起動できませんでした。
この問題は修正されました。
Oracle JRockit JDK R28で解決された問題
