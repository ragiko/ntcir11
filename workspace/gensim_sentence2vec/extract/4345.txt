 僕がこのCodeZineに寄せた記事の中にはソートを題材としたものがいくつか(いくつも?)あります: マージソート、ヒープソート、そしてマルチスレッドで高速化した単純選択ソート。僕がソートをネタにする理由はいたって単純、「楽しいから」なんですね。
ソートってば期待される結果は極めて単純明快でありながらアルゴリズム次第で実装のややこしさと計算量がドラスティックに変化します。ソートは数理科学の基礎かつキモの一つであり、「アルゴリズムの華」だと思っています。 ...とは言いながら、実務でソートを書くことはまずもってありません。多くの場合ライブラリで提供されているものを使えば大抵事足りてしまいますからね。C++においてもそこらへんの事情は同じ、標準C++ライブラリの <algorithm> にはソートおよびソートがらみの関数群が数多く用意されています。 このアーティクルでは標準C++ライブラリの提供するソートをざっくりと眺めてみましょう。sort: 定番ソートアルゴリズム その名のとおりのソートです。ランダムアクセス可能なコンテナ、単純に言えば x[n] によって n番目の要素にアクセスできる(例えば配列, array, vectorなどの)コンテナx の要素を昇順(小さい順)に並び替えてくれます。並び順を決定する要素の大小関係は、コンテナの要素 x, y に対し x < y が真であるとき「x は y より小さい」とします。
// 配列, array, vector を昇順にソートする
int a[N];
array<int,N> ar;
vector<int> v;
sort(a, a+N); // 配列
sort(ar.begin(), ar.end()); // array
sort(v.begin(), v.end()); // vector

