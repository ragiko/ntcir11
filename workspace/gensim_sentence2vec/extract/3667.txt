
Photo by Ahmed Hashim今回のpaiza開発日誌は片山がお送りします。近年Webビジネスにおける開発業務は、システムが売上や収益と直結しているため、素早い開発が求められるようになり、開発と運用が協力する継続的インテグレーションやDevOpsという概念が重要になってきています。逆にSIerでは開発と運用・保守の分離がされたままで、特にITエンジニアの成長阻害要因になっていると考えられます。この「開発と運用保守の分離」は、SI業界で働くITエンジニアにとっては、「人月商売」「多重下請け構造」と並ぶ三つ目の問題になっているのではないかと思います。そこで今回はITエンジニアがキャリアを形成していく上で、開発と運用保守の分離がもたらす弊害について考察してみたいと思います。
運用・保守とは何か?
SIerではシステム開発の場におい、大きくは「開発チーム」と「運用・保守チーム」という仕事に分離してチームを分ける事が一般的です。「運用・保守チーム」のほうは「運用」と「保守」という二つの概念が一つにまとめられています。Webサービスの開発で一般的になってきているDevOpsという概念では、Dev(開発)とOps(運用)が密接に連携しようという事であり、「保守」については触れられていませんが、開発、運用、保守とはそれぞれ何を指すのでしょうか。
運用 = 主にIT基盤、インフラの運用
保守 = アプリケーション保守(バグ修正、追加開発)
開発は言わずもがなとして、運用と保守について、人によってさす部分が違う事もあると思われるので、今回は運用と保守を上記の定義でとらえて考察を進めていきたいと思います。
「開発」と「運用・保守」分離の弊害
開発と運用・保守分離の何が問題かというと、「運用」と「保守」は全く性格の異なる仕事であり、「保守」はむしろ「開発」とほぼ同じ内容なのに「開発」と「運用、保守」と分けてしまっている事が大きな問題です。この「運用・保守」というおかしな抱き合わせによって、そこで働くITエンジニアは次のような弊害が発生します。
運用・保守にいると技術力が身につかない
開発側が保守性を考えなくなる、無責任になる
サービスを作るのではなく物を作るだけになってしまう
これらの弊害について順番に見ていきましょう。
弊害1.運用・保守側にいると技術力が身につかない
SIerの「運用・保守チーム」に良いイメージを持つ人は少ないでしょう。SIerでは基本的に「開発チーム」が花形で、「運用・保守チーム」はスキルの低い人が回されがち、という事が多く見受けられます。そのイメージ通り、SIerの「運用・保守」は、本番環境へのデプロイを手順書に従って行い、問題が起きた場合には、申請書に書かれた手順に従った対応をしたり、上手くいかなかったらアップ前の元の状態に戻し、連絡して仕事終了というような、手順書に従った部分的な仕事が多く見受けられます。保守の面でも、月の運用保守費用決まっており、その費用内(業時間内)でバグ対応などの最低限の事を行う、というレベルにとどまる事が多くなります。またある程度の規模の追加開発は月の運用保守費用で収まらないため、開発チームが担当する事になり、運用保守チームは技術的なスキルアップはほとんど望めない、作業的な仕事が殆どになっていまいます。
弊害2.開発側が保守性を考えなくなる、無責任になる
Webサービスであればサービスローンチはスタート地点にすぎず、その後どれだけ市場ニーズにフィットできるようプロダクトを改善できるかが勝負どころになりますが、SIerだと開発チームは「納品したらそこで仕事は終了」です。「納品したら仕事が終わる」という立場だったら、多少保守性が悪かったり、スパゲッティコードになっていも、納品する事が第一義に来るという力学が働くため、コード品質はどうしても悪くならざるを得ません。悪くいってしまえば「多少バグの有るコードでも納品時に発覚しなければ、あとは知った事は無い」という人が現れてもおかしくないのです。性善説に任せるしかない仕組みとなっています。
弊害3.サービスを作るのではなく物を作るだけになってしまう
開発チームはローンチしたら仕事は終了であり、また運用保守チームは何故このシステムが作られたかもよくわからず、月額運用保守費用の中でだけ仕事をしているようになると、サービスをより良い物にしようという力学は全く働きません。開発チームは「物」を作る事が目的になり、運用保守チームは「物」が動く状態を保つだけが目的となってしまいます。物を作る事もそれはそれで一つ大きな価値ではありますが、より良いサービスを作れるという事のほうが、ただ物を作るより価値が高いのは明らかです。
このように「開発」と「運用保守」の分離した体制では、特に運用保守チームでは技術力の向上は望めず、開発チームもITエンジニアの本質的な価値である「より良いサービスを生み出す能力」を高める事が出来ない構造となっています。
SIerの「開発」と「運用保守」分離がまねく3つの弊害 - paiza開発日誌
