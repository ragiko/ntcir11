Finishingにむけて解決すべき問題の種類とその解決方法
細菌ゲノムを次世代シーケンサーで決定しようとしても、単に配列データをアッセンブルするだけでは完全決定にはいたらないのが現実です。Finishingするにあたり解決すべき問題は大きく分けて5つあります。これらの問題について本マニュアルでは以下の6つの言葉で呼びます。GenoFinisherはクオリティ問題以外については、それを解決するための機能を提供しています。
重複問題
ゲノム中のリピート(重複配列)について考えます。例えば1 kbのある配列がゲノム中に2つある場合 (AおよびBとします。またAの直前の配列をa1、直後の配列をa2とします。同様にBについてはb1とb2とします)、1kbよりも短いリードデータをいくら解析しても、2つあるリピート領域それぞれについてその前後が、どれとつながっているかは明らかにできません(a1-A-a2なのかあるいはa1-A-b2なのか)。これを明らかにするには、a1、a2、b1、b2にそれぞれアニールするprimerを用いて、4通りのPCRを行い、どれとどれが繋がっているかを明らかにする必要があります。また後述するように、バリエーション問題がありますので、必要に応じてPCR産物の塩基配列決定を行うか、AceFileViewerなどを用いてリピートコンティグを詳細に解析する必要があります。
GenoFinisherはリピートによって繋がり方が不明な箇所を自動的に抽出して、解決に必要なPCRに関するデータを出力します(primerの配列、primerの分注方法、予想サイズなど)。
ペアエンドデータが得られている場合、基本的には重複問題は問題になりません(ただしゲノム中に長いリピートが存在すると、重複問題が残ることになります)が、リピートの存在に起因する「バリエーション問題」は解決されません。
重複問題の例: コンティグ75 (647 bp)はリピート領域。コンティグ30がコンティグ75を中継してコンティグ8に繋がっているのか(30-75-8)、コンティグ37に繋がっているのかわからない(30-75-8)。30-75-8が正しいなら、36-75-37のはず。
バリエーション問題
newblerはコンティグを作るにあたり多数決を採用しているようです。リピート領域でない部分についてはそれで良いかと思うのですが、例えばゲノム中にある挿入配列が10コピーあり、そのうち1コピーに1塩基のバリエーションがあったらどうでしょうか?多数決(9対1)によってそのようなバリエーションは無視されてしまいます。このような場合、当該塩基には高いスコアがつけられていることにも注意すべきです。言い換えれば、重複度が高いリピート領域に関しては仮に全部の塩基に高いスコアがついていたとしても、配列に間違いがないことにはならないということです(逆に、あるコンティグの重複度が2の場合で、その塩基すべてに高いスコアが付いている場合、リピートの配列にバリエーションはないと推測できます)。
ペアデータがある場合では、アッセンブルするとスキャフォールドが作られます。スキャフォールドについては454Scaffolod.txtファイルに記述されていますが、スキャフォールドは基本的に、重複コンティグでないコンティグの序列であり、各コンティグの間にはGapが存在しています。454Scaffolds.fnaファイルを見るとこのGapはNの連続として表現されています。ここでFinishingに向けてすべきことは、このNNN・・・の部分をPCRで増幅して配列を決定し、NNN・・・の部分を置き換えることです。このGapの部分は、リードデータがないためにNNNになっていると思いがちですが、実際はそうではありません。コンティグ11から別のコンティグ12に行き着き得るルートを探索すると(GenoFinisherにその機能があります)、いくつかのルートに限定される場合がほとんどです。例えば、コンティグ11の後はコンティグ52でその次がコンティグ12であることがわかるということです。ではなぜあえてnewblerはNNNで出力するのかということに関しては、このようなコンティグ(ここではコンティグ52)はリピートコンティグであり、配列中に誤りがある可能性があるためである、と推測されます。
また、gapを埋めることに関して、newblerはリードデータを余すところなく使えているかと言えばそうではありません。ペアデータとなるデータを利用することで(追加の実験なしで)gapを決定することが可能な場合がすくなからずあります。AceFileViewerでは、重複コンティグがどのようなリードによりできているかを詳細に見ることができます。AceFileViewerでは、重複コンティグをつくるリードのうち、指定したコンティグと関連があるリードのみを表示することができます。この機能により、例えばcontig123がリピートコンティグであるとして、contig4とcontig5の間にあるcontig123について、配列に修正すべき箇所があるかどうかを知ることができ、また多くの場合、どのように修正すべきかを知ることができます。
孤独末端問題
コンティグの片方の端、あるいは両方の端が、どのコンティグと繋がっているかわからない(454ContigGraph.txtに記述されていない)末端を孤独末端と呼びます。孤独末端はそのつながり先がわからないコンティグですので、事前の予想に基づいてPCRができる重複問題の場合と比べて、困難です。孤独末端のつながり相手を探すには2つの方法があります。
孤独末端間で総当たりPCRを行う。
ゲノムを鋳型にして、シーケンス反応を行い、どのコンティグと繋がっているか調べる。
ゲノムを鋳型にしたシーケンス反応のプロトコールについてはJ. Bacteriol. 2012, 194(16):423を参照してください。なお、ゲノム鋳型シーケンスは、抽出した全ゲノムDNAそのものを鋳型としてシーケンス反応に使う方法であり、一度PCRなどで増幅した後にその産物を鋳型にシーケンス反応を行う方法ではありません。
なお、454Finisherの作者があるゲノムを決定した経験では、孤独末端は11個(奇数!)しかなかったのですが、ゲノムを鋳型としたシーケンスによって、孤独末端の繋がり先がリピート領域であることが判明したことがありました。なお、6個のGAPはいずれも大きな2次構造を取り得る配列のすぐそばに位置しており、コンティグの末端の配列数塩基の配列が誤っていました。このために、アッセンブラが別々のコンティグとして出力したものと思います。GAPのサイズは最大で10塩基程度でした。
スキャフォールドがある場合、スキャフォールド内のgap前後のコンティグの端が、どのコンティグとも繋がっていないことがあります。これはリードが十分に無いことによってgapができてしまったものと思われます。リードが不足していることによって生じたgapを真性gapと呼びます。ここで敢えて「リードが無い」、ではなくて「不足している」、と表現しているのはgapをカバーするようなリードが少数あってもnewblerがリードの本数を有意と見なさず、結果として2つのコンティグに分断されていることがしばしばあるからです。コンティグの末端を形成しているリードをAceFileViewerで解析すると、コンティグから数本のリードが外側に突き出しており、その配列がgapの向こう側のコンティグであるということがしばしばあります。また、gap前後のコンティグの配列が数塩基から数十塩基に渡って同じであり、これらがオーバラップしていると推測される場合もあります。AceFileViewerでは、コンティグを選択して、そのコンティグに含まれるペアの末端間の距離の分布を調べることができます。また、2つのコンティグを指定して、gapを挟んでいるペアについて、末端間の距離の分布を調べることができます。この機能は、gapの長さを推定するのに、言い換えれば、2つのコンティグがオーバラップしているかどうかを判定するのに有用です。
ヒゲ問題
454で得る多数のリードの中には、本来ゲノムに含まれないと考えられるものが小数含まれるようです。これは、1) 細菌ポピュレーションの中に、ゲノム中に逆位などが起きた個体が一定の割合で存在していたため、あるいは、2) 454でのシーケンス反応中に生じたアーティファクトの塩基配列が読めてしまったため、であるかと思います。このようなもののうち、ある程度存在数が少ないものに関してはnewblerは無視するようになっているようですが、ある程度の本数に達すると、無視されなくなるようです。無視されるべきリードが、あらぬコンティグ同士をつないでいると解釈されてしまった場合、この繋がりは比較的薄い(つなぐリード数が少ない)ものとなります。GenoFinisherでは、コンティグ間をつなぐリードに比例した太さの赤線が、コンティグ間に引かれます。そのためこのような薄い繋がりは、薄い線でつながれることになります。このような意味のない(Finishingの過程で無視されることになるであろう)薄い繋がりを、本マニュアルでは「ヒゲ」と呼びます(薄い繋がりについては、無視するような設定ができます)。
ペアデータがあり、十分少ない数のスキャフォールドが得られている場合はヒゲ問題に悩まされることはあまりないかと思います。ただし、ヒゲは、何らかのミスアセンブルが原因となって波及的に生じているケースもあるようですので、注意が必要です。
コンティグ66とコンティグ29をつないでいるのがヒゲ。このヒゲのせいで、コンティグ66とコンティグ90は2つのコンティグとしてnewblerによって出力されていると思われる。赤線の太さが、つなぐリードの数に比例していることに注意。またコンティグのカバレージはコンティグ番号の右側に示されている(コンティグ54のカバレージは32.3).
クオリティ問題
良く知られている通り、454シーケンサーはホモポリマーサイトを苦手とします。要するに同じ塩基が連続している場合に、エラーが多いということです(ゲノムが既知の株について、454のリードを得て付属のGS mapperで解析すると、どれ位間違えたかを知ることができます)。特にリピートのコピーの間にホモポリマーサイトの塩基の数に違いがある場合、各コピーについて正確に塩基数決定することは困難です。これに関しては、454以外のシーケンスデータを追加しない限り、解決しません。
作者は、454のリードだけではゲノムのFinishingは無理であると考えています。
ミスアセンブル問題
newblerのアセンブルはかなり良いようですが、それでもミスアセンブルはあるようです。部分的にdepthが異常なとき、上述の様に、リーズナブルではない「ヒゲ」が見られるとき、1コピーであると考えられるコンティグの中(特に末端付近)に、バリーエションがあるときなどはミスアセンブルの兆候ですので、良く解析する必要があります。
リピートのリピート問題
リピート問題であるとも言えますが、Finishingの障壁となることが何度かありましたので取り上げておきます。同じリピートが比較的多数コピー連続すると、その箇所の決定が非常に困難になります。例えば、ある400塩基の配列が10コピー程度タンデムに並んでいる場合です。例えば10コピーの内訳として4パターンあり、それぞれのパターンのコピー数が3、3、2、2である場合に、各パターンの序列を知ることは非常に困難です。このような箇所については、リピートを構成するリードをAceFileViewerで集めた上で、ShortReadMangerでリードをキュレーションした後に、もう一度newblerによってきつい条件で(100%一致を指定して)アッセンブルすることで解決することが何度かありました(しないこともありました)。また各コピーが全く同じときには、10コピーなのか11コピーなのかわからない、ということもあります(サザン解析でコピー数を決めたことがありました)。
ヘテロ問題
細菌集団の一部が遺伝学的に異なるように積極的に変化していくような現象がフェイズバリエーションという言葉で知られています。DNAを調整するのに用いた微生物集団が完全にクローナルならば良いのですが、一定の割合でゲノム構成が異なる株が出現しているような場合、Finishingは困難になります。クローナルでないポピュレーションの中に存在するいくつかのゲノム構成パターン間の関係を推察する上で有用な機能がAceFileViewerにありますが、なるべくクローナルな集団からDNAを調整するように心がける必要があります。
GenoFinisher homepage
