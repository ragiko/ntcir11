
・サービスコールのソースコードは以下のようになります。
/****************************************************************************/
/*!
*  @brief  固定長メモリプールの削除.
*
*  @param  [in]    mpfid   メモリプールID番号.
*
*  @retval エラーコード.
*/
ER      del_mpf( ID mpfid )
{
ER ercd;
wi_CommonLock();
//! 固定長メモリプールを削除する.
ercd = wi_DeleteFixedMemPool( mpfid );
wi_CommonUnlock();
return ercd;
}
削除するメモリプールのID番号を引数として固定長メモリプール削除関数を呼び出します。
固定長メモリプール削除関数
固定長メモリプール削除関数のソースコードは以下のとおりです。
/****************************************************************************/
/*!
*  @brief  固定長メモリプールの削除.
*
*  @param  [in]    id      メモリプールID番号.
*
*  @retval エラーコード.
*/
ER      wi_DeleteFixedMemPool( INT id )
{
ER          ercd;
WIMPFOBJ    *p;
//! メモリプールIDのオブジェクトを取得する.
p = (WIMPFOBJ *)wi_FindObject( id, TMAX_MAXMPF, ObjList, &ercd );
if( !p ){
return ercd;
}
//! リストから該当するメモリプールを取り除く.
wi_DelObject( (WIHDR *)p, &ObjList );
//! 待ちタスクキューを解放する.
wi_WakeupDelResource( p->WaitQue );
//! メモリプールのバッファを解放する.
SAFE_RELEASE( p->MemBuf );
//! 固定長メモリプール・オブジェクト構造体を解放する.
SAFE_RELEASE( p );
return E_OK;
}
固定長メモリプール削除関数は以下のような処理を行います。
引数で指定された固定長メモリプールID番号に該当する固定長メモリプール・オブジェクトを取り出します。
固定長メモリプール・オブジェクトのリストから削除するオブジェクトを外します。
削除する固定長メモリプールのメモリ解放待ちをしているタスクを全て起床させます。
固定長メモリプールのメモリバッファを解放します。
固定長メモリプール・オブジェクトのために確保したメモリを解放して処理を終了します。
Windows版iTRONサービスコールの作成 (固定長メモリプール)
