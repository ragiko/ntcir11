まず、スクリプトの内容を紹介しよう。スクリプト全文は以下の通り。
function Honyaku() {
var selection = DocumentApp.getActiveDocument().getSelection();
if (!selection) {
DocumentApp.getUi().alert(" テキストが選択されていません ");
}
else {
var elements = selection.getSelectedElements();
for (var i = 0; i 
今回のスクリプトのポイントは、文書内のどの部分が選択されていても対応できるように、段落の一部を選択しているか段落全体を選択しているかで、処理を分岐している点だ。
順を追って見ていくと、冒頭の、文書の選択領域を取得して変数「selection」に格納する処理と、if文でこの「selection」の値が「null」かどうか(文章が選択されているかどうか)を判断する処理は前回と同様だ。
次に、「getSelectedElements()」メソッドで、選択範囲の段落要素(Element)を配列変数「elements」に格納し、この段落要素をfor文でひとつずつ処理していく。for文中のif文では「isPartial()」メソッドを使用して抜き出した段落要素が、「段落全体」なのかそれとも「段落内の一部(Part)」なのかをチェックしている。
段落内の一部の文章の場合には、選択範囲がその段落内の何文字目から始まり何文字目で終わるのかを調べてから、その部分のみ抜き出してを翻訳を行い、最後に「insertText()」メソッドで、選択範囲の最後の文字+1文字目に翻訳文を挿入している。
選択範囲が段落全体の場合には、段落内容をテキスト形式で取得し変数「text」に格納。翻訳を実行した後、こちらは「setText()」メソッドで、段落全体の内容を、もとの文章を格納した変数「text」と翻訳文を格納した変数「translatedText」で置き換えてるという処理だ。
以下は、段落内の一部を選択して実行した例と、複数段落を選択して実行した例になる。
Google Apps Scriptを使ってみよう! - サテライト原口社長のスクリプト指南 (8) 選択した文章をGoogle Apps Scriptで翻訳(2) | マイナビニュース
