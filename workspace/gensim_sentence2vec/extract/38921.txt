1. はじめに
「高齢者・障害者等配慮設計指針−情報通信における機器,ソフトウェア及びサービス− 第3部:ウェブコンテンツ - JIS X8341-3:2004」は2004年6月に公示,出版されたウェブコンテンツのアクセシビリティガイドラインである。このJISは,ウェブコンテンツをどのように制作すればよりアクセシブルなものにすることができるかをウェブの開発・制作者の立場でまとめたもので,多くの例示によってその具体的な実現方法の例を示し,使いやすいガイドラインを目指して作成されたものである。しかし,JISは頻繁に改定されるべきでないとの考え方から,規定はできるだけ技術に依存しないように記述されている。また,規格発効後,日本規格協会を通じていくつかの質問や意見が寄せられた。それらの疑問に答えることもこの技術解説の目的のひとつである。そこで,本体規格を技術に即した視点からよりわかりやすくし,JIS X8341-3:2004の正しい理解を促進するために技術解説を策定することとなった。この文書は,日本規格協会情報技術標準化研究センター(INSTAC)に平成16年度に設置された,情報アクセシビリティの国際標準化委員会ウェブアクセシビリティ国際規格調査研究部会(WG2)において作成された。
なお,この技術解説はJIS X8341-3:2004を補足するものであり,規格ではないことに注意されたい。
目次へ [1]
2. 目的
本体規格を技術に即した視点からよりわかりやすくし,JIS X8341-3:2004の理解を促進するために,この技術解説は,JIS X8341-3:2004の第5章及び第6章を対象に,その内容の技術的背景を明らかにする。その実現方法の例を技術に即して具体的に示すことを目的としている。
目次へ [1]
3. 記述方針
次の点を明確にして記述した。
ハイパテキストマーク付け言語(HTML 4.01,XHTML),及び段階的スタイルシート(CSS)のバージョンを明確にして,ウェブコンテンツの製作現場でJIS X8341-3:2004を用いようとしたときに,どのようなテクニックが利用可能かを示す。
規格票を理解するうえで誤解なく,正しく理解できるようにするための情報を提供する。
可能な場合には,チェック方法を示す。
可能な限り具体的な例示をおこなう。
なお,この技術解説は規格票を理解し運用するための参考であって,規格ではない。また,本書の各々の技術解説は規格票の示す基準を満たそうとするときに用いることができる技術を例示的に列挙したものであって,それらを用いて開発されたウェブコンテンツがJIS X8341-3:2004に準拠していることを保証するものではない。
目次へ [1]
4. 技術解説の使い方
この技術解説では,JIS X-8341-3の第5章,第6章の要件を「背景と問題点」「関連する要素」「関連項目」「技術解説」「ソリューション」「注意事項」に分けて解説している。
背景と問題点
その要件に関連して高齢者や障害のある人々がどのような問題に遭遇する可能性があるか,またその背景となる技術について解説する。
関連する要素
HTML,XHTMLの関連する要素またはその属性で関連するものを列挙している。
関連項目
同時に参照して欲しい要件を列挙してある。
技術解説
要件を理解するための補足的な解説を記述している。JIS本文には書かれていない技術的な背景や数値などを含む。
ソリューション
この要件を満たすための技術的な方法を示している。この中から一つ,あるいは複数の手法を選択する。
注意事項
関連する注意事項が記載してある。
目次へ [1]
5. JIS X8341-3 第5章 "開発・制作に関する個別要件" に関する解説
5.1 規格や仕様への準拠
5.1.a 規格・仕様・文法への準拠
ウェブコンテンツは,関連する技術の規格や仕様,および文法に準拠して作成しなければならない。
(対応:JIS X8341-3:5.1 a)
背景と問題点
一般によく使われているブラウザでは,HTMLなどの文法に厳密に準拠していなくても,文法のエラーを自動的に回避して表示する機能を持っている場合がある。しかし,このような文法解釈の自動的な修正機能はウェブブラウザに依存した機能であり,あらゆる環境で有効である保証はない。音声ブラウザやスクリーンリーダーなどの高齢者障害者支援技術は,これらの問題のあるHTMLを一般的なブラウザと同等に解釈できるとは限らない。また,アクセシビリティチェックツールは文法が正しくないと,判断を誤ってしまう可能性がある。したがって,アクセシビリティの改善を行う前提条件として仕様や文法に正しく則ってコンテンツが作成されている必要がある。
関連する要素・宣言
meta
DOCTYPE宣言
関連項目
なし
HTML,CSSなどのウェブコンテンツを記述するための言語やソースコード,技術は,W3C,ISO,又はJISが定めた規格,あるいは勧告に準拠することを求める。ただし,このガイドラインはW3CのWCAGに準拠することを求めているわけではなく,一般的な文法等の仕様に準拠することをもとめている点に注意が必要である。あくまでも,一般的な技術の仕様や文法についてであって,アクセシビリティに関する基準については,X8341-3:2004を用いる。準拠すべき規格,勧告の代表的なものを以下に示す。この中から,利用している技術だけを選択して,準拠しているかどうかを確認すべきである。
HTML 4.01 Specification
W3C Recommendation 24 December 1999
http://www.w3.org/TR/html4
JIS TR X0033: ハイパテキストマーク付け言語(HTML)4.0
この標準情報(TR)は,HTML 4.0 Specification W3C Recommendation, revised on 24-Apr-1998を翻訳し,技術的内容を変更することなく作成されたTR X0033:2000に,HTML 4.01 Specification W3C Recommendation 24-December-1999との差分が,技術的内容を変更することなく附属書1として追加されている。
XHTML™ 1.0 The Extensible HyperText Markup Language (Second Edition) - A Reformulation of HTML 4 in XML 1.0
W3C Recommendation 26 January 2000, revised 1 August 2002
http://www.w3.org/TR/xhtml1
XHTML™ 1.1 - Module-based XHTML
W3C Recommendation 31 May 2001
http://www.w3.org/TR/xhtml11
Modularization of XHTML™
W3C Recommendation 10 April 2001
http://www.w3.org/TR/xhtml-modularization
JIS TR X0080:2003 XHTML 1.1−モジュールに基づくXHTML
XHTML™ 1.1 - Module-based XHTML W3C Recommendation 31 May 2001が,この標準情報(TR)と一致している。
Cascading Style Sheets, level 2 revision 1
CSS 2.1 Specification
W3C Candidate Recommendation 25 February 2004
http://www.w3.org/TR/CSS21/
JIS TR X 0032:2000 段階スタイルシート水準2(CSS2)
Cascading Style Sheets, level 2 CSS2 Specification W3C Recommendation 12-May-1998が,この標準情報(TR)と一致している。
JIS TR X0093:2003 同期化マルチメディア統合言語(SMIL 2.0)
Synchronized Multimedia Integration Language (SMIL 2.0) W3C Recommendation 07-August-2001が,この標準情報(TR)と一致している。
Synchronized Multimedia Integration Language (SMIL 2.0)
http://www.w3.org/TR/2001/REC-smil20-20010807/
Scalable Vector Graphics (SVG) 1.1 Specification
W3C Recommendation 14 January 2003
http://www.w3.org/TR/SVG11/
JIS TR X0095:2003 変倍ベクタ図形(SVG)1.0
Scalable Vector Graphics (SVG) 1.0 Specification W3C Recommendation 04-September-2001が,この標準情報(TR)と一致している
これら以外の規格,勧告,技術を用いる場合にもできる限りそれらの仕様に合致するよう開発するとよい。
XHTMLなどXMLを基本にした仕様の場合,その文法はDOCTYPE宣言によって示されたDTDで指定されるが,その場合ローカルなDTDを指定することは好ましくない。ウェブブラウザや高齢者障害者支援技術がDTDを正しく解釈する能力を持っているとは限らず,プログラムによって固定的な解釈をおこなう可能性があるからである。したがって,やむをえない事情がある場合を除いて,上記のマーク付け言語などで定義されたDTDをそのまま使うほうが良い。
本ガイドラインは,必ずしも最新の仕様を用いることを要求してはいない。例えば,段階的スタイルシートに現時点で最新のCSS 2.1を使うことを要求しているわけではない。最新の規格,勧告,または仕様を用いることは好ましいが,それらをウェブブラウザや高齢者障害者支援技術が正しく解釈,処理できない場合には,かえって混乱を招くこともあるからである。
また,マーク付け言語の仕様においてX8341-3を用いる場合に,Strictな要素だけを用いるべきか,あるいはTransitionalな要素を用いても良いと考えるべきかと迷う場合があるかもしれない。本ガイドラインでは,仕様に準拠することだけを求めていると考えることができるので,StrictでもTransitionalでも許容するというのが原則である。しかし,一般的にTransitionalな要素の中には,アクセシビリティの観点から見て好ましくない要素が残されており,Strictな要素だけを用いたほうがアクセシブルなページを容易に開発できることが分かっている。したがって,Transitionalを用いる場合にも,Strictを基準として用いて,やむをえない場合だけTransitionalな要素を使うようにするとよい。
文字コードの指定を正しくおこなうことも重要である。HTML文書でマーク付けされた文字コードの指定と,実際に用いた文字コードが一致しないと,利用者の環境によっては文字化けをおこしてしまう。この問題も,高齢者・障害者だけでなく,広く一般の利用者が混乱する原因となるので,注意が必要である。
ソリューション
次の方法を選択して,あるいは組み合わせて用いる。
1) 使用する言語の明確化
制作,開発に当たっては,使用するHTML等のバージョンをあらかじめ決定しておき,それらを用いることを制作担当者,開発担当者に徹底するとともに,正しい文法や仕様で記述できるよう教育する。また,このことがアクセシビリティの確保・向上に役立つことを理解させる。
2) DTDの定義 
HTML,XHTML,XMLにおいてはDOCTYPE宣言を用いてDTDを定義する。
例1 HTML 4.01 Strictを用いる場合
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd">
例2 HTML 4.01 Transitionalを用いる場合
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
例3 XHTML 1.0 Strictを用いる場合
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
この例にないローカルなDTDを用いる場合は,代表的な高齢者障害者支援技術によって利用可能なことを確認する必要がある。
3) 文法の妥当性
DTD宣言の内容にしたがって文法が妥当(valid)であるかどうかを確認する。確認の方法には,文法チェッカーを用いる方法とオーサリングツールに内蔵されたチェッカーを用いる方法とがある。オーサリングツールのチェッカーを用いる場合には,そのチェッカーがチェック可能な言語や仕様を確認しておく必要がある。
例1 W3CのMarkup Validation Serviceを用いる。
http://validator.w3.org/
例2 W3C CSS検証サービスを用いる。
http://jigsaw.w3.org/css-validator/
例3 市販のオーサリングツールを用いて文法を点検する。
Macromedia Dreamweaver の「ファイル」メニューの「ページのチェック」の「マークアップのバリデート」を実行する。
例4 インターネット上の文法検証サービスを用いる。
http://openlab.ring.gr.jp/k16/htmllint/htmllint.html
4) 文字コード
文字コードの宣言と実際に記述した文字コードが一致することを確認する。
例1 言語コードは,meta要素を用いて head内で次のように定義する。
<meta http-equiv="Content-Type" content="text/html; charset=EUC-JP">
<meta http-equiv="Content-Type" content="text/html; charset=iso-2022-jp">
<meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
例2 コンテンツを,文書作成アプリケーションの独自ファイルから,HTML形式などに変換して持ってくる場合,文字コードが一致しているかどうかを確かめる。
独自のファイル形式ではサポートされている文字でも,シフトJISやUTF-8などのHTMLの文字コードに含まれない文字は化けてしまうことがある。文字実態参照や数値文字参照を使うことも検討すべきである。また,対象とする音声読み上げアプリケーションで,どう読み上げられるかも確認しておく必要がある。
5) 機種依存文字
機種依存文字や携帯電話で用いられる絵文字(携帯端末用コードでよく使われるもの)が用いられていると,音声ブラウザ等で正しく読み上げられないばかりでなく,一般的なウェブブラウザでも正しく表示されないことがある。これらは,アクセシビリティというよりはむしろユーザビリティにおける問題と考えられるが,高齢者などが混乱することが考えられるため,配慮が必要である。機種依存文字は丸付き文字,ローマ数字,単位記号及び外字などがある。図1に機種依存しない文字の例を示す。
例1 機種依存しない文字の例(ISO-2022-JP)
機種依存しない文字の例(ISO-2022-JP)
JISコード
文字
名称
X 8341-3:2004 「高齢者・障害者等配慮設計指針−情報通信における機器,ソフトウェア及びサービス− 第3部:ウェブコンテンツ」技術解説 第1.1版 委員会ワーキングドラフト(7月22日版)
