
音響モデルが triphone であるかどうかは,内部の定義モデル名から自動判別される.モデル名が '+' や '-' を含んでいると,triphone モデルであると認識される.
トライフォン使用時は,同時に HMMList ファイルも指定する必要がある.
HMMlist ファイルは,辞書上の音素表記と音響モデル内の HMM 名のマッピングを指定するものである.特にトライフォン使用時は,登場しうる全てのトライフォンに対して,対応する定義HMM名へのマッピングを記述したHMMList を与える必要がある.HMMList ファイルの仕様は本章の別節を参照のこと.
Julius は HTK の ASCII形式のHMM定義ファイル (MMF) を読み込むことができる(HTKのバイナリ形式を読み込むことはできない).全ての音素定義を1つにまとめた単一の MMF ファイル(hmmdefs) として与えることができる.
[7]
ファイルは gzip で圧縮されたものをそのまま読み込める.
使用する際には,オプション "-h" で指定する.
共有マクロは ~t (遷移), ~s (状態),
~m (分布), ~h (モデル),
~v (共分散)を扱える.4.1 以降では,さらに 
~w (ストリーム重み), ~p (混合分布マクロ: HTS 拡張)を扱える.これ以外の共有マクロ (~u ~i
~x等) には現バージョンでは対応していない.
定義ファイル中に "<TMix>" が含まれている場合,Julius はそのモデルを
Tied-mixtureモデルとして扱う.この場合,認識中の音響尤度の計算順序が
tied-mixture 用のものに変更される(計算単位が状態単位からコードブック単位に変更される).単一のコードブックからなる通常のtied-mixtureモデルのほか,複数のコードブックを扱うこともできる.このため,例えば音素ごとにコードブックを持つ phonetic tied-mixture のようなモデルも扱える.
Julius は音響モデル適応をサポートしていない.音響モデル定義内に適応用の regression tree がある場合,それらは無視される.
また,モデルの定義においては,各モデルの初期状態と最終状態は出力分布を持ってはならない[8].状態遷移については,すべての状態遷移を扱うことができる.初期状態から,あるいは最終状態への遷移がそれぞれ複数存在する場合,
Julius はマルチパスモードで実行される(後述).
音声波形を直接認識したい場合は,HMMがMFCC をベースとする特徴量で学習されている必要がある.特徴量の詳細については,特徴量抽出の章を参照されたい.
第6章 音響モデル
