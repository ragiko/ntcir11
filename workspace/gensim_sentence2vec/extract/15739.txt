
TeXについて
TeXのインストール
TeXの使い方
簡単な例
基本的なルール
数式
空白の扱い
箇条書き
パッケージ
書体・文字サイズ
環境
番号付けと参照
文献引用
図表
実践
論文・レポート
スライド
ポスター
参考となる文献・ウェブページ
1. TeXについて
TeX(「テフ」と読む)は Donald Ervin Knuth 氏が製作した組版システムです.
現在ではKnuth氏が作ったTeXをもとにたくさんのバージョンが存在します.
講義では現在一般的に用いられている日本語TeXであるpLaTeX2e(ピー・ラテフ・トゥー・イー)の使い方を学びます.
TeXには次のような特徴があります.
フリーウェアである.ソースコードも公開されている.
Windows, Macintosh, LinuxなどほとんどすべてのOS上で動作する. 
数式を表示する機能に優れている.複雑な数式もきれいに出力させることができる.
式番号や文献の参照の管理を自動的に行ってくれる.
文章のレイアウトを自動的に決めてくれる.一方で自分で指定する自由度も高く,レイアウトを細かく指定することもできる.
標準化が徹底されており,高い再現性をもつ.
テキスト形式で入力するため,データを長期的に利用できる.
2. TeXのインストール
Windowsの場合
日本語が使えるTeXとしてアスキーが開発したpTeXがあります.
このpTeXを角藤亮氏が W32TeX としてWindowsに移植しました.
インストールの仕方は TeX Wiki (Microsoft Windows) に詳しい解説があります.
角藤氏のサイト W32TeX からダウンロードしたバイナリを一つ一つインストールしてTeX環境を構築することもできますが,
現在では便利なインストーラーが開発されていて,自動で諸々必要なパッケージをインストールしてくれます.
これらを用いるのが手軽です.
TeXインストーラー3(阿部紀行氏のページ)
texinst(角藤亮氏のページ)
TeXはもともとUNIX上で開発されたので,コマンドラインで操作を行うのが基本です.
WinShell はTeXのコマンドをGUIで実行でき,
TeX入力をサポートするいろいろ便利な機能があるTeXの統合環境です.
TeXで作成したDVIファイルを表示させるにはviewerが必要です.
Windows上で動作するDVI viewerとして,大島利雄氏が開発した dviout for Windows があります.
Mac OSXの場合
Macでも日本語TeXを使うことができます.
MacTeX-2011 はインストーラーがついていて簡単に導入できます.
また、MacProtsでpTeXをインストールすることもできます.
TeXShop はMacで使えるTeXの統合環境です.
自動的にPDF形式で出力してくれるので便利です.
その他、MacでpTeXを使うためのいろいろな情報が TeX Wiki Mac に情報があります.
3. TeXの使い方
3.1 簡単な例
能書きはさて置き,とにかくTeXの文章を書いてみましょう.
TeXはテキスト形式で入力します.
ファイルを編集するには好きなテキストエディタを使うことができます.
Windowsに標準で入っている「メモ帳」でも十分です.
講義ではWinShellのエディターを用います.
新規でTeX文書を作成し,次のように入力します.
\documentclass{jarticle}
\begin{document}
これはサンプルです。
\end{document}
入力できたら名前を付けてファイルを保存します.
ただし,拡張子は .tex とします.
ここでは sample0.tex と名前を付けてファイルを保存することにします.
次に,今作ったTeXファイルをDVIファイルに変換します.
この作業をコンパイルといいます.
テキスト形式で入力されたソースファイルを読み込んで,
原稿(DVIファイル)を出力するのがTeXの仕事です.
コマンドプロンプトでファイルを保存したフォルダに移動し,
次のコマンドを入力します.
platex sample0.tex
WinShellでは"LaTeX"を実行すればコンパイルができます.
コンパイルが済むと,TeXファイルを保存したフォルダに新たに sample0.dvi というファイルが作成されます.
このDVIファイルを見るにはDVI viewerが必要です.
Windowsならば dviout を使います.
次のコマンドを実行してdvioutでDVIファイルを開きます.
dviout sample0.dvi
関連付けされていればDVIファイル(sample0.dvi)をダブルクリックすると,
自動でdvioutが起動し,ファイルを開くことができます.
WinShellでは"DVI閲覧"を実行するとDVIファイルを見ることができます.
さらにDVIファイルをPDF形式に変換することができます.
PDFは Adobe Systems が開発した電子文書の標準フォーマットです.
PDFファイルはDVI viewerがインストールされていないコンピュータでも開くことができるので便利です.
DVIファイルをPDF形式に変換するには次のコマンドを実行します.
dvipdfmx sample0.dvi
WinShellでは"PDFLaTeX"を実行することでPDFファイルを作成することができます.
3.2 基本的なルール
TeXファイルは必ず \documentclass[options]{classname} で始まります.
classnameでは原稿のフォーマット(クラスファイル)を指定します.
たとえば jarticle だったら,日本語の論文用のスタイルを使うことになります.
その他,article, report, book, amsart などのクラスファイルがあります.
本文は \begin{document} で始まり \end{document} で終わります.
\begin{document} の前までをプリアンブルといって,
ここには様々な設定を記述します.
TeXのコマンドはすべて \ で始まります(\documentclass{....}, \begin{....} など).
ただし,Linuxなど \ 記号がない場合は \ (バックスラッシュ)を使います.
半角スペースはいくつ続けても1つと見なされます.
全角スペースは使用しないほうが無難です.
和文の場合,ソースファイルでの改行は出力に反映されません.
欧文の場合はソースファイルでの改行は半角スペースと同じ役割になります.
ただし,2回以上連続で改行を入れると,段落が改まります.
また,\ 記号を2つ連続で \\ と入力すると,出力される原稿のほうで改行されます.
3.3 数式
数学の原稿を書く上でTeXを使う一番大きなメリットは複雑な数式をきれいに出力できることです.
$ で囲んだ領域は数式モードになり,この間に数式のコマンドを入力することで数式を出力させることができます.
また,\[ と \] で囲んだ領域(または $$ で囲んだ領域)は行立(display style)の数式として,独立の行に中央揃えで表示されます.
例として本文に次のように入力して,コンパイルしてみましょう.
実対称行列 $A$ は直交行列 $P$ によって
\[
D = P^{-1} A P
\]
と対角行列 $D$ に対角化される。
もう少し複雑な数式を書いてみましょう.
\[
\sin x = \sum_{n=0}^{\infty} \frac{(-1)^n}{(2n+1)!} x^{2n+1}
\]
\[
\int_{0}^{1} \log x dx
= \lim_{\epsilon \to +0} \int_{\epsilon}^{1} \log x dx
= \lim_{\epsilon \to +0} [x \log x - x]_{\epsilon}^{1}
= -1
\]
三角関数,対数関数など基本的な関数はTeXのコマンドとして用意されています.
\sin, \log などと入力するとこれらの関数を表示させることができます.
このようにTeXのコマンドはすべて \ 記号で始まります.
分数を表すには \frac{分子}{分母} と入力します.
総和を表すΣや極限lim,積分記号などもコマンドを使って表示させることができます.
上付き・下付きの添え字はそれぞれ ^ と _ (アンダーバー)を使って入力します.
ギリシャ文字や数学で使う様々な特殊文字を表示させることができます.
TeXで使える特殊文字の一覧が TeX Wiki の symbols.pdf にあります.
複数行に渡る数式
複数行に渡る数式を記入する場合 eqnarray を用います.
\begin{eqnarray}
\int_{0}^{1} \log x dx
&=& \lim_{\epsilon \to +0} \int_{\epsilon}^{1} \log x dx \\
&=& \lim_{\epsilon \to +0} [x \log x - x]_{\epsilon}^{1} \\
&=& -1
\end{eqnarray}
\\ 記号で改行します.
& 記号で囲まれた部分を揃えて,中央揃えで表示されます.
数式の各行に式番号がふられます.
\begin{eqnarray*}, \end{eqnarray*} とすると式番号は表示されません.
括弧
(x) や [x] といった括弧は入力したまま出力されます.
中括弧 {x} を出力するためには \{x\} と入力します.
ノルムを表す ||x|| を出力するためには \|x\|と入力します.
内積を表す <x,y> を出力するためには \langle x,y\rangle と入力します.
\[ (x) \]
\[ [x] \]
\[ \{x\} \]
\[ \|x\| \]
\[ \langle x,y\rangle \]
大きい括弧を出力するには \big( などと入力します.
\big(, \Big(, \bigg(, \Bigg( とするにしたがってより大きい括弧になります.
\[
\Bigg( \bigg[ \Big\{ \big\| \langle x \rangle \big\| \Big\} \bigg] \Bigg)
\]
\left(, \right) を使うと括弧の内部の大きさに合わせて自動的に括弧の大きさを選んで表示されます.
\[
\left( \frac{a}{b} \right)
\]
このとき \left と \right は必ず対でなければなりません.
片方だけ表示したいときは一方を \right. のようにピリオドにします.
\[
\left\{ \frac{a}{b} \right.
\]
行列
行列を表示させるには array 環境を使います.
例として次のように入力して出力結果を見てみましょう.
\[
\begin{array}{lcr}
111 & 222 & 333 \\
44  & 55  & 66 \\
7   & 8   & 9
\end{array}
\]
\begin{array} から \end{array} までが行列になります.
lcr は1列目が左寄せ(left)、2列目が中央揃え(center)、3列目が右寄せ(right)と指定しています.
したがって、この場合3列の行列を定義しています.
各列の成分は & 記号で区切ります.\\ 記号で次の行に移ります.
行数は \\ を追加すれば増やすことができます.
次のようにすると括弧で囲むことができます.
\[
\left(
\begin{array}{cc}
a & b \\
c & d
\end{array}
\right)
\]
練習
ここまでの練習問題として次のように出力するコードを書いてみましょう.
3.4 空白の扱い
TeXで使う長さの単位
TeXでは長さを指定するとき次のような単位を用います.
TeX入門
