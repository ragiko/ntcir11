細線化とは、二値画像を幅1ピクセルの線画像に変換する処理のことで、画像処理の中では比較的利用頻度の高いものです。特に、文字認識やパターン認識の前処理として多く使われます。
はじめに
細線化はThinningやSkeletonizationと呼ばれ、二値画像(白と黒の色だけで表現された2階調の画像)を幅1ピクセルの線画像に変換する処理です。線が途中で切れたり、孔が開いたりしてはいけません。得られた線は、元の図形の幅の中心にくることが望まれます。
エッジ検出によって得られた画像は、元の画像の変化が比較的緩やかで広範囲な場合には、幅が広くなってしまいます。エッジ検出の閾値を高くすると幅は狭くなりますが、緩やかな変化を見逃してしまいます。したがって、閾値を低く選んで、幅広くエッジ部分を出させ、その後に細線化処理を行って、文字認識やパターン認識に使うことが多いのです。
アプレットを見る
対象読者
画像処理に関心があり、パターン認識の前処理を学習したい人。
必要な環境
J2SE 5.0を使っていますが、それより若干古いバージョンでも大丈夫です。CPUパワーは、大きい方がストレスを感じません。
細線化のアルゴリズム
細線化の手法は古くから研究され、種々の方法が知られています。ここでは、プログラム化しやすく、比較的分かりやすい方法を述べます。得られた線が元の図形の中心部に来るように、左上&rarr;右下、右下&rarr;左上、右上&rarr;左下、左下&rarr;右上の順に周囲から狭めてゆく方法を採ります。注目する「1(黒)」のピクセルを中心に、3 x 3のピクセルの半分が「1(黒)」で他方が「0(白)」の場合は、注目する点を「0(白)」にしても良いと考えるのが基本原理です。Hilditchのアルゴリズムに似ていますが、線が途切れることがありません。
注目するピクセルとその周辺の呼び方
図1に示すように、消去できるかどうかを調べるピクセルを「center」と呼び、周囲のピクセルは、反時計回りに、p[0]からp[7]と呼びます。center、p[0]～p[7]は1(黒)または0(白)の値を持ちます。このプログラムでは、byte型にしてありますが、「1」または「0」の値しかとりません。なお、プログラムの中では、実際にcenterという名称を用いるわけではなく、プログラム中のnew_pixels[i][j]やold_pixels[i][j]に相当します。周囲のピクセルは、配列の添え字を増加させながら、選択します。8で割った剰余を採っていますので、7の次は0になります。
パターン認識の前処理に必要な二値画像の細線化:CodeZine
