
JULIAN(1)                                               JULIAN(1)
NAME
Julian   -  grammar-based  continuous  speech  recognition
parser
SYNOPSIS
julian [-C jconffile] [options ...]
DESCRIPTION
Julian は数万語を対象とした有限状態文法に基づく連続音声 認
識を行うことのできる,フリーの音声認識パーザです.記述文法
を用いた2パス構成の段階的探索により数千語の語彙を用いた 高
精度な認識を行うことができます.
Julian  は Julius の派生版で,言語モデル以外の部分のほとん
どをJuliusと共有しています.
音声認識の実行には,認識対象とする文のパターンを記述した有
限状態文法と音響モデルが必要です.文法の形式は独自形式で,
このための作成用ツールが本パッケージに含まれています.音響
モ デルは標準的な形式(HTK形式)を読み込め,また任意の単語・
音韻単位を扱えます.このためユーザーは特定のタスクを対象と
した音声認識システムを容易に構築することができます.音響モ
デルの入手方法や文法の記述方法については,付属のドキュメン
トを別途ご覧ください.
認識対象としてマイク入力,録音済みの音声波形ファイルおよび
特徴抽出したパラメータファイルに対応しています.語彙数の上
限は 65,535 語です.
使用モデル
Julian では以下のモデルを用います.
音素モデル
音素HMM(Hidden Markov Model)を用います.音素モデ
ル(monophone),  音  素  環  境  依  存  モ   デ
ル(triphone),tied-mixtureモデル,phonetic tied-
mixture モデルを扱えます.音素環境依存モデルの場
合は単語間の依存関係も考慮されます. HTK のHMM定
義言語で書かれたHMM定義ファイルを読み込むこと が
できます.また,付属ツール mkbinhmm であらかじめ
バイナリ形式に変換しておけば高速に読み込むことが
できます.
言語モデル
認 識 用文法の形式は独自の元で,作成用ツールが本
ツールに付属しています.文法は grammar ファイ ル
と  voca   ファ イルの2つからなります. grammar
ファイルでは,構文制約を単語のカテゴリを終端規則
としてBNF風に記述します.voca ファイルでは,その
カテゴリごとの単語の表記と読み(音素列)を定義し
ます.これをコンパイラ mkdfa.pl (1) を用いて決定
性有限状態オートマトンファイル(.dfa)と辞書ファイ
ル(.dict)に変換して,Julian に与えます.
音声入力
Juliusと同様に,デバイスからの直接入力および音声ファイルの
認識を行えます.マイクロフォン端子やDatLink(NetAudio), お
よびクライアントツール adintool を用いたネットワーク経由で
の直接入力に対応しています.音声ファイルの 形 式 は  16bit
WAVE   ファ イル(無圧縮)およびRAWファイル (16bit, BigEn-
dian) です.コンパイル時にlibsndfileをリンクすることでさら
に 多くの形式に対応可能です.また,HTK形式の特徴パラメータ
ファイルで与えることもできます.
注意:Julian内部で計算できる特徴量はMFCC_E_D_N_Zのみです.
こ れ以外の特徴抽出を必要とするHMMを使う場合は,マイク入力
や音声波形ファイル入力は使えません.その場合,HTKなどで 抽
出した特徴パラメータファイルを与えるようにして下さい.
探索アルゴリズム
Julian  の認識処理は2パス構成となっています.まず第1パスで
は,与えられた文法よりも弱い制約規則を用いて高速かつ荒い認
識を行います.ここでは文法規則からカテゴリ間の制約のみを抜
きだしたカテゴリ対制約を用いて,LRビーム探索を行い ま す.
第2 パ ス では第1パスの結果を元に本来の文法による再探索行
い,高精度な解を高速に得ます.第2パスの探索は最適解が保証
されるA*探索となります.
音 素環境依存モデル(triphone)を用いたときは,第1パスおよび
第2パスで単語間の 音 素 環 境 依 存 を 考 慮 し ま す. ま
たtied-mixture やphonetic  tied-mixture モデルではGaussian
pruningによる高速な音響尤度計算を行います.
アルゴリズムの詳細に関しては別途関連文書をご覧ください.
OPTIONS
以下のオプションで使用モデルやパラメータなどを指定します.
コマンドライン上ですべて指定することもできますが, jconf設
定ファイルとして1つのテキストファイル内にまとめて記述して
おき,起動時に "-C" で指定することができます.
ほとんどのオプションは Julius と共通です.
Julian     の み:-gram,  -gramlist,  -dfa,  -multigramout
-penalty1, -penalty2, -sp, -looktrellis
Julius のみ:-nlr, -nrl, -d, -lmp, -lmp2,  -transp,  -sil-
head, -siltail, -spdur, -sepnum, -separatescore
以下は全てのオプションの説明です.
音声入力ソース
-input {rawfile|mfcfile|mic|adinnet|netaudio|stdin}
音 声 デー タの入力ソースを選択する.それぞれ 'raw-
file' は波形ファイル, adinnet' は adintool など の
クライアントからのネットワーク経由入力,' stdin' は
標準入力からの入力を指定する.
サポートする音声波形ファイル形式は 16bit WAV(モノラ
ル, 無圧縮)および RAW (16bit, モノラル, BigEndian)
.コンパイル時にlibsndfileがあればさらに多くの形 式
が 扱える.実際にその実行バイナリでどの形式がサポー
トされているかはオプション "-help" で確認できる.な
お標準入力についてはWAVおよびRAWのみサポートする.
(default: mfcfile)
-filelist file
(-input  rawfile|mfcfile 時) 認識対象のファイルが複
数ある場合に,そのリストを与えてバッチ処理させる.
-adport portnum
(-input adinnet 時) adinnet で使用するポート番号.
(default: 5530)
-NA server:unit
(-input netaudio時) 接続するDatLinkサーバ名とユニッ
トID.netaudio 使用時必須.
-zmean  -nozmean
音 声 入 力時に,DC成分の除去を行うかどうかを指定す
る. (default: 行わない (-nozmean))
-nostrip
録音デバイスによって生じることのある,録音開始時 あ
るいは終了時の無効な 0 サンプルの自動除去を行わない
ようにする.デフォルトは自動除去を行う.
-record directory
directory 以下に,認識された入力音声データを連番 で
自 動保存する.音声データは切り出された一入力ごとに
ファイルに記録される.ファイル名は,認識開始時の シ
ステム時間を表す"年.月日.時分秒.wav" という名前で保
存される.ファイル形式は WAV,16bit,monoral,無 圧 縮
で ある."-rejectshort"併用時は,棄却された入力も保
存される.
-rejectshort msec
msec で指定されたミリ秒より短い入力を棄却し,認識を
行 わ な い. モ ジュー ル モード時はクライアントに
'<REJECTED REASON="..."/>' が出力され る."-record"
オ プション併用時は,このオプションにより棄却された
入力も保存される.
音声区間検出
-cutsilence
-nocutsilence
入力音声に対して音声区間の検出を行うかどうかを明 示
的 に指定.(default: mic または adinnet は ON, ファ
イル入力は OFF)
-lv threslevel
波形の振幅レベルのしきい値( 0 - 32767).振幅がこ の
値 を越えると音声区間の開始とみなし,次にこの値を下
回ったときに音声区間終了とする(default: 2000).
-zc zerocrossnum
1秒あたりの零交差数のしきい値 (default: 60)
-headmargin msec
音声区間開始部のマージン.単位はミリ秒
(default: 300)
-tailmargin msec
音声区間終了部のマージン.単位はミリ秒
(default: 400)
音響分析
-smpFreq frequency
音声のサンプリング周波数を Hz で指定する. あ る い
は"-smpPeriod" でも指定可能.このサンプリング周波数
は使用する音響モデルの学習条件と一致する必要があ る
ことに注意すること.マイク入力および RAW ファイル入
力時には,このサンプリング周波数を明示的に指定す る
必要がある."-fsize", "-fshift", "-delwin" で指定す
る値にも注意すること.
(default: 16000 (Hz = 625ns)).
-smpPeriod period
音声のサンプリング周期をナノ秒で指定する. あ る い
は"-smpFreq" でも指定可能.このサンプリング周波数は
使用する音響モデルの学習条件と一致する必要がある こ
とに注意すること.マイク入力および RAW ファイル入力
時には,このサンプリング周波数を明示的に指定する 必
要がある."-fsize", "-fshift", "-delwin" で指定する
値にも注意すること.
(default: 625 (ns = 16000Hz)).
-fsize sample
窓サイズをサンプル数で指定 (default: 400).
-fshift sample
フレームシフト幅をサンプル数で指定 (default: 160).
-delwin frame
デルタウィンドウ幅をフレーム数で指定 (default: 2).
-lofreq frequency
MFCCフィルタバンク計算でバンド幅制限を行う:下限 の
cut-off   周 波数値を指定する."-hifreq" も参考のこ
と.
(default: -1 = disabled)
-hifreq frequency
MFCCフィルタバンク計算でバンド幅制限を行う:上限 の
cut-off   周 波数値を指定する."-lofreq" も参考のこ
と.
(default: -1 = disabled)
-sscalc
入力ファイル先頭の無音部を用いて,入力全体に対し て
ス ペクトルサブトラクションを行う.各ファイルの先頭
には一定時間の無音区間が含まれているとの前 提 の も
と, ノ イ ズ の 推 定 を各ファイルの先頭から一定時
間(-sscalclenで指定) のサンプルで行う.ファイル入力
に対してのみ有効.
-sscalclen
"-sscalc"  でのファイル先頭の無音部の長さをミリ秒で
指定 (default: 300)
-ssload filename
推定ノイズスペクトルをファイルから読み込み,それ を
用 い て 入力に対してスペクトルサブトラクションを行
う.推定ノイズスペクトルファイルはあらかじ め  mkss
で作成する.マイク入力,adinnet入力では"-sscalc" で
はなくこちらを使う必要がある.
-ssalpha value
"-sscalc", "-ssload" でのスペクトルサブトラクション
の アルファ係数.大きいほど強く減じるが,歪みも大き
くなる. (default: 2.0).
-ssfloor value
スペクトルサブトラクションのフロアリング係数.減 じ
た 結 果パワーが 0 以下になった部分スペクトルに対し
て,原信号の係数倍の信号を割 り 当 て る  (default:
0.5).
GMMに基づく入力検証と棄却
-gmm filename
GMMによる環境音識別および不要入力棄却において,使用
するGMMを指定する.ファイル形式は,音響モデルと同様
のHMM 定義ファイルである.なお,GMMの音響特徴ベクト
ルは,同時に認識で使用する音韻モデルの特徴ベクト ル
と同一である必要がある.
-gmmnum N
GMM の 計算において計算する上位ガウス分布数を指定す
る.GMMの混合ガウス分布について,各フレームごとに,
こ こで指定された数の上位ガウス分布のみが計算され,
それ以下は計算から除外される.値値を小さくするほ ど
GMM の 計 算 量 を 削 減 できるが,計算精度が劣化す
る.(default: 10)
-gmmreject string
検証の結果誤入力として棄却すべきGMMのモデル名をコン
マで区切って与える.入力に対してGMMの尤度計算を行っ
た結果,最尤のモデルの名前がこの文字列の中 に あ れ
ば,入力を無効として棄却する(第2パスを行わずに入力
を即時キャンセルする).
言語モデル(記述文法)
認識用の文法は,"-gram", "-gramlist" あるいは "-dfa"と"-v"
の組み合わせの 3通りのどれかで指定する.
-gram,  -gramlist は複数回使用できる.その場合,指定した数
だけの文法が読み込まれる.ある時点でそれまでに読み込まれた
文 法 の リストをリセットしたいときは -nogram を指定する.
-dfa, -v はこれと異なり,複数回 -dfa や -v で指定した場 合
は最後に指定したものだけが読み込まれる.
-gram gramprefix1[,gramprefix2[,gramprefix3,...]]
認 識に用いる文法を指定する.有限状態オートマトンが
foo.dfa, 単語辞書が foo.dict のとき,"-gram foo" の
よ うにプレフィックスで指定する.複数の文法をカンマ
で区切って指定することもできる.
-gramlist listfile
認識に用いる文法を指定する別の方法.使用す る 文 法
ファ イ ル のプレフィックスを一行にひとつずつ書いた
listfile を用意し,それを指定する.listfile内のプレ
フィッ クスを相対パスで書いた場合,それはその list-
file からの相対パスとして解釈される.
-dfa dfa_filename
文法の有限状態オートマトンファイル(.dfa)を 指 定 す
る.
-v dictionary_file
単語辞書ファイル(.dict)を指定する.
-nogram
そ の時点で読み込まれている文法ファイルのリストをす
べて消す.
-penalty1 float
第1パスの単語挿入ペナルティを指定 す る  (default:
0.0)
-penalty2 float
第 2 パ スの単語挿入ペナルティを指定する (default:
0.0)
-spmodel {WORD|WORD[OUTSYM]|#num}
文中の短いポーズに対応する音韻HMMの名前 を 指 定 す
る.Julian で は, こ の 音韻のみの読みをもつ単語は
「short pause word」として,認識において特別扱い さ
れ る.すなわち,その単語の期待出現位置が文法で指定
されているとき,実際の発話においてその位置にポー ズ
が 現れなかった場合でもその単語をスキップしてうまく
認識を進めることができる(この機能がなければ,そ の
位 置にポーズが現れなかった場合文法誤りとなる).こ
の振る舞いは,発話における無意識の短時間ポーズの 出
現をうまく取り扱うための機能である.
(default: "sp")
以下のいずれかの形式で指定する.
例
単語名                    <s>
単語名[出力シンボル]   <s>[silB]
#単語ID                   #14
(単語番号は辞書ファイルの並び順に0番から)
-forcedict
辞 書中の誤り単語を無視して起動を続行する.エラーと
なった単語エントリについては読み込みをス キッ プ す
る. 辞書中の誤った単語エントリをスキップして起動を
続行する.
音響モデル(HMM)
-h hmmfilename
使用するHMM定義ファイル名(必須).形式(ascii/binary)
は自動判別される.
-hlist HMMlistfilename
HMMlist ファイル名.triphone体系のHMM使用時に必須で
ある.
このファイルは,辞書の音素表記 か ら 生 成 し た 論
理triphone名からHMM定義名への写像を与える.詳細は付
属ドキュメントを参照のこと.
-iwcd1 {best N|max|avg}
triphone使用時,第1パスの単語間triphoneの音響尤度計
算方法を指定する.
best N: 同コンテキストtriphoneの上位N個の平均値
max: 同コンテキストtriphoneの最大値
avg: 同コンテキストtriphoneの平均値 (default)
-force_ccd / -no_ccd
単 語間の音素環境依存を考慮するかしないかを明示的に
指定する.指定がない場合はモデルの名前定義から推 察
す る.なおtriphone以外で -force_ccd を指定したとき
の動作は保証されない.
-notypecheck
入力特徴パラメータの型チェックを無効にする.
(default: チェック有効)
音響尤度計算
Gaussian pruning は tied-mixture の音響モデルを使用時に 自
動 的に有効になる. tied-mixtureでない通常のモデルの場合デ
フォルトで無効となるが,"-gprune" オプションを明示的に指定
す る ことで,tmix以外のモデルに対しても適用できる. Gaus-
sian Selection の使用には mkgshmm で変換されたモノフォンモ
デルが必要である.
-gprune {safe|heuristic|beam|none}
Gaussian pruning の手法を指定する.
(default:  tied-mixture  モデルでは 'safe' (標準版)
'beam' (高速版),それ以外では 'none')
-tmix K
Gaussian pruning 使用時に,コードブックごとに上 位K
個のガウス分布を計算する.この K を指定する.小さい
ほど計算が速くなるが,音響尤度の誤差が大き く な る
(default: 2)
-gshmm hmmdefs
Gaussian Mixture Selection 用のモノフォン音響モデル
を指定する. GMS用モノフォンは通常のモノフォンか ら
mkgshmm(1) によって生成できる.
デフォルトは指定無し(GMSを使用しない).
-gsnum N
GMS 使用時,全モノフォンの状態の中から上位 N 個の状
態のみトライフォンを計算する (default: 24)
単語間ショートポーズ
-iwsp  (マルチパス版のみ)より短時間のcontext-freeな単語 間
の 無音への対応を有効にする.具体的には,辞書中の全
単語の読みの末尾にスキップ可能なショートポーズモ デ
ル を付加する.付加されたモデルはコンテキストの計算
からは除外される.付加するモデルは "-spmodel" で 指
定されたモデル.詳細は別ドキュメントを参照のこと.
探索パラメータ(第1パス)
-b beamwidth
第1 パスのビーム幅.HMMのノード数で指定する.この値
は第1パスの解探索の幅を決める値で,認識処理時間に大
き な影響を持つ.値を小さくすることで探索範囲を狭め
て認識処理を早く終わらせることができるが,探索の 失
敗 による認識誤りが増大する.値が大きいほど安定した
結果が得られるが,幅にほぼ比例して処理時間とメモ リ
量を消費する.
default値:モデルによって変化する
400 (monophone 使用時)
800 (triphone,PTM 使用時)
1000 (triphone,PTM,engine=v2.1)
-1pass 第1パスのみ実行する.
-realtime
-norealtime
第1パスを実時間処理するかを明示的に指定する.デフォ
ルトは,ファイル入力について OFF (-norealtime), マ
イ ク・NetAudio・ ネッ ト ワー ク 入 力 について ON
(-realtime).このオプションは CMN と密接な関係に あ
る:OFF の際は CMN は1入力ごとにそれ自身から計算さ
れるが,ON の場合は直前の5秒分の入力の値を常に用い
る.-progout も参照のこと.
-cmnsave filename
認識中に計算したCMNパラメータをファイルへ保存する.
保存は一入力認識のたびに行われる.すでにファイル が
ある場合は上書きされる.
-cmnload filename
初期CMNパラメータをファイルから読み込む.ファイルは
"-cmnsave" で保存したファイル.これによってマイク入
力やネットワーク入力においても起動後の入力第1発話か
らCMNを適用できる.
探索パラメータ(第2パス)
-b2 hyponum
第2パスのビーム幅.仮説数で指定する.第2 パ ス 中
に, 仮説の単語長ごとに展開数がカウントされ,値がこ
の数を越える仮説が展開されたらそれより短い仮説を そ
の 後展開しないようにする.探索失敗を防いで認識率を
保つ効果がある.
(default: 30)
-n candidate_num
この数の文仮説が得られるまで探索を続ける.得られ た
仮 説はスコアで再ソートされ、上位順に出力される. (
参考:-outputオプション).
Juliusでは第2パスの探索の最適性は厳密には保証されな
い ため,最尤候補が常に最初に得られるとは限らない.
この値が大きいほど真の最尤仮説が得られる可能性が 高
く な る が, 長 く 探 索するため処理時間は大きくな
る.(default: 1)
default値:エンジン設定(--enable-setup=)に依存
10  (standard)
1  (fast,v2.1)
-output N
"-n"オプションで指定した仮説数のうち,上位N個を出力
する
(default: 1).
-cmalpha float
単語の確信度計算におけるスムージング係数 alpha を指
定する.
(default: 0.05)
-sb score
スコアエンベロープの幅.各フレームごとに,それま で
の 最大スコアからこの幅以上離れた部分についてはscan
しない.値を小さくすることで第2パスの認識速度が 速
くなるが,その分計算誤りが起こる可能性が高くなる.
(default: 80.0)
-s stack_size
解 探索中にスタックに保持する仮説の最大数.値が大き
いほど安定した結果が得られるが必要メモリ量 が 増 え
る.(default: 500)
-m overflow_pop_times
解 探索打ち切りと判断する展開仮説数のしきい値.展開
された仮説数がこの数を越えたとき,そこで探索を打 ち
切 る.値が大きいほどあきらめずに探索を続けるが,探
索失敗時の処理時間は長くなる.(default: 2000)
-lookuprange nframe
単語展開時に前後何フレームまでみて展開単語を決め る
か を指定する.短い単語の脱落防止に効果があるが,値
が大きいと展開仮説が増えるため遅くなる.
(default: 5)
-looktrellis
単語展開を文法が予測する単語集合ではなく,第1パスで
そ の時間に残った単語に絞る.第2パスが若干速くなる
可能性があるが,特に大語彙では高速化の効果が期待 で
きるが,誤りが増大する可能性も大きくなる.
-graphrange nframe
単 語グラフを出力する際,似た位置の同一単語をマージ
する.単語グラフではスコアや履歴,境界時間の異な る
単 語は独立したグラフ単語として生成されるが,このオ
プションを使用することで,境界時間が大きく違わな い
似 た位置にある同一単語をマージし,よりコンパクトな
グラフが作成できる.ある単語について同じ単語がグ ラ
フ 中にあり,その先頭フレームずれと末尾フレームのず
れが,このオプションで与えられた値以下であれば, 両
者 をひとつの単語にマージする.デフォルトは 0 (マー
ジを行わない).大きい値を指定するほど,似た位置 に
ある単語がマージされやすくなる.
こ のオプションは単語グラフ機能を ON にしてコンパイ
ルされた Julian でのみ有効である.
Forced alignment
-walign
認識結果に対して,単語単位のViterbiアラインメントを
行 う.単語ごとにマッチした区間,およびフレームごと
の平均音響尤度が出力される.
-palign
認識結果に対して,音素単位のViterbiアラインメントを
行 う.音素ごとにマッチした区間,およびフレームごと
の平均音響尤度が出力される.
-salign
認識結果に対して,状態単位のViterbiアラインメントを
行 う.状態ごとにマッチした区間,およびフレームごと
の平均音響尤度が出力される.
サーバーモジュールモード
-module [port]
サーバーモジュールモードで起動する.起動後はクラ イ
アントからのtcpip接続を待ち,クライアントからのコマ
ンドの処理およびクライアントへの認識結果や入力ト リ
ガ 情 報 を 送 信する.複数文法認識はこのサーバーモ
ジュールモードでのみ使用することができる.詳細は 関
連 ドキュメント参照のこと.ポート番号のデフォルトは
10500 である.サンプルのクライアントとして jcontrol
が付属している.
-outcode [W][L][P][S][C][w][l][p][s]
サー バーモジュールモード時に,クライアントへ送信す
る認識結果の内容を指定する.それぞれ 'W' は単語の通
常 の 出 力 文 字列,'L' は文法エントリ,'P' は音素
列,'S' はスコア,'C'は単語信頼度を表す.大文 字 は
第2パス,小文字は第 1パスに対応する.例えば第2パス
の単語と音素列のみを送信したい場 合 は,  "-outcode
WP"のように指定する.
メッセージ出力
-multigramout
複 数の文法を用いて認識する時に,通常は全文法の中で
一位の認識結果を出力する.このオプションを指定す る
こ とで,与えられた文法ごとに独立した認識結果を求め
ることができる.結果は使用している文法の数だけ得 ら
れる.
-quiet  音素列やスコアを省略して,ベストの仮説の単語列だけ
出力する.
-progout
第1パスの途中結果を一定時間おきに漸次出力する.
-proginterval msec
-progout 時の出力インターバルを指定(単位:msec)
-demo  "-progout -quiet" に同じ.
-charconv from to
出力テキストのコーディング変換を行う. from はモ デ
ル等で使用している変換元の文字コード名,to は変換先
の出力コード名を指定する.
from, to の値として,Linux では "iconv --list" で得
られるコード名リストの中から指定可能である.Windows
で は,"ansi",  "mac",  "oem",  "utf-7",   "utf-8",
"sjis",  "euc" および任意のコードページ番号が指定で
きる. "ansi" および "oem" は,その OS でデフォルト
で サ ポー ト さ れているローカルコード(日本版なら
Shift-JIS)を表す.
その他
-debug デバッグ用内部メッセージを出力する.
-C jconffile
jconf設定ファイルを読み込む.これらの実行時オプショ
ン をあらかじめ記述して読み込ませることができる.ま
た,あるjconf設定ファイル内でこのオプションにより他
のjconf設定ファイルを include することができる.
-setting
プ ログラム名・コンパイル時刻・コンパイル時オプショ
ンを表示して終了する.
-help  簡単なオプション一覧を表示後終了する.
EXAMPLES
使用例については付属のチュートリアルをご覧下さい.
NOTICE
jconf設定ファイル内でのファイルパスの指定について:ファ イ
ルを相対パスで指定する場合,それは実行時のカレントディレク
トリではなく,そのjconf ファイルが置いてある場所からの相対
パスとして解釈されます.注意してください.
SEE ALSO
julius(1), jcontrol(1), adinrec(1), adintool(1), mkdfa(1),
mkbinhmm(1), mkgsmm(1), wav2mfcc(1), mkss(1)
http://julius.sourceforge.jp/
DIAGNOSTICS
正常終了した場合, Julian は exit status として 0 を返しま
す.エラーが見付かった場合は異常終了し, exist status とし
て 1 を返します.
入力ファイルが見つからない場合やうまく読み込めなかった場合
は,そのファイルに対する処理をスキップします.
BUGS
Julian  で使用できるモデルのサイズやタイプには若干の制限が
あります.詳しくはパッケージに付属のドキュメントを参照して
ください.
バ グ 報 告・問い合わせ・コメントなどは julius@kuis.kyoto-
u.ac.jp または julius@is.aist-nara.ac.jp までお願 い し ま
す.
COPYRIGHT
Copyright (c) 1991-2005 京都大学
Copyright (c) 2000-2005 奈良先端科学技術大学院大学
Copyright (c) 2005      名古屋工業大学
AUTHORS
Rev.1.0 (1998/07/20)
河原 達也  と  李 晃伸 (京都大学)
が設計を行いました.
Rev.2.0 (1999/02/20)
Rev.2.1 (1999/04/20)
Rev.2.2 (1999/10/04)
Rev.3.1 (2000/05/11)
李 晃伸 (京都大学)
が実装しました.
Rev.3.2 (2001/08/15)
Rev.3.3 (2002/09/11)
Rev.3.4 (2003/10/01)
Rev.3.4.1 (2004/02/25)
Rev.3.4.2 (2004/04/30)
李 晃伸 (奈良先端大)
が実装しました.
Rev.3.5 (2005/09/30)
李 晃伸 (名古屋工業大学)
が主に実装しました.
THANKS TO
このプログラムは Rev.3.1 まで京都大学音声メディア研究室(旧
堂下研)において開発されました.Rev.3.2 より Julius と統 合
さ れ,「情報処理学会 連続音声認識コンソーシアム」において
会員向けに公開されました.Rev.3.4 よりオープンソースとして
Julius とともに無償公開されています.
Windows Microsoft Speech API対応版は住吉貴志氏(京都大学)の
手によるものです.
さまざまな助言・コメント・御指導いただく関係者各位に深く感
謝いたします.
LOCAL                     JULIAN(1)

