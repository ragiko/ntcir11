
このページ
は、 Web プラットフォーム関連の いくつかの仕様の日本語訳の一覧と,それらの日本語訳に共通する事項についての説明です。
これらの翻訳の正確性は保証されません。
これらの仕様の公式の文書は英語版であり、日本語訳は公式のものではありません。
(実際に誤りが見つかることも時折あります。
それらについては見つかり次第修正され,加えて用語の対訳や言い回しなども時折修正されるので、これらの翻訳が「完成」する日は決して来ないとも言えます。)
一部の仕様は日々改訂され続けているので(特に
WHATWG
によるもの, あるいは
W3C
の編集者草案( Editor's Draft ))、日本語訳は最新版と一致していないことがあります。
また、原文の更新に伴う,訳の更新の際に取り込み漏れがあるかもしれません†。
その完全性は保証されませんが、ツールを利用して不定期に検証されてはいます(多数の更新箇所が積み重なったときなど)。
(
† RFC 文書, W3C 勧告については、原文の更新は無いので,和訳に埋め込みの原文との差分は検査済み。
)
目次やリンクなど,ページ内容の一部はスクリプトで自動生成されています。
Jacascript / CSS / DOM の対応が古いブラウザでは、表示が崩れたり,一部の機能が働かないかもしれません(特に IE 6〜8 はほとんど考慮されていません)。
HTML5 タグも数種に限って( section, nav, aside など)利用されています。
一部のページには SVG 画像も利用されています。
また,多くのページは、大半のリンクが, 更には内容の大半がスクリプトにより生成されています(特に WHATWG によるもの, CSS 関連仕様)。
これらについては Jacascript (の有効化)が必須になります。
機能や表示に不具合がある場合はページのリロードもお試し下さい(一度で十分:スクリプトやスタイルシート(全ページ共通)がブラウザにキャッシュされているために更新が反映されていないことが原因と考えられるので)。
日本語訳ページ一覧
基盤
Character Model for the World Wide Web 1.0: Fundamentals
( Web のための文字モデル)
Web IDL 仕様
( Web プラットフォーム API 定義言語)
DOM4 仕様
(文書オブジェクトモデル API )
TypedArray 仕様
(型付き(型指定)配列)
URL 標準
( URL 構文を完全に予測可能かつ相互運用可能なものにする)
Encoding 標準
(種々の符号化方式による文字列の符号化/復号 処理)
JavaScript, aka. Web ECMAScript
(互換性のための ECMAScript ブラウザ実装)
HTML5 応用
File API 仕様
(利用者から供されるファイルデータの読み取り / メモリ内のデータを参照する Blob URL )
Web Workers 仕様
(スレッド処理 / ページ間スレッド共有)
Web Storage 仕様(勧告)
(セッション/サイト データのクライアント側 保持)
(より新しい編集者草案
と勧告との差分)
ネットワーク/セキュリティ
Fetch 標準
( cross-origin も含むリソース取得のための包括的な処理モデル)
XMLHttpRequest
( HTTP リクエスト/応答の送受信)
Content Security Policy 1.0
( XSS 対策のためのフレームワーク)
RFC 6265 — HTTP State Management Mechanism
(クッキー)
RFC 6454 — The Web Origin Concept
(生成元(オリジン)の概念)
RFC 6455 — The WebSocket Protocol
( Web のための双方向通信プロトコル)
WebSocket API 仕様
(同上, クライアント側 API )
HTTP/1.1 ( RFC 7230 〜 7235 )
RFC 7230 — Message Syntax and Routing
(メッセージの構文とルーティング)
RFC 7231 — Semantics and Content
(意味論と内容)
RFC 7232 — Conditional Requests
(条件付き要請)
RFC 7233 — Range Requests
(範囲要請)
RFC 7234 — Caching
(キャッシュ処理)
RFC 7235 — Authentication
(認証)
CSS
基盤
Selectors Level 4
(レベル 4 までの CSS セレクタ)
CSS Cascading and Inheritance Level 3
(カスケードと継承の仕組み — 指定値, 算出値, 使用値, 実効値,および 初期値, 継承値)
CSS Values and Units Module Level 3
( CSS プロパティの各種 値型と単位,プロパティの値定義の構文とその意味)
CSS Syntax Module Level 3
( CSS の一般構文とその解析アルゴリズム)
CSS Namespaces Module Level 3
( CSS における名前空間の利用)
CSS Custom Properties for Cascading Variables Module Level 1
(カスケード変数を定義するカスタムプロパティ)
CSS Conditional Rules Module Level 3
(条件付きで適用される CSS 規則)
視覚レイアウト
CSS Display Module Level 3
( display プロパティの Level 3 拡張,種々のレイアウト関連の概念の定義)
CSS Intrinsic & Extrinsic Sizing Module Level 3
( 内容に基づく 内在的 サイズ, と 文脈に基づく 外在的 サイズ )
CSS Writing Modes Level 3
(縦書き/横書き,書字方向の指定法,それによる各種レイアウトへの影響や 上下左右, 幅/高さ の解釈)
CSS Flexible Box Layout Module Level 1
(伸縮/整列 自在ボックス レイアウト)
CSS Multi-column Layout Module
(段組レイアウト)
CSS Grid Layout Module Level 1
(格子レイアウト)
CSS Fragmentation Module Level 3
(フローの断片化 — 改ページ/改カラム/改 region)
アニメーション
CSS Transitions
(遷移効果)
CSS Animations
(アニメーション)
CSS Transforms
(座標系変換による変形)
CSS Speech Module
(読み上げ音声スタイル)
CSS Fonts Module Level 3
(フォント)
Compositing and Blending
(色の合成と混色)
CSS Image Values and Replaced Content Module Level 3
(画像内容の指定とグラデーション他の Level 3 拡張,置換内容の配置/サイズ制御など)
CSS Backgrounds and Borders Module Level 3
(背景画像/境界線/境界線画像の指定,境界線の丸め, 影の付与)
CSSOM
CSS Object Model (CSSOM)
(スタイルシート操作のための API / オブジェクト表現による CSS から 文字列表現による CSS への直列化)
CSSOM View Module
(要素や選択範囲の 表示位置やサイズの取得, スクロール位置の取得や設定,他)
パフォーマンス/計時関連
Page Visibility,
バージョン 2
(ページ可視性の判別)
High Resolution Time
(高精度計時)
Performance Timeline
(他の計時関連仕様の基盤)
User Timing
(利用者による計時)
Navigation Timing
(ナビゲーション(ページ遷移)の計時)
Navigation Timing 2
(ナビゲーション計時の高精度版)
Resource Timing
(リソース取得の計時)
Timing control for script-based animations
(アニメーションフレームの更新頻度をブラウザ側に最適化してもらう)
Beacon
(文書の unload 時にサーバに向けて非同期にデータを送信させる)
Progress Events
(進捗イベント)
JSON
RFC 6901 — JavaScript Object Notation (JSON) Pointer
( JSON データ内の特定の値を参照するポインタ)
RFC 6902 — JavaScript Object Notation (JSON) Patch
( JSON リソースに部分的な変更を加える操作を記述するためのデータ形式)
その他
トップページ
に SVG, XML 関連仕様など。
各ページ共通の機能
本文ダブルクリック
当該箇所の原文を表示。
ページ左下隅のボタン
目次のサイドメニュー化切替(アクセスキー A )
(用語やインタフェースメンバなどの)索引を表示(アクセスキー S )
原文の全表示切替(アクセスキー Z )
語彙の対訳切替(アクセスキー X )
見出し/定義項目† のクリック
次が含まれたパネルが表示される:
その項目自身を指すリンク††
原文仕様の中の,対応する同じ項目を指すリンク( 原文 )†††
ページ内の,その項目を指しているリンク一覧
パネル表示中は、左右矢印キーにより,これらのリンク先(原文 を除く)を巡回できる。
† id が付与された項目 — 具体的には、
章/節の見出し,
定義用語,
インタフェースのメンバ定義,
定義リストの見出し,
参照文献の見出し,
CSS の各種プロパティやその値, 値型,
等々。
†† リンクテキストには、章/節 の見出しについては その原文,他の場合は その項目の id が示される。
††† 和訳のみに id が付与されている項目については示されない。
また、自動処理の都合などから、原文と異なる id が付与されている項目もあるが、その場合でもリンクは元の id を指すようにしている(逆に,和訳ページが元の id でアクセスされた場合も同様)。
対訳切替など,一部機能は省略されているページもあります。
各ページ共通の表記規約
以下に述べる表記規約は原則であり,ページ間で多少異なることもあります。
スタイル
リンクのスタイルは次の3種:
同じページ内を指すリンク(下線なし, マウスを重ねた状態で強調表示)
上のファイル一覧のページを指す相対リンク(利用ブラウザの通常の表示)
絶対リンク
(大半は外部サイトの英文仕様)。
一部のリンクでは,マウスを重ねたとき/フォーカスをあてたときに、リンク先文書の【日本語訳】へのリンクも追加表示されます(バージョンが異なっていたり,部分訳の場合もあることに注意 — 特に HTML 仕様)。
その他のスタイルは,基本的には,原文に即する様にしてありますが、マージンや行間などを日本語に適したスタイルに変更したり、各種 仕様間の一貫性を得るため,新たなスタイルを追加/別のスタイルに置換したり,不要なスタイルを除去して簡略化してもいます。
マークアップ
基本的には,原文に即する様にしてありますが、次に挙げる理由から,使用タグやマークアップ構造を変更している部分もあります:［
簡略化 /
重複している記述の集約 /
(後方互換性はある程度 犠牲にして)より適切なタグを利用 /
自動処理の都合 /
原文の補完 /
和訳固有の表記規約の便宜上 /
日本語の性質的に元のままでは都合が悪い /
順序を入れ替えたり細分化した方が見通しが良くなる /
他の仕様のマークアップとの一貫性をとる
］など。
約物,記号類
曖昧さや多義性を抑制し,視認性も向上させる目的で、句読点や記号,括弧類その他の約物は積極的に利用されています。
これらは、仕様が対象にしている分野に関する知識や意味論に通じていない状態でも,文脈から推定する労力を軽減し, 内容を正確に読み取り易くするためのものであり†、文法的な厳密さ(互いに無矛盾かつ, 解釈が常に機械的に一意的に定まる,等)を備えているわけでも, 適用し得る所には常に利用されているわけでも, 全ページで完全に統一されているわけでもありません:
(†
また,訳者の理解度/翻訳意図をより鮮明に表すものでもあるので、解釈/翻訳に誤りがあれば,それをより鮮明に示すことになる —
例えば,角括弧の用法:
英文
only in X or Y ( X, Y は何かの集合)
の解釈は、文脈に依存して,
［ X 内のみ ］または［ Y 内のみ ］
が意図されている場合もあれば,
［ ［ X または Y (和集合)］内のみ ］
が意図されている場合もある
)
記号説明/用法(原則)
ウェブ関連仕様 日本語訳( www.hcn.zaq.ne.jp/___/WEB/ )
