
状態空間モデルとは?
時間とともに、刻一刻と変化していく事象を、直近の過去までの観測データの記録を(リアルタイムに)逐次解析することで、次の瞬間の将来の状態の(観測誤差を省いた)「真の値」を予測する手法
【 関連 】
なお、時系列データの周期性成分の変化を、時間の流れを追って解析する手法については、以下を参考にしてください
Qiita 投稿記事 (2014/7/18)「R言語でウェーブレット変換 ～時系列データの各波長成分の含有濃度が、時間推移とともにどう変化するかを視覚化する方法」
状態空間モデルの定義例
【 参考 】
Wikipedia 「状態空間 (制御理論)」  
状態空間(じょうたいくうかん、英: State Space)あるいは状態空間表現(じょうたいくうかんひょうげん、英: State Space Representation)は、制御工学において、物理的システムを入力と出力と状態変数を使った一階連立微分方程式で表した数学的モデルである。
入力、出力、状態は複数存在することが多いため、これらの変数はベクトルとして表され、行列形式で微分代数方程式を表す(力学系が線形で時不変の場合)。
状態空間表現は時間領域の手法であり、これを使うと複数の入力と出力を持つシステムをコンパクトにモデル化でき、解析が容易になる。周波数領域では、p 個の入力と q 個の出力があるとき、システム全体を現すには q \times p 個のラプラス変換を書かなければならない。周波数領域の手法とは異なり、状態空間表現では、線形性と初期値がゼロという制限は存在しない。「状態空間」は、その次元軸が個々の状態変数に対応することから名づけられている。システムの状態はこの空間内のベクトルとして表現される。
horihorio (slide share) (2014/4/19)「状態空間モデルの考え方・使い方」
【 応用事例 】
1.マーケティング•売上げ予測分析
IT Pro (2014/06/10) 「リクルート、広告効果予測に「状態空間モデル」を採用しコスト削減」 
山口ほか 「状態空間モデルによる飲食店日次売上の要因分解」  
2.物体追尾・人物の移動追跡
( Open CV を使った物体追跡プログラムでの使用事例 )
Rest Term 「画像処理やWeb関連技術の話など」
phylloさんのダイアリー study (2009-08-07) Particle Filter 
清水 彰一 Power Point 「時系列フィルタリング」
⇒ (スライド11枚目)「OpenCVによるカルマンフィルタ」
(理論の解説)
「物体追跡技術について」
市村ほか「非ガウス型状態空間モデルを用いた特徴点位置系列のフィルタリング」  
宮原ほか(九州工業大学 工学部)「画像面中を移動する複数剛体の状態空間モデルによる動的識別」  
(カルマンフィルター)
Wikipedia 「カルマンフィルター」
カルマンフィルター (Kalman filter) は、誤差のある観測値を用いて、ある動的システムの状態を推定あるいは制御するための、無限インパルス応答フィルターの一種である。
用いられる動的システム
カルマンフィルターは時間領域において、連続時間線形動的システム、もしくは離散化された離散時間線型動的システムに基づいて駆動する。以降に導入される解説は、後者の立場のものである。それらはガウス白色雑音によって励振をうける線形演算子からなるマルコフ連鎖モデルで表現される。より端的にいえば、システムは状態空間モデル (state space model) で表現されるということである。
実用例
カルマンフィルターは、 離散的な誤差のある観測から、時々刻々と時間変化する量(例えばある物体の位置と速度)を推定するために用いられる。レーダーやコンピュータビジョンなど、工学分野で広く用いられる。例えば、カーナビゲーションでは、機器内蔵の加速度計や人工衛星からの誤差のある情報を統合して、時々刻々変化する自動車の位置を推定するのに応用されている。カルマンフィルターは、目標物の時間変化を支配する法則を活用して、目標物の位置を現在(フィルター)、未来(予測)、過去(内挿あるいは平滑化)に推定することができる。
R の専用パッケージは、 {dlm} パッケージ と {KFAS} パッケージ が有名
(参考)
Hirofki Ito ( slideshare ) 「状態空間モデルの実行方法と実行環境の比較」 
{dlm} パッケージ ・・・① 線形 かつ 正規分布 のみ ② カルマンフィルターでフィルタリング補正可能 ③ 最尤法 or ベイズ推定 で推定
{KFAS} パッケージ・・・① 正規分布以外のモデルも扱える (ポアソン分布など) ② 最尤法で推定
{WinBugs} パッケージ・・・ R から WinBugs を呼び出して、マルコフモンテカルロ連鎖法(MCMC)で推定
{RStan} パッケージ ・・・  R から Stan を呼び出して、マルコフモンテカルロ連鎖法(MCMC)で推定 ※ 3より柔軟なモデルを組成できる
以下では、 {dlm} パッケージの使い方を、「(旧)海と魚と統計解析 (現・ Logic of Blue )」ウェブサイトを引用してまとめてみました
Logics of Blue (2013年9月14日)「状態空間モデル」
正規線形状態空間モデルのことを動的線形モデル(Dynamic Linear Model: DLM)といいます。
確率分布を「これ」と一つだけに絞って、さらに非線形(たとえば平滑化スプライン)なものも扱わない、やや単純にした状態空間モデルのことをこのように呼びます。制約を付けて扱える範囲を狭くして、その代わりに計算しやす くなった状態空間モデルですね。
パッケージdlmを使えば比較的簡単に推定できるうえ、参考書も豊富
Logics of Blue (2013年10月26日) 「dlmの使い方」
dlm モデルの種類
ローカルレベル・モデル
トレンドを含んだモデル
季節成分を含んだモデル
(以下、参考ウェブサイトより抜粋)
dlmModPoly( )
order=1ならローカルレベルモデル(ランダムウォーク プラス ノイズモデル)
order=2ならローカル線形トレンドモデルを組むことができます。
dlmModReg( )
回帰分析のようにほかの説明変数の影響を加えられます。たとえば気温が高くなるとビールがよく売れるとかいうのを説明するために「気温」という説明変数を導入するとか。
dlmModSeas( )
季節変動を入れたモデルを組むことができます。
dlmModtrig( )
周期的な変動を入れたモデルを組むことができます。 dlmModSeasと違って三角関数(サインとかコサインとかいうやつら)をつかって周期的な変動 を表>します。
dlmModARMA( )
状態空間モデルを使ってARMAモデルを推定することができます。
dlm パッケージの解析手順
(以下、参考ウェブサイトより抜粋)
Step1 状態空間モデルの「型」を決める
Step2 その「型」にいれるパラメタを推定する
Step3 Step2で推定されたパラメタを「型」に入れてカルマンフィルターを回す
Step4 カルマンフィルターの結果を使ってスムージングする
自分でモデルを直接 定義して、Step3から始めることもできる
⇒ ※ パッケージのデモコード ( example(関数) で実行可能 )では、こちらの方法でのスクリプトが掲載されています
FFとかGGとかいうのは推定されたパラメタではありません。モデルの「型」を作るための構成要素です。今回は説明しませんが、じつはdlmModなんとかっていう関数を使わなくても、このFFだのGGだのを指定してやれば自分で何でも自由にモデルを組むことができます。行列の掛け算とかがわかる方は、参考文献の数式を見るとFFやGGの意味がすぐ分かると思います。今回は省略します。
ローカルレベル・モデル
Logics of Blue (2013年10月27日) 「ローカルレベルモデル」
(以下、参考ウェブサイトより抜粋)
# ローカルレベルモデル
library(dlm)
#=====================
# 左端も推定する
#=====================
# Step1 
# モデル作成のための関数を作る
build.2 <- function(theta){
dlmModPoly(order=1, dV=exp(theta[1]), dW=exp(theta[2]), m0=exp(theta[3]))
}
# Step2
# MLEでパラメタ推定。
fit.2 <- dlmMLE(
Nile, 
parm=dlmMLE(Nile, parm=c(1,1,10), build.2,method="Nelder-Mead")$par,build.2, 
method="BFGS"
)
fit.2
【R言語】時間の動きにあわせて 定数項 や 回帰係数 が動的に変化していく回帰モデルを解析する方法(データの観測誤差を取り除いた「真の値」を同時に推定)  - Qiita
