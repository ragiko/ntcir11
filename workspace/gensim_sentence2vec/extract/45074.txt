Im trying to upload a base64 image to a FaceBook page using Node.js. I have managed to get the upload working with all the multipart data etc should I read the file from the filesystem (ie. using fs.readFileSync('c:\a.jpg')However, should I use the base64 encoded image and try upload it, it give me the following error : {"error":{"message":"(#1) An unknown error occurred","type":"OAuthException","code":1}}I have tried converting it to binary by new Buffer(b64string, 'base64'); and uploading that, but no luck.I have been struggling with this for 3 days now, so anyhelp would be greatly appreciated.Edit : If anyone also knows how I could convert the base64 to binary and successfully upload it, that would also work for me.Thanks very muchEdit : Code Snippetvar postDetails = separator + newlineConstant + 'Content-Disposition: form-data;name="access_token"' + newlineConstant + newlineConstant + accessToken + newlineConstant + separator;postDetails = postDetails + newlineConstant + 'Content-Disposition: form-data; name="message"' + newlineConstant + newlineConstant + message + newlineConstant;//Add the Image informationvar fileDetailsString = '';var index = 0;var multipartBody = new Buffer(0);images.forEach(function (currentImage) {    fileDetailsString = fileDetailsString + separator + newlineConstant + 'Content-Disposition: file; name="source"; filename="Image' + index + '"' + newlineConstant + 'Content-Type: image/jpeg' + newlineConstant + newlineConstant;    index++;    multipartBody = Buffer.concat([multipartBody, new Buffer(fileDetailsString), currentImage]); //This is what I would use if Bianry data was passed in     currentImage = new Buffer (currentImage.toString('base64'), 'base64'); // The following lines are what I would use for base64 image being passed in (The appropriate lines would be enabled/disabled if I was using Binary/base64)    multipartBody = Buffer.concat([multipartBody, new Buffer(fileDetailsString), currentImage]);});multipartBody = Buffer.concat([new Buffer(postDetails), multipartBody, new Buffer(footer)]);
Here's some Python code which has worked for all my test cases. Are there any corner cases where this would not work?import base64def test(in_value):    encoded = base64.b64encode(in_value).rstrip('=')    out_value = base64.b64decode(encoded + '=' * (4 - len(encoded) % 4))    assert out_value == in_value
I have been working on some QR codes, I need to pass an array to the QR with the data but it needs encoding. The data itself is a json_array which is used to generate a PDF.If I use base64 encoding the QR code is stupidly large, and when using ascii85 it breaks the QR.Can you let me know of any encoding praticies which would work in the url, the shorted the coding the betetr. qr_generator.php?data={encoded_json_array}
Base64のデコード - オンラインBase64のデコーダ
