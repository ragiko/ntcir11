 セキュアコーディングに関する事例や対策をお届けするこの連載。第1回の「なぜ、いま『セキュアコーディング』なのか?」に続く第2回は、Cアプリの脆弱性として頻繁に耳にする「バッファオーバーフロー」について取り上げます。
これまでに多くのアプリケーションにおいて、攻撃されたり発見されたりしている、しかもいまだになくならないバッファオーバーフロー問題ですが、その仕組みや原理を理解していなければ、具体的な対策も難しいと思います。そこで、この連載では、あらためてこの問題について掘り下げます。
今回のバッファオーバーフロー前編では、バッファオーバーフローの基礎知識と対策の考え方を復習します。次回、バッファオーバーフロー後編では、過去に発見され、修正された脆弱性の実例を紹介します。
ソフトウェアに多い脆弱性とは
ソフトウェアに作り込みやすい脆弱性にはどのようなものがあるのでしょうか? その疑問に答えてくれる資料があります。以下の、「CWE/SANS最も危険なプログラミングエラーTop25」です。
「CWE/SANS Top 25 Most Dangerous Software Errors」
http://cwe.mitre.org/top25/
http://www.sans.org/top25-software-errors/
なおこの資料は、現在2011年版が出ていますが、2009年版については以下のURLから日本語で読むことができます。
http://www.sans.org/top25-software-errors/2009/top25_japanese.pdf
もいちど知りたい、セキュアコーディングの基本(2):Cでポピュラーな脆弱性とバッファオーバーフロー(前編) (1/2) - @IT
