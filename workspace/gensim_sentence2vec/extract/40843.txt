
思考アルゴリズム
1.先読みと局面評価
オセロなどの思考ゲームで、コンピューターが指し手を決定するのにもっともよく使われるものの1つに先読みがあります。先読みとは、可能な指し手を生成し、それぞれの手で実際に局面を進めて考えてみる方法です。
まずは、1手の先読みの場合を考えてみますと以下の様になると思います。
(1) 可能な指し手をすべて見つける
(2) 指し手を1つ取り出して、その手を指して相手の石を返す(局面を進める)
(3) 局面を評価し、点数を付ける(これを指し手の点数とする)
(4) 局面を元に戻し(2)から(4)まで手がなくなるまで繰り返す
(5) 指した手の中でもっとも点数の高い手を、次の指し手と決定する
局面評価とは、その局面がどちらに有利か不利かを数値で求める方法です。
オセロゲームでは、確定石(隅などにあってもうどうやっても返すことが出来ない石)や次に打てる手の数の差などを求め、それらに重みをつけて評価値を出します。
2.ミニマックス
上記の様な方法で実際に1手先読みのコンピューターオセロを作ってみると、とても弱くて相手にならないのが分かると思います。これは、相手の事をまったく考えていないためです。相手の事も考えれば2手以上の先読みが必要となります。
2手の先読みでは、まず自分の手で局面を進め、次に相手の手で局面を進めることになります。図に表すと次のような感じになります。(通常は1つの局面に10手前後は手があるのですが、スペースの都合上3手としてます)
図1は、次が黒番で、は黒が手を指した局面を、は白が手を指した局面を表しています。現局面で黒にはA・B・Cの3つの手のあり、それに対し白にもそれぞれa・b・c の手があります。一番下にある数は局面を評価した点数で、この点が高ければ黒が有利、低ければ白が有利になります。この様な状況で黒はA・B・Cのどの手を選ぶのが妥当でしょうか。また、その手を選んだ時の局面の評価は何点になるでしょうか。
現局面で、黒が選ぶ最もよい手はBで、局面の評価は1点。黒が少し有利といえます。
なぜこうなるかを黒がAを指した場合で説明します。黒がAの手を指したとき、次に白がbの手を指せば黒の得点は10点になりとても有利です。しかし、白はわざわざ黒に有利になるようなbの手を選ぶでしょうか。あなたが白なら、白に有利になるように、最も点数の低いcの手を選ぼうとするはずです。a・b・cのどの手を選ぶかの選択権は白にあり、白は当然最も点数の低い(白に有利になる)cの手を選ぶと考えるべきです。ですから、黒が、Aの手を選択した時の点数は−5点になります。同様に考えて、黒Bの手は1点、黒Cの手は−2点となり、黒はこの中から最もよい点数のBの手を選ぶことになるのです。
このように、白は自分に有利になるように、最も低い点数の手(ミニマム)を選ぼうとし、黒も自分に有利になるように最も点数の高い手(マキシマム)を選ぼうとします。このような考え方をミニマックスと言います。
3.探索と枝切り
図1のようなものをゲーム木、やなどの節点をノード、そこから伸びているのを枝、ゲーム木を調べて行くことを探索と言います。
ゲーム木を探索する手順は、左側の手から下に降りられるだけ降りて、一番下の局面(末端)に達したら、評価値を上に持ち上げ、そこからまだ調べていない枝が残っていたら、また末端まで降りて評価値を持ってきます。これをすべての枝を調べ終えるまで繰り返します。
図1の場合では、まず「現局面」から黒A白aで末端に達し、局面の評価値2を得て、この値を上に持ち上げます。これでとりあえずAの手のノードに2点が入ることになります。まだ下にbとcの枝が残ってますから、これらも調べてbで10点、cで−5点が上がって来て、Aのノードには、これらの中で最も点数の低い−5点が残ることになります。これでAのノードをすべて調べ終えたので−5点を上のノード(現局面)に持ち上げます。
現局面からは、まだBとCの枝が残ってますから、同様に調べてBのノードから1点が、Cのノードから−2点が上がってきます。これらの中から最も高い点数を上げて来たBの手が、現局面で選ぶべき最善手となります。
このようにゲーム木の探索をするのですが、中には調べなくてもよい枝があります。図1の場合で言うと黒Cのノードから伸びている白bとcの枝は調べる必要がありません。
ここで、上でやった探索をもう一度見て下さい。「現局面」には、黒Aのノードから−5点、Bのノードから1点が上がって来ます。A・Bのノードを調べ終えたら、次にCのノードから下の枝を調べて行くわけですが、「現局面」には、Bのノードから1点がすでに上がって来ているというこを覚えておいて下さい。
探索を続けますと、「現局面」からCのノードを通り下に降りて、aの枝を調べてCのノードに−2点が上がってきます。まだ下には、bとcの枝が残っているのですが、Cのノードには最も点数の低いものが残り、この値が上に上がって行きますから、aの枝から−2点が上がって来た時点で、Cのノードから上がって行く点数は−2点以下と分かります。ところが「現局面」にはすでにBから1点が上がって来ています。「現局面」では最も点数の高い手を選択しますから、Cのノードから上がってくる点数が−2点以下と分かった時点で、Cのノードの残りの枝は調べる必要がないのです。ですから、Cのノードではbとcの枝を残して、ここで探索をうち切ります。このような方法で枝を読まないことを枝切りと言います。
・・・・・つづく
4.αβカット
思考アルゴリズム
