この連載では、XML Schemaについて解説します。簡単なXMLの構造をXML Schemaにより記述できるようになることを目標に、XML Schemaの概要、要素・属性の定義、Complex TypeやSimple Type、属性グループについて解説していきます。連載を読むに当たり、整形式のXMLに関して十分理解していることを前提とします。
XMLの構造を表すスキーマ言語とは?
XML Schemaはスキーマ言語です。ところで、「スキーマ言語」とは何なのでしょう?そもそも「スキーマ」とは何なのでしょう? スキーマとは、XMLの構造です。「いつ、どの要素が出現するのか」「その要素にはどのような属性があるのか」など、XMLの木構造についての定義がスキーマです。そして、スキーマを記述する言語が「スキーマ言語」です。
例えば、インターネットショップなどでWebを通して商品を購入するとします。この場合、商品や顧客の情報をXML形式にして、商品を販売する企業のサーバに送信します。XML文書を受け取ったサーバ上のプログラムは、XMLを読み、XML文書内の商品データや顧客データを取得します。XML文書を読みデータを取得するプログラムをXMLパーサといいます。XMLパーサは取得したデータをサーバ上の受注プログラムなどに渡し、プログラムが受注処理を行います(図1)。
ここで商品購入者が好きなようにXML文書を作成し送信したのでは、サーバは受注処理を行うことができません。例えば、受注処理を行うには、「商品番号」「商品個数」や「顧客住所」など、必要なデータがあります。受注処理を円滑に行うためには、XMLパーサは受注プログラムにデータを渡す前に、必要なデータが発注XMLに含まれているか確認する必要があります。また、発注XMLを処理するのも、XMLパーサです。各データのフォーマットや出現の順番など、発注XMLが決まった形式で記述されていなければ、XMLパーサは発注XMLから商品データや顧客データを取得できません(図2)。
このように、XMLパーサがXML文書を適切に処理するには、「どのような構造のXML文書を送受信するのか」という取り決めを、XML送信者と受信者の間で交わす必要があります。そこで、スキーマです。XMLでデータ交換を行う場合、まずXMLの構造、つまりXMLの「スキーマ」を決めます。XMLを送信するコンピュータは、決められたスキーマに沿ったXMLを作成し、送信します。XMLを受信したXMLパーサは、受け取ったXMLがスキーマに沿ったものか確認した後、必要な処理を行います。双方が合意したスキーマに沿ったXMLを交換することにより、商品の発注・受注などの処理を円滑に行うことができます(図3)。
スキーマ言語は、XMLのスキーマを記述するための言語で、「XMLがどのような構造になっているのか」を説明するためのものです。XMLパーサは、スキーマ言語を知っていれば、そのスキーマ言語で記述された文書を読むだけで、これから解析しようとしているXML文書の構造が分かるわけです。
XML Schemaの生い立ち
XMLのスキーマ言語として最もなじみ深いのはDTD(Document Type Definition)でしょう。DTDはXMLが誕生したときから存在するシンプルなスキーマ言語です。しかし、XMLの利用が急速に拡大し、その使用目的も多様化してきたため、DTDでは機能が不足してきています。そこで、DTDに代わるスキーマ言語として、XML Schemaが作成されました。
XML Schemaは次世代のスキーマ言語として、2001年にW3Cより勧告されました。XML Schemaは非常に強力なスキーマ言語で、「要素の内容には指定の文字列しか含まない」「この要素は最高5つまで指定可能」など、XMLの構造の細部まで指定できます。しかし、その半面仕様が膨大です。勧告当初は「XML Schemaを実装したXMLパーサは作成するのが困難」「使い物にならない」などといわれていました。しかし、2年たった現在、XML Schemaは確実に市場に受け入れられつつあります。
最も簡単なXML Schema
それでは、実際にXML Schemaを書いてみましょう。初めは、ルート要素としてgreetingが1つだけのXML文書をXML Schemaを使って書いてみましょう。
SEのためのXML Schema入門(1):簡単なXML Schemaから始めよう - @IT
