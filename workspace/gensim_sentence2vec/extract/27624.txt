JPQLは,データベースを検索・更新したり,データベースが持っている集合関数などの機能を利用したりするためのクエリ言語です。SQLがテーブルを対象としたクエリ言語であるのに対して,JPQLはエンティティクラスを対象としたJPA仕様で定義されているクエリ言語です。
クエリはアノテーションまたはO/Rマッピングファイルで定義できます。クエリと同じ永続化ユニットでエンティティが定義されている場合,エンティティの集合を表す抽象スキーマ型をクエリで使用できます。また,パス式を使用すると,永続化ユニット内で定義されたリレーションシップをわたってクエリを使用できます。パス式の詳細については,「6.17.4(2) パス式」を参照してください。
アプリケーションにJPQLを記述して実行すると,次の順序で接続先のデータベースに対してSQLが発行されます。
JPQLが実行されると,Cosminexus JPAプロバイダによってJPQLの内容が解釈される。
対象となるエンティティクラス内に記述されたアノテーションやO/Rマッピングファイルの情報を基に,接続先のデータベース製品固有のSQL文に組み立てて発行する。
ここでは,JPQLの使用方法について説明します。
<この項の構成>
(1) Queryオブジェクトの取得方法
(2) パラメタの指定方法
(3) クエリ結果の取得および実行
JPQLを使用してQueryオブジェクトを取得するためには,Cosminexus JPAプロバイダが提供する次のEntityManagerインタフェースのメソッドを使用します。EntityManagerインタフェースのメソッドについて説明します。
(a) Query createQuery(String JPQL文)
createQueryの記述例を次に示します。引数には実行するJPQL文を指定します。
(b) Query createNamedQuery(String クエリ名)
あらかじめ名前を付けて定義しておくことのできるクエリを名前付きクエリといいます。名前付きクエリは,@NamedQueryを任意のエンティティクラスに付与して定義します。@NamedQueryのname属性にクエリ名を指定して,query属性にはJPQL文を指定します。
Cosminexus JPAプロバイダの場合,同じ名称の名前付きクエリを複数指定することはできません。同じ名称の名前付きクエリを複数指定した場合には,警告メッセージKDJE55535-Wを出力します。Cosminexus JPAプロバイダで指定した場合,どのクエリが動作するかは保証しません。
次に,@NamedQueryの定義例を示します。この例では,@NamedQueryを使用してあらかじめfindAllCustomersWithNameという名前でクエリを登録しています。アプリケーションのcreateNamedQueryメソッドに登録した名前付きクエリ名を渡すことで,事前に登録されているクエリを取得して利用します。
@NamedQueryでのクエリ名の登録
JPQLでのデータベースの参照および更新方法
