サブピクセルを推定する
画像処理でパターンマッチングを行った場合、実数で計測位置が得られるものが多いです。
つまり、1ドットより細かい位置を割り出し、解像度を超えたような(?)結果を返してくれます。
最少情報単位は1ドットなのに、どうして、0.5ドットずれていますなんてことが言えるのか、
ちょっと魔術っぽいではありませんか?
実験材料を用意する
実は仕事で丸マーク認識をやっていて、これだとコーナーエッジ検出が使えないので、今更ながらにドット比較によるパターンマッチングを実装し使っておりました。これだと、ドットを比較するわけですから、どうやったって答えは整数です。例えば、(3,3)を開始座標として画像を比較した時、もっとも誤差が少なかったよとか、そんな答えになります。
これでは寂しいので、サブピクセルに挑戦します。画像とは、輝度(明るさ)情報の集まりです。で、カメラで撮影された画像ってのは、よほど縮小しないかぎり常識的には、明るいところから暗いところに輝度が突然変化するなんてことはなく、ゆるやかに何ドットかけて変化します。写真を大きく拡大して影のフチを観察すればわかります。この情報をゴソゴソ処理すれば、サブピクセルの位置が推定できそうです。
まず、実験材料を用意しました。GIMPで、640ドット四方のビットマップ中央に丸を書き、ぼかしを数回かけます。(以下、これを元画像)これを64ドット四方に縮小したものを作り「画像0」とします。元画像に書いた丸を1ドット右にズラし、これを64ドット四方に縮小したものを「画像1」、同様に2ドットズラし縮小したものを「画像2」とします。
以下は、実験に使った画像です。目には、同じに見えます。
ファインサーチ(サブピクセル推定) - 無作為研究所
