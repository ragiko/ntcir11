1つの命令は4つのステップで処理される。まずメモリーから制御ユニットに命令を読み込み(1),デコーダーでどのような命令かを解読(デコード)する(2)。命令は制御情報に変わり,演算ユニットを制御して命令を実行し(3),結果をメモリーに出力する(4)。
外部バスインタフェースは、命令やデータをメモリーとやり取りするための門のようなもの。制御ユニットは、読み込んだ命令を「解読」して、さらに具体的な処理内容を指示するところだ。ここには、命令の解読を専門に行う「デコーダー」という機能がある。そして演算ユニットは、制御ユニットが解読した処理内容に従って実際の処理を行う。
メモリー上の命令を外部バスインタフェースを通して制御ユニットに読み込む作業を「フェッチ」と呼ぶ。フェッチされた命令は制御ユニットにあるデコーダーで、足し算なのか、かけ算なのか、あるいはデータ転送なのか、といった具体的な情報に解読される。この作業をデコードと呼び、解読された命令は「制御情報」に姿を変える。これは、演算ユニットをどのように動作させて演算させるかをコントロールする情報だ。演算の対象となるデータは、メモリーから外部バスインタフェースを通して演算ユニット内に読み込まれる。
実際に演算を行う演算ユニットの内部を図解したのが図2だ。演算ユニットの中には、処理中のデータを格納する「レジスター」と、実際に演算を行う「演算器」がある。レジスターは複数あり、演算対象のデータはここに読み込まれる。実はどのレジスターを使うかは命令で指定する。アセンブリ言語にある「eax」はレジスターのことだ。演算器はレジスター内のデータを使って演算し、結果をレジスターに書き込む。レジスターに書き込まれた結果は、メモリーに出力される。
CPUの基礎の基礎 - Part2 CPUの基本的な動作原理とは:ITpro
