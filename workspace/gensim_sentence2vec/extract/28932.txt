Turbolinux Cluster LoadBalancer 11: ユーザーガイド前のページ第 2章クラスタリングの概念次のページ2.4. クラスタの動作クラスタマネージャは、クラスタの中心部です。これは、クラスタノード間の作業の分割方法を決定します。クラスタマネージャは作業負荷を分割し、その一部を各クラスタノードに送信します。次に、クラスタノードはその一部の作業を処理します。クラスタノードはクラスタマネージャにその結果を送信するか、または結果を要求したクライアントに直接結果を送信します。2.4.1. トラフィック管理Turbolinux Cluster LoadBalancer 11 が実装するサービス指向のクラスタリングでは、作業負荷管理のことをトラフィック管理と呼んでいます。これは、実行すべき「作業」が、入力ネットワークサービス要求に応答することだからです。クラスタマネージャは、すべてのサービスノード間のネットワークトラフィックを管理しなければなりません。このように、クラスタマネージャは交通整理係のように振る舞います。Turbolinux Cluster LoadBalancer 11 が使用するトラフィックスケジューリングアルゴリズムは、重み付けラウンドロビンと呼ばれています。このメカニズムは、各クラスタが処理可能な作業負荷の量に比例して、クラスタの全ノード間でトラフィックが均等に分散されることを保証します。各サービスノードには、他のシステムに比例してそのパフォーマンスを指定するために加重値を割り当てられます。スケジュールアルゴリズムは、クライアントのパーシステンシをサポートするためにさらに強化されています。この機能(スティッキービットとも呼ばれる)が有効な場合、特定のクライアントはクラスタ内の特定のサービスノードに結合されます。SSL 対応のサービスなど、いくつかのサービスは新しいクライアントがサーバーに接続するたびに認証を必要とします。パーシステンシがない場合、クライアントがクラスタ内の異なるサービスノードに接続するたびに、ユーザーはそのパスワードを再度入力するよう要求されてしまいます。Turbolinux Cluster LoadBalancer 11 で は、クラスタマネージャからサービスノードにトラフィックを転送するのに、3 つの異なる方法を提供しています。それらの方法とは、次のとおりです。ダイレクトフォワーディングトンネリングNAT2.4.1.1. ダイレクトフォワーディングダイレクトフォワーディングは、ATM とサービスノードが同じネットワークセグメント、またはサブネットに接続されている場合に使用できます。この方法を使用しているパケット転送は、サービスノードの MAC アドレスに直接送信されます。IP パケットはまったく修正されません。つまり、サービスノードは ATM に到着したとおりにそれを受け取ります。これは最も高速で、最もオーバーヘッドが少ないため、好ましい方法です。また、ダイレクトフォワーディング方法は、アウトバウンドトラフィック(クライアントに返される応答)が ATM を経由して送信される必要がなく、応答パケットが直接それらの宛先に送信されるという利点もあります。2.4.1.2. トンネリングサービスノードが ATM と同じセグメントに配置されていない場合は、トンネリング転送メカニズムが使用できます。トンネリングは、他のネットワークトラフィック内で IP パケットをカプセル化する方法です。これは、2 つのシステム間に直接、仮想コネクションを生成します。このポイント間コネクションでは、パケットが仮想コネクションを介してサービスノードに到着することを保証できます。トンネリング方法は、Linux と UNIX システムでのみ動作します。これは、IP-IP カーネルモジュールを使用して、ATM とサービスノードとのポイント間コネクションを生成します。サービスノードで使用されるカーネルは、IP トンネリングをサポートをするよう構成する必要があります。Turbolinux 11 Server が提供するカーネルには、この機能が組み込まれており、clusterserverd デーモンがそれぞれのリンクの終端を自動的に構成します。また、ユーザー自身でトンネルインターフェイスをセットアップして、手動でポイント間コネクションを確立することもできます。トンネリングは、ダイレクトフォワーディング方法と比べて、ややパフォーマンスを低下させるオーバーヘッドが発生します。NAT 転送方法のように、アウトバウンドパケットは ATM を経由して送信される必要がなく、それらはサービスノードからクライアントに直接送信されます。Turbolinux Cluster LoadBalancer 11 で使用される IP トンネリングは暗号化されないため、ATM とサービスノードを周回するパケットが誰かに傍受される可能性があります。使用している LAN の外部にノードを追加する必要がある場合は、データ転送を安全に行うために仮想プライベートネットワーク(Virtual Private Network:VPN)を実装してください。2.4.1.3. NATNAT は、Network Address Translation(ネットワークアドレス変換)の略語です。NAT は通常、インターネットに接続されたファイアウォールでプライベートネットワークを隠すために使用される技術です。NAT は RFC 1631 に定義されており、IP アドレス領域が急速に使い果たされるのを緩和するために設計されました。NAT ボックスは、プライベートネットワークとパブリックネットワークとの間に配置されます。これはプライベートネットワークからのアウトバウンドパケットを修正して、NAT ボックス自身から到着したかのように見せます。パケットが NAT ボックスに送信されるとき、NAT ボックスはそのパケットを内部ネットワークのどのシステムに送信すべきかを決定します。通常、これは開始されたコネクションのテーブルを保持することによって行われます。プライベートネットワークのクライアントによって生成された各コネクションの場合、テーブルはそのクライアントに送信すべき応答を管理します。Linux の ipchains 、または iptables によって使用されている NAT は、ときどき IP マスカレードと呼ばれます。NAT は普通クライアントシステムを隠すために使用しますが、クラスタで使われている場合はサーバーを隠すのに使用されます。この場合、コネクションテーブルの使用される方法が変わるため、この違いが重要です。Turbolinux Cluster LoadBalancer 11 では、NAT 方法は他の 2 つのトラフィック転送方法によって使用されるテーブルと同じコネクションテーブルを使用します。サービスノード自体に特別な構成の変更を行う必要がないため、NAT は構成を容易にします。しなければならないことは、サービスノードが「内部」サブネット上に存在し、標準ゲートウェイがクラスタ構成ファイルに定義された NAT ゲートウェイアドレスに設定されていることを確認するだけです。また、サービスノードは外部から直接アクセスできないため、NAT はいくつかの追加のセキュリティを提供します。欠点は、NAT ではすべてのアウトバウンドトラフィックが NAT ボックスとアドレス変換処理を通らなければならないため、パフォーマンスが低下することです。前のページホーム次のページクラスタのタイプ上に戻るクラスタ管理
クラスタの動作
