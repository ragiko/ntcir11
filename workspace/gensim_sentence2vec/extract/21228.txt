
航空シミュレーションもどき
Java 1.1.8 による 3D ワイヤフレームの世界
説 明
《注意》 Netscape では、このアプレットのようなスクロール
バーの使い方をすると、不安定な動作をすることがあります。
操作盤の説明
ご覧になるとおり、画像表示部の下に操作盤があり、数値表示が5つ、その下に
スクロールバーが3つ並び、最下段には左右にスクロールバー、中央に2者択一で選ぶ
スイッチ(こういうスイッチはラジオスイッチというのだそうです)があります。下の図
には、各部品に ① から ⑬ までの番号をふってあります。 
上昇(下降)傾斜
⑦ のスクロールバーから説明します。スクロールバーには左右に矢印ボタン、その間に
マウスでドラッグできるレバーがありますが、このスクロールバーの右側のボタンを1回だけ
クリックしてみてください。
クリックするごとに ② の数値が増えていきます。今度は、同じボタンを、クリックでなく
0.5秒程度押したままにして指を離してください。② の数値が大きく変わったと思います。
この ② の値が上昇角度です。(マイナスなら下降角度)
上昇角度がプラスの場合、表示部に表示される景色は下方へ移動します。逆にマイナス角度
の場合は、景色は上方へ移動します。景色を見ながらこの操作に慣れてください。数値表示部の ①
は、スクロールバーから入力された数値を表示しているのですが、この値はいつも自動的に0(ゼロ)
に戻ろうとします。ですから、① はチカチカするだけのようにみえます。このよく見えない数値が
順次加算されて ② の表示になっているのです。上昇した結果として獲得する高さは高度として ③ 
に表示されます。
進行方向
次に ⑨ のスクロールバーを説明します。⑨ はいわゆる舵(カジ)です。このスクロールバーの
右ボタンを押すと、押している時間に応じて ⑥ の数値が変化します。⑥ は絶対座標に対する
『方位角』で、0 度が「北」、90 度が「東」、180 度が「南」、270 度が「西」です。この
スクロールバーも、ボタンを押したりレバーを直接ドラッグしても、自動的に 0 の位置に戻ろうと
します。⑤ に舵の角度が表示されるのですが、上と同様にチカチカするだけで、すぐ0(ゼロ)に
戻ります。そしてこの間の積算が方位角の変化として ⑥ に表示されるのです。
速度
⑧ のスクロールバーは速度の入力です。入力された値は直接に ④ に数値表示されます。
初期値は0(ゼロ)、つまり、停止しています。また、速度をマイナスにすることもできます。まぁ、
バックですね。へりならできるのかぁ。
操縦系の操作は以上です。以下は、ここでは観察系と呼ぶことにしますが、操縦とは別に目だけ
キョロキョロしたいときに便利な部品です。
上方、下方、左右を見る
⑪ のラジオスイッチは、最初は『前方』側がONになっています。このときは表示部に表示
される景色は進行方向前方の景色です。しかし高く飛行した場合には前方より下のほうを眺めたい
ことがあります。そこで、下方の景色を確かめるつもりで操縦用の下降レバーなどを使うと、即、
急降下になってしまいますから、要注意です。こういうときには、ラジオボタンの『周囲』を
クリックしてください。
『周囲』がONとなると、表示は、⑩ と ⑫ のスクロールバーに従った景色を表示します。
もちろん、この間も操縦系のスクロールバーや数値表示は有効で、飛行は継続されています。
⑩ の右矢印ボタンは、目を上方に向けるためのボタンで、レバーが右端に寄ったときに最大値
で 90度、左矢印ボタンで下方を見ることができて、レバーの左端で最小値 -90度です。
また、⑫ のスクロールバーは、左右を展望するもので、左右のボタンが左右の方向に対応して
います。
最後にちょっと判り難いのですが、ラジオボタンの下側に細長いボタンがあるのです。画面の
初期化を行う「リスタート」ボタンです。ただ、目下問題を抱えていまして、リスタート後の画面は
ときどき瞬きをするようにチカチカすることがあります。(と言って、ないのも不便、というわけで
隠れるようにして残してあります。⑬ です。)
データ関係
地表の景色は、Data.class というファイルに入っています。ここでは、操作上、知っておいた
方がよいと思う事項について説明します。
距離、高さ、など長さに関係する単位は、ここでは ? です。網の目のような地表の座標は、
原点をタワーのある真ん中に置き、東西南北それぞれ 500 の距離をカバーしています。中央の
タワーの高さは、トップの先端で 60 です。
プログラムは、一定間隔で画面を書き換えています。この間隔は、このプログラムを走らせて
いる環境によって少しずつ違ってきますが、0.何秒か程度です。速度レバーを引いて表示させた
「進行速度」の値が、この0.何秒毎に加算されて、移動した距離となります。
角度関係の表示はすべて 度 の単位で表されます。すべて右回りが正です。
操作のヒント
慣れるまでは、操作が難しいかもしれません。そこで、ちょっと試したいだけ、という人の
ために、簡単な操作手順を示しました。
・ 画面が初期状態にあるところから始めます。
スクロールバー ⑦ 上昇レバーを少しずつ右に引いて、上昇角度が 40 程度になるように
してください。このときマウスの左ボタンの指をその都度はなさないと ② の値が出てきません。
(ずっと左ボタンを押したままでレバーを何度か引いて指を離すと、② にいきなり大きな数値が
現れますから要注意です。) 値が 40 に近づいたら、レバーではなく、スクロールバーの右ボタン
を何度かクリックする、という方法のほうがやりやすいと思います。上昇角度を 40 程度に
セットできると、画面にはタワーのトップがほんの少しだけ表示されている状態だと思います。
(この角度はかなりの急上昇ですが、これで飛行機の練習しているわけではありませんから、
何、ここでは平気、ということにしましょう。お望みなら 90度の垂直上昇もできますが...)
・ 出発進行...
以上の準備ができたら、今度は、スクロールバー ⑧ 進行速度 をそろそろと右へ引きます。
④ 進行速度の表示が 13 か 14 程度となるようにします。すると、③ 高度 の表示がどんどん
大きくなっていき、地表は貴方の下に潜り込んで行って視界から消えてしまいます。このまま、高度
計 ③ が 200何10 になるのを待って、速度レバーを今度は左へ引いて減速し、一旦 0 、つまり、
空中で停止しましょう。停止したら、ついでに ⑦ 上昇レバーも左に「少しずつ」引くか、
同スクロールバーの左矢印ボタンをチョン、チョンと何度もクリックして上昇角度が 0 となる
ように調節します。
・ 絶景かな ...?
黄色のラジオボタン ⑪ の「周囲」をクリックします。そして、スクロールバー ⑨ の「見渡す
方向(上下)」を左にグンと引くと下界の景色が画面に飛びこんできます。その状態で、今度は
スクロールバー ⑫「見渡す方向(左右)」のレバーを左右に少しずつ引いてみてください。下界の景色
が見渡せます。また、「見渡す方向(上下)」を左端に引くと -90度、つまり真下を見下ろすことに
なります。上記のとおり操作された場合には、あなたは赤いタワーの真上辺りにいるはずです。 
そして、北東の方向には、スタディアムと五重塔が見えるはずです。
・ さぁ、空中散歩に出かけましょう
⑨「見渡す方向(上下)」は左から3分の1程度のところ(つまり、斜め下を眺める態勢)、
⑫「見渡す方向(左右)」は真ん中辺りとしてください。そして、いよいよ空中散歩に出かけます。
⑧「進行速度」レバーを右に少しだけ引いて、④ 速度 が 7 〜 10 辺りになるようにして
ください。ここで、画面に見えている地表の景色が動き始めます。
スクロールバー ⑧ の「舵」をほんの少しだけ右へ引いてください。画面の景色の動きの方向が
右回転の方向に変わったでしょう。「舵」のレバーは左右に引いてもすぐ 0 位置に戻ろうとしますが、
マウスの左ボタンの指を離さないようにしてレバーを引き続けますと、画面はどんどん方向を変えて
進みます。もちろん同時に ⑥ 方位角 の大きさもどんどん変わっていきます。
この空中散歩をアレコレ触りながら暫く続けていると、操作の感触が掴めると思います。
わたしは、Windows 上で、IE(インターネットエクスプローラ)、NN(ネットスケープナビゲータ)、
及び JDK 1.8 の appletviewer で動作確認を行いましたが、スクロールバーの操作にはかなりの
使い勝手の差があることがわかりました。IEのスクロールバーはたいへん使いやすく、NNの
それはこういうゲームに使うには不安定な動作が気になります。appletviewer のスクロールバーは、NNのような不安定動作はないのですが、使い勝手がイマイチですね...。
新規にデータファイルを作る
このプログラムをダウンロードして使う場合には、データはプログラムとは別のファイル
となっていますから、新規に自分で作ったり、オリジナルに手を加えて何か新しい建物を地上に
建てたりできます。
データファイルの作り方はこちらをご覧ください。
あとがき
このプログラムは、航空シミュレーションと言うほど正確な制御はしていないし、
ゲームだというにもぎこちない...。 しかし、Java3D ではなく、JDK 1.8 程度で
も、この程度はできてしまう、というところが愉快だと思って公開することにしました。
実は、3Dプログラムの部分にはネタがありました。 参考としましたのは、1986年 
アスキー出版局刊 佐藤義雄著「実習グラフィックス」です。同参考書には詳細な3次元
グラフィックス(ワイヤフレーム)の解説と、その実例としてBASIC言語によるプログラム
が掲載されていました。当時の非力なパソコンとその上で走るBASIC言語を使ったこのプログラム
では、目の位置と方向を入力すると、そこで見える景色を静止して表示するのがやっと、という
ものでした。
それでも、当時は、パソコン(ようやく「マイコン」から「パソコン」と呼ばれろように
なった頃でした)でここまでできるのか、と感激しながら、ディスプレイに表示された
ワイヤフレームの立体画像を惚れ惚れしながら眺めたものです。
現在では、パソコンの性能は当時と較べようもないくらい向上しましたし、Java を
使う場合も、Java3D と OpenGL を組み合わせて高度なゲームソフトを作ることもできるので
しょう。 しかし、何よりも、昔の懐かしい思い出のプログラムを Javaに移植して見たい
という気持ちが今回のプログラムとなったのです。
そういうわけですから、このプログラムの3D関係の部分、つまり、データの構成、
座標変換、及び視野変換などの関係は殆ど上記のBASICソフトの移植に近いです。
もちろん単なるマネではと、他の参考書なども勉強しましたが、座標系の考え方が異なる程度で、
殆どどの参考書も同じような記述でした。(当り前か...)
さて、最後に大変残念に思っていることについて述べます。私がこのプログラムの着想を
思い立ち、3Dグラフィックスの勉強もほぼ終わっていよいよコーディングに取り掛かった頃に
ニューヨークでのあのテロ事件が起きました。テレビで何度も何度もあの映像を見せられ、私は
あの事件を髣髴とさせるようなこのプログラムの作成を、一旦は中止しました。しかし、3D
プログラムへの興味も強く、結局地上の景色を変更することで完成させました(地上のビル群は
高さの違う3つのビルを並べて、あの懐かしい、可愛そうな2棟の世界貿易センタービルに
似ないようにしました)。これでもこの時期に「不謹慎な」というお叱りが来るのでは、と心配
しつつ公開に踏み切りました。このプログラムを試される方も決してビルやタワーに突っ込む
ような操縦はなさらないでください。エアーポートの滑走路を設けましたから、滑走路を外れ
ないように、高度 0 、速度 0 で着陸することを楽しんでくださいませ。最後に、ニューヨーク
の事件でなくなられた多くの方々のご冥福をお祈り申し上げるとともに、ご遺族の方々に心から
のお悔やみを申し上げます。
ご意見やご感想は、このページの主 ギッタン までお願いします。
Airplane operated by Spc3D
