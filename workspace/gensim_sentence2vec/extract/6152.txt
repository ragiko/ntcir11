 Illustratorで洋裁
少し前に、ペーパークラフトにIllustratorを使っている方々の事情について書きましたが、洋服の縫製パターンを描くためにIllustratorを使っている方々もいらっしゃるようで。
で、そこにはいろいろと、その分野なりの事情やお悩みがあるようなのです。
その一つが「ノッチ」。何かというと、2つのパーツを縫い合わせていくうちにズレないように、縫い合わせる部分に、長さが同じ箇所ごとに入れる印(布の切れ目)、らしいです。
作業的には、ベジエ曲線上に等間隔で法線を描くことになるのですが、手作業で正確に描くのは難しいです。
そこでノッチを描くスクリプトを作成してみました。
使い方
白矢印ツールで、ノッチを入れたい部分(セグメント)を選択して実行してください。
ダイアログが表示されますので分割数と、ノッチの長さ(片側、mm単位)を入力してください。
補足
図のように、途中にアンカーがあっても選択した部分に等間隔に描かれます。(他の場所に載せている「パス分割」スクリプトは、アンカーの間の線を等分割しています。)
ノッチは、描く対象のパスの属性(線幅・色)を継承します。ただし塗りは削除され、線幅が0の場合は既定値に設定されます。
ノッチの中心にはアンカーがあります。なので、片側のアンカーを選択して削除すれば、簡単に内側だけ残すこともできます。
ノッチは描いた場所ごとにグループ化しています。
githubに置いています。
https://github.com/shspage/illustrator-scripts#notchesjsx
なんか洋裁用のCADもあるようですね。
この分野も奥が深そうです。
Permalink | コメント(0) | トラックバック(0) | 00:16  
ベジエ曲線の交点について
Illustrator のスクリプトを書くとき、ベジエ曲線同士の交点を計算で割り出すとします。
片方または両方が直線(ハンドルが出てない)の場合の交点は連立方程式で解けるので割愛します。
問題は曲線と曲線の交点を出す場合です。
A Primer on Bézier Curves で紹介されている方法は、曲線を囲む長方形の重なりを調べて、二分探索的に追い込んでいくものです。
(&sect;19 - Curve/curve intersection)
リンク先は英語ですが、探索のようすを見られる図がありますので、操作してみれば、仕組みはわかることでしょう。
こんな感じに左から右へ追い込んでいきます(点線の四角は重ならないので見捨てる)。
曲線を囲む長方形は、アンカーポイントと、水平線・垂直線との接点から割り出せます。
長方形は傾いていないので、重なりの判定は以下のように単純にできます。
overlap : function(other){ // 接している場合も true
return !
(this.bottom > other.top || this.top < other.bottom
|| this.left > other.right || this.right < other.left);
},
実用的な細かさまで収束するのも早いので、計算量は思ったより少なく、現実的な速度で交点を割り出せると思います。
ただし、問題は曲線同士の一部または全部が重なっている場合です。
重なっている部分では交点が無限にあることになります。上の方法だと分割して生成した全ての長方形も重なり、計算量も倍々で増えます。
Illustrator のパスファインダでは曲線の交点にアンカーを作りますが、どうやってるんでしょう?
試しに、楕円ツールで描いた円を同じ場所にコピーして合体してみます。
期待通りに、アンカーは4つのままです。
おそらく制御点が全て同じ位置の場合は交点を出さないようにしているのでしょう。さすがです。
では、ほとんど重なっているという場合はどうでしょう? 片方の円を1度回転させてから合体してみます。
ひどいです。
ただ、拡大してみると、アンカー同士の距離の下限はあるようです。
何らかの閾値を元に処理を切り上げているか、多すぎる交点を元に曲線を再構成しているのでしょう。
というわけで、ほとんど重なっている曲線の交点を出す際には、用途に見合った判断と対応法を組み込む必要がありそうです。
どんな場合でも気の利いた結果を出してくれる処理を確立するには、さまざまなケースを時間をかけて研究する必要があるでしょう。
私自身は、まだ自力で曲線同士の交点を出す必要に直面していないので、汎用的なスクリプトに曲線同士の交点を出す処理を実装したことはありません。Illustrator の場合、研究してる間にパスファインダを使ったほうが早いです。
補足:上のリンク先にも書いてあるように、全ての交点を出そうとする場合は自分自身との交点を考慮する必要があります。(図のような場合。)
Permalink | コメント(0) | トラックバック(0) | 17:38  
ベジエ曲線について
(WAKWAKに設置していたサイトからの転載(一部改訂)です。)
Adobe Illustrator で描かれる曲線はベジエ曲線(3次ベジエ曲線)というもので、図のようにアンカー2点+ハンドル2点の計4点の座標を元にして描かれる曲線です。「ベジエ」とは、この曲線を自動車のCAD (Computer Aided Design) に応用した仏人 Pierre Bézier さんに由来するそうです。
別に何次の何曲線だろうが、Illustrator を使うときには関係ないだろう、と思われる向きもあるかと思いますが、この曲線のいくつかの性質は、知っておくと役立つことがあると思います。例えば「ハンドルは必ずアンカーの位置での接線になる」、「曲線は必ず4点を結ぶ四角形の内側に描かれる」といったことがそれです。
また、4つの制御点を元に描かれたベジエ曲線を変倍、回転、反転、シアーで変形(アフィン変換)した曲線は、同じ方法で変形した制御点を元に描いたベジエ曲線と一致します(アフィン不変)。別記事(放物線のグラフを描く)で  の曲線を作成するときに、個々の制御点の位置を動かさずに変倍すれば、その結果も2次曲線だと言えるのは、この性質があるためです。
メニューから「アンカーポイントの追加」を実行したときに追加されるアンカーの位置はパスの中点とは限らず、気まぐれな位置に追加されてるような気もしますが、これもベジエ曲線の仕組みから考えれば、それなりに根拠のある位置なのだとわかります。
だ円ツールで描いた円は、正確な円ではなく若干歪みがあるのですが、実際のところ、どのくらい歪んでいるのでしょうか。これもベジエ曲線を表す式から割り出すことができます。
数式で表すの巻
図のようなアンカーとハンドルを持つベジエ曲線は、実際どのように描かれているんだろうか?という話です。コンピュータがやってることなので、適当に滑らかな線を描いているわけではなく、律儀な計算に基づいています。
ベジエ曲線が描かれる仕組みを説明するために、「ド・カステリョのアルゴリズム」が、よく引き合いに出されます。これは以下のような考え方です。
まず、ハンドルおよびハンドルの先端を結んだ線を、それぞれ、同じ比率で分割する点を取ります。次に、その点を結び、結んだ線を、再び同じ比率で分割します。さらに、その点を結び、結んだ線を同じ比率で分割すると、ベジエ曲線上の1点(P)が定まります。この比率を 0:1 から 1:0 まで、連続して変化させると、点 P の位置も連続して変化して、滑らかな曲線を描く、というカラクリです。
ここで、0から1まで連続して変化する数 t を考え、分割比率を t : 1−t として分割点の座標を計算していくと、点 P の座標  は次の式で表されます。
これが(3次)ベジエ曲線の式になります。2つの式で、上の図の1本の曲線を表しています。座標を決める元にした数 t はパラメータ(媒介変数)と呼ばれ、パラメータを使って表した曲線をパラメトリック曲線と呼びます。
普通に Illustrator を使っていて、この式を解く機会は、ほとんどないと思いますが、たとえば、メニューから「アンカーポイントの追加」を実行した場合は、上の図で t = 0.5 (分割比率0.5:0.5)のときの点にアンカーが追加されるのだ、と考えると、なんとなく目安になるのではないでしょうか。
ところで「3次ベジエ曲線」の「3次」ですが、上の図のように「割って割って割って」と3段階踏むので「3次」になります。TrueType フォントや Flash で使われている2次ベジエ曲線の場合は「割って割って」の2段階になります。2次ベジエ曲線ではアンカー2つに対してハンドル(制御点)は1つです。
円のハンドルの巻
Illustrator の だ円ツールで円を描くと、アンカーが4つのパスが出来ます。このときのハンドルの長さの比率がわかっていると、スクリプトで円弧を描くときなんかに便利です。また、この比率は「角を丸くする」フィルタなどでも使われています。ハンドルの座標を知るには、適当に円を描いて保存したファイルの中のデータを覗く手もありますが、ここでは理屈で割り出してみます。
この円のアンカー間の線(セグメント)を1つとってみると、ハンドルは左右対称形をしています。ハンドルが左右対称形の場合、パラメータ t = 0.5 のときの点は曲線の中点になります。これは、前回触れた何とかのアルゴリズムに照らしてみると直感的にも明らかでしょう。
いま、原点を中心とした半径1の円を、だ円ツールで描いたとして、アンカーとハンドルの座標を図のように割り当ててみます。
この曲線を円弧とするなら、パラメータ t = 0.5 のとき、曲線の中点( cos 45°、sin 45°)を通るようにするのが良さそうです。(ハンドルは左右対称形なので t = 0.5 のときに中点を通ります。)
これらの事情を元にして、前回のベジエ曲線の  の式に、パラメータ t と各点の x 座標を代入すると、半径1の円を描いたときのハンドルの座標の値 a は次のように求められます。
なお、このようにハンドル長を決めたベジエ曲線は、あくまで円を近似したもので、正円と比べると若干の誤差があります。計算してみたところ、ベジエ曲線上の点と原点との距離は、約 1.00000 〜 1.00027 の範囲になりました。より誤差を少なくするような制御点の取り方もあるはずですが、弧の中点と中心を結んだ距離が半径と一致する、としたほうが、何かと便利な気もします。
また、このハンドル長の値は、約 0.5522847 になり、Google 検索すると円関係の定数としていくつか Hit します(詳細不明)。Illustrator CS で原点を中心に半径 1000pt の円を描いて、保存したファイルの中身を見ると、552.2852 という座標値になっていました。
任意の中心角の円弧の場合も、上記と同様にしてハンドルの長さを求められます。
アンカーとハンドルの座標を左の図のように割り当てて計算すると、 a は以下のような値になります。
s.h’s page
