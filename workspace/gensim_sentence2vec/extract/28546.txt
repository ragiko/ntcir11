最近、ドメイン駆動設計ってどうやって実践すればいいかなーという質問をよくされるので、この記事が満額回答にはならないと思いますが、書いてみたいと思います。
シンプルな問題はトランザクションスクリプト、いわゆる手続き型で対処できます。問題が小さいのでコードは直接的でわかりやすくなる傾向にあります。
とはいえ、世の中の問題はシンプルなものばかりじゃない。複雑な問題もある。DDDの著者であるEric氏は、複雑な問題はドメインモデルを使って対処すべきと説く。
ドメインとは問題の領域とか知識の範囲をいうのですが、DDDはそのドメインにある概念をモデル(ドメインモデル)として定義して、さらに実装として紐付けていく設計手法です。
モデルクラスは概念ありき
例えば、電車にまつわるドメインで考えたとしたら
電車
乗客
駅
ダイア
などの概念が登場します。
現実世界に限った話ではなく、仮想世界でもドメインはありますね。
例えば、PRGはどんなドメインになるかというと
主人公
アイテム
武器
防具
仲間
街
街の人
モンスタ
クエスト
というような概念が必要になってくるでしょう。僕らがよく使っているGitだってドメインはあるわけです。Commit, Tree, Blobなど。
モデルクラスの実装を日々見ていると、これがモデルだ!と思ってしまいがちですが、実際のモデルは利用者つまり人間の頭の中にある概念を指しています。モデルとしての実装であるモデルクラスは写像ですね。概念が先にあってモデルクラスがあるということです。
モデルにはシナリオがある
これらのモデルをどのように使うか、シナリオがあります。”主人公は武器や防具を装備できるというシナリオがあった場合は次のような属性や振る舞いを持つことになるでしょう1。
ユビキタス言語とドメインモデル、そしてモデル探索のうずまき - じゅんいち☆かとうの技術日誌
