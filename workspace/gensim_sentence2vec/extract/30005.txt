今更ですが、
あけましておめでとうございます。
今年も頑張って更新していきますので
今年もよろしくお願いします。
さて、
何かプログラムやりたいなーってことで
OpenGLでもやろうかと思ったんですが、
最近周りがみんな「OpenGL!OpenGL!」って言ってるので
あえてOpenALでも触ってみようかなと思い(笑)、
音が鳴るところまでやってみました。
今回はOpenAL1.1SDKとALUTを使いました。
なんかC++のラッパーライブラリとか色々あった気がするけど
とりあえずALUTで。
さてまずはインストール。
ここからDL出来るはず。
もしかしたら何か余計なソフトとかついてくるかもしれないのでご注意を。
他にDL出来るとこあるならそこでも大丈夫です。
OpenAL11CoreSDK.exeっていうファイルがDLされるので
実行してインストール。
んで次にALUT。
ここからDL。
これも他にもDL出来るところあるかと思います。
DLが完了したら、
freealut-1.1.0-bin.zipを解凍し、以下ファイルを以下ディレクトリへコピー
・"alut.h"をOpenAL 1.1 SDK/includeへ
・"alut.lib"と"alut.dll"をOpenAL 1.1 SDK/libs/Win32へ
今回このように1つのフォルダにまとめてしまいましたが、
解凍したフォルダをそのままCドライブ直下に置いても大丈夫です。
私は一応C直下に解凍したフォルダも置いています。
次は、alut.dllを使うために、環境変数の設定をします。
コントロールパネルのシステムあたりから
システムの詳細設定>環境変数の設定画面を開きます。
そして、システム環境変数のPathをクリックして、編集を選択します。
既にある変数値を変更しないように注意して、
最後尾にパスを追加するのですが、
OSの32/64ビットによって異なるので注意してください。
32bit版の人は
;C:\Program Files\OpenAL 1.1 SDK\libs\Win32
を追加。
64bit版の人は、
;C:\Program Files (x86)\OpenAL 1.1 SDK\libs\Win32
を追加。
ちなみに最初の;は変数値を区切るためのもので
既に最後尾にあるなら必要ないです。
あとはOKを押して変更を反映させて完了。
さて、いよいよコードを書きます。
空のプロジェクトを作成。
私は今回VS2013で空のプロジェクトを作成しました。
プロジェクトを作成したら、プロジェクトのプロパティを開いて、
VC++ディレクトリのインクルードディレクトリに
C:\Program Files\OpenAL 1.1 SDK\include
を追加。
続いて、ライブラリディレクトリに
C:\Program Files\OpenAL 1.1 SDK\libs\Win32
を追加します。
これで準備は完了です。
ちなみに1つのフォルダにまとめなかった人は、
それぞれのフォルダもVC++ディレクトリの参照設定に追加してくださいね。
以下、main.cppです。
#include <cstdio>
#include <cstdlib>
#include <alut.h>
#pragma comment(lib, "OpenAL32.lib")
#pragma comment(lib, "alut.lib")
int main(int argc, char **argv)
{
ALuint buffer, source;
alutInit(&argc, argv);
buffer = alutCreateBufferHelloWorld(); // ファイルが無い人はこっち
//buffer = alutCreateBufferFromFile("test.wav"); // ファイルがある人はこっち
alGenSources(1, &source);
alSourcei(source, AL_BUFFER, buffer); // 音データのバッファを指定
alSourcei(source, AL_LOOPING, AL_TRUE); // ループの設定
alSourcePlay(source);
alutSleep(1);
getchar();
alutExit();
return EXIT_SUCCESS;
}
実行の際に「alut.dllがないため～」というエラーが出た人は、
とりあえずdllファイルのみをプロジェクト直下にコピーすることで
実行可能になると思います。
では、ソースを簡単に読んでいきますか。
まずalut.hをインクルード。
2つのライブラリファイルもここで追加。
ライブラリの設定はプロジェクトのプロパティ内でも出来ますが
個人的にpragmaで書く方がわかりやすくて好きです。
alutInitはalutの初期化。
次にファイルを読みこみをします。
ファイルの用意が出来ていない人は
alutCreateBufferHelloWorld()という関数を使うことで、
なんと!男の声で"Hello World"と言う声が再生されます!
ファイルが無くても再生のテストが出来て、
しかもHelloWorldとしゃべってくれる、
この無駄な感じがたまらんですね笑
ファイルがある人はalutCreateBufferFromFile()を使用して、
引数にファイルのパスを渡す。
今回私はプロジェクト直下にファイルを置いたため、
パスは"test.wav"のみです。
alGenSourcesは音源管理用のIDとやらを作るらしい…です。
で、alSourceiで音源の各種設定(ループなど)を行います。
引数は3つあって、基本的には
alSourcei(作成したソース、設定したい項目を表す定数、設定値);
ってな感じらしいです。
上記のサンプルコードだと、
"alSourcei(source, AL_BUFFER, buffer);"
は、多分バッファに入ってる音データをソースに紐づけとかしてるんじゃなかろうか。
"alSourcei(source, AL_LOOPING, AL_TRUE);"
は、ループ再生の設定。今回はループをtrueに。
んで、alSourcePlayで再生。引数はソース。
alutSleepを行わないとループがちゃんと行われないらしいので注意。
ちなみにgetcharはループを確認するために、
コマンドラインが終了しないように入れているだけです。
Enter押せば止まります。
最後に、alutExitで後処理を行っておしまい。
プログラムの大まかな流れとして、
バッファ作成ソース作成再生、的な感じ。
ちなみにバッファやソースをポインタではなくてuint型で指定しているのが、
OpenGLのテクスチャの扱いに似ているとか似ていないとか。。。
ちなみに再生対応フォーマットはwav、au、rawの3つらしいです。
wav以外あまり見かけることのない形ですね。
じゃあmp3とかoggは?ってことになると思いますが、
OpenALはオーディオの再生に特化したライブラリであり、
mp3やoggなどのデコードには対応していないそうです。
これらのファイルを使う場合には事前にファイルのデコードを行って
リニアPCMの形でデータを渡してやる必要があるのだとか。
まぁその辺はとりあえずいいや。
まず音が鳴ったので今回はこれでおしまい。
※今回OpenALで音を鳴らしてみるにあたって大変参考になったサイト。
今回の記事もここを参考にして書いています。
「せっかくだから俺はプログラマの道を選ぶぜ@wiki」
「Atsushi Ito's page」
次はちゃんと3D的なやつとかもやってみたいなー。
せば、まず。
OpenALで(ALUT使って)音を鳴らすまで。 - KocooN_Memo!
