新しいシステムを構築する場合でも、既存のシステムを更新する場合でも、侵入者がどのような攻撃を仕掛けてくるかを常に考慮し、システムの設計段階や実装段階で適切な防御策を講じておく必要があります。マイクロソフトでは、脅威のモデル化と呼ぶ手法を使って、安全性の高いシステムの設計を行っています。脅威のモデル化とは、設計レベルでセキュリティの問題を見つけ出して解決するために行う、システム設計またはアーキテクチャの系統的レビューです。脅威のモデル化は、セキュリティ開発ライフサイクルに不可欠な部分です。
脅威のモデル化には複数の方法があり、万人が認める唯一正しい方法と言うものはありません。脅威モデルの品質を正確に測定できる方法は確立されていません。また "脅威" という用語にもさまざまな解釈があります。それが、悪の本質でもありますが、暗号化のように比較的成熟した分野であっても、普及しているアルゴリズムの中に、まだ安全であるとは証明されていないものが多数あります。しかし、特定の設計が安全であるかどうかを証明できないとしても、間違いから学習し、同じ間違いを繰り返さないようにすることはできます。これが、脅威のモデル化の本質です。
この記事では、マイクロソフトの Security Engineering and Communications グループが策定した、脅威のモデル化を行う系統的手法を説明します。脅威のモデル化も、他のセキュリティ開発ライフサイクルと同様に、進化、および新しい状況への対応を繰り返しています。この手法は、安全なコードを開発する独自のプロセスを作成する際のベースラインとして役立ちます。
優れたソフトウェアを設計することはそれだけでも難しいことですが、セキュリティを考えると一層難しくなります。システムの中に組み込まれてしまった欠陥は、通常の使用状況で表面化することも、表面化しないこともあります。確かに、通常の使用状況では実際の問題にはならない欠陥もあります。しかし、セキュリティの面から考えると、攻撃者は、そのような欠陥を利用するために必要となるかなり限定的な状況を作り上げて障害を発生させることもあるので、こうした欠陥も問題になります。10 億回に 1 回程度、ランダムにしか発生しない事象は、関係がないとして考慮されないこともあります。しかし、その欠陥がセキュリティに影響するならば、攻撃者は必ずその欠陥を悪用します。
安全なソフトウェアを設計するうえでの問題の 1 つは、さまざまなグループがさまざまな観点からセキュリティを考えることです。ソフトウェア開発者は、主にコードの品質の観点からセキュリティを考えます。一方、ネットワーク管理者は、ファイアウォール、障害対応、システム管理について考えます。研究者であれば、主に、Saltzer と Schroeder による伝統的な設計原則、セキュリティ モデルなどの概念からセキュリティを考えます。当然、安全なシステムを構築するには、これらすべてが重要です。図 1 に、Saltzer と Schroeder による設計原則の概要を示します。この原則の唯一最大の問題は、セキュリティの達成基準がないことです。セキュリティの欠陥を避けるには、セキュリティが確保された状態とはどのような状態かを認識しておく必要があります。
脅威のモデル化: セキュリティ設計の欠陥を STRIDE 手法で明らかにする
