そろそろiPadminiのretina対応が発表されて意識の高い気分の人たちが、「うむ、やはり時代はretinaだな」とか言うんじゃないかと睨んでます。
PC版であまりretinaディスプレイを意識して作った事はないのですが、スマホは別ですね。
まだまだ通信量を下げておきたいところなので、コーディグ前にどのように画像を切り出すかが悩ましいところです。
高解像度用の画像に対応させる方法
1.読み込ませる画像の大きさを半分にする。
メリット:簡単
デメリット:画像修正の時はHTMLも触らないといけない場合がある。(管理がしにくい)
2.JavaScriptライブラリを使う(今回はRetina.js)
メリット:高解像度用の画像を用意するだけで、勝手に読みこんでくれる(管理しやすい)
デメリット:読み込む画像の数が増えるので、通信量が増える。
3.Media Queriesを使って高解像度用のディスプレイを判定。
メリット:画面サイズにあった画像を読みこませることができる。
デメリット:毎度高解像度用の画像を設定するのが面倒。
一応demoを用意しています。
1.読み込ませる画像の大きさを半分にする。
2倍の大きさの画像をwidth属性、height属性、もしくはCSSで表示サイズを半分に指定するという方法で表示させます。
今更だけどretina対応を考えてみた[簡単]  –   Cntlog
