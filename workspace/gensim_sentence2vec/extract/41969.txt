本稿では Acrobat 8 Professional の OCR 機能を利用し、如何にすれば「確度の高いテキスト」を抽出し得るのか、検証した方法と其の工程を述べる。
尚、Acrobat 8 に処理させる文書は、 ドキュメントスキャナ・ ScanSnap S300M で読み取った PDF 書類である。
試行環境は MacOS X 10.5(Intel) 。以下で言及する ScanSnap とは、 モデル・ S300M のこと。亦 Acrobat は "Acrobat 8 Professional" を指す。
尚、正誤の判定は文節の破断(後述する)箇所を除き、 Ruby で「各ファイルに含まれる文字の数を計量する」スクリプトを書いて実行・集計している——いちいちファイルを開いて文字数を数えて照らし合わせた結果を記録する等という間怠っこしい作業は御免被りたい。
動機
Acrobat に実装された OCR は、 以前のエントリ『縦書き文章の読み取り』に於いて、非常に良い抽出率を有すと記した。
しかし——その後、幾つか別の文書を処理してみたところ、取り出せたテキストの正確さには、酷くばらつきが見られた(予期されたことではある)。
此の不揃いな結果を生む要因が何処にあるのか、如何為れば、より元本に忠実な内容を得られるのか?
本・エントリは、斯くある判じ物を究明せんが為に記されたものである。
計測の方法を考える
改めて述べる迄もないが——特殊な文字(「外字」、「ユーザ定義文字」等)が混入している場合、 OCR で元元の文字を正しく認識出来ぬばかりか、機械的な比較をも困難とするので、可能な限り此等を含まない書物・ページを選ぶ。
書物から、対象ページを選出する
対象ページに記されている文面を、一からキーボードで入力、文字コード・ UTF-8 のテキストファイルとして保存。最も正確に写し取られた此を、比較する上での「底本」とする
「ファイン」、「スーパーファイン」、「エクセレント」の各画質毎に、上のページをスキャンする
Acrobat の  OCR でテキストを取り出し、銘銘テキストファイルとして保存。文字コードの種別は底本側に準ず。
基本的には、上で示した計・四つのテキストファイルの内容を比べれば良い。
因みに、画質設定が上位であれば、抽出為得るテキストが 100% 合致する状態へ近付いていくという「思い込み」は、事実から程遠い。
スキャン時には、一文字が分離されてしまう現象(*1)も度度見られる為、文字 の総量が増した / 減ったという調査だけでは、明らかに不十分である。
——比較の詳らかな方針、続く各項にて纏める。
(*1) "吾"が"五"と"口"になり、"初"が "1"と"4"になる。三点リーダ"…"は":"ふたつ分に分解される等、挙げれば枚挙に暇がない
読み取りモード
対象となるページをスキャニングする際の読み取りモードは「白黒」に固定。
OCR でテキストを抜き出す際には、「カラー」であろうと「白黒」であろうと、際立った差は見られない(筆者経験則に依る)。よって、 PDF 上の元本を参照する際に、コントラストが明瞭で見易い側を採る。
OCR 実行時のテキスト認識に纏わる設定値
Acrobat メニューバー内、文書OCR テキスト認識OCR を使用してテキストを認識を選択
新たに出現する「テキスト認識」ダイアログ「編集」ボタンをクリック
更にダイアログが続いて現れるので、「  OCR の言語」プルダウンメニューで "日本語" を選択
「PDF の出力形式」プルダウンメニューで、 "検索可能な画像(非圧縮)" を選択……この値を選ぶと、直ぐ下にある「画像のダウンサンプリング」プルダウンメニューはグレイアウトされる
計測・比較に於ける方針
一文字一文字の一意性を順番に確かめるのではなく、当該ページ内に「どの文字が、何個書き込まれていたのか」迄、判定基準を落とす
人間が読解する時に文脈を追う上で、区切りを示すシンボルという以上の意味を持たず、 Spotlight 等の検索プログラムで入力される見込みが皆無と言える記号類を、比較の対象から除外(*2)
(*2) 但し、人物の科白で文頭と文尾を示すという役目に宛がわれることの多い鉤括弧 "「", "」"は含めた儘とする
底本に於けるテキストの整形
各行の上・下端は、必ず元の印刷物と等しい外観を保つよう努める……具体的には、一行を規定の文字数で終わらせ、改行文字を挿入する(後にスクリプトで除去されてしまう。が、 QuickLook を利用したプレビューにて各行の文字配置状態を瞥見出来るという便がある)。
Acrobat の OCR プラグインは、ルビとして付された極小さな文字も読み取り得るが、惨憺たる状態の誤変換となることが多いので、比較の対象から外す——底本・ OCR 抽出テキストの中から、全て振り仮名と思しきものは取り除く。
ページ上下に配される章の題名、ノンブル(ページ番号)等も抽出可能であったが——本文とは繋がり得ないので——敢えて削り取る。
OCR にて抽出されたテキスト・文節の欠落
OCR で縦書き文書を元に抽出されたテキストの大きな特徴として、文の下方に位置する一節をまるまる欠くは珍しくない。欠け落ちる箇所は画質に左右されず、同じページであれば、殆ど一致する……但し、失われる文字の分量に差はある。
(注)下の表で、減少した文字の列に「大きめの負の値」が入っている場合、該当するものと解して良い。
OCR にて抽出されたテキスト・文節単位の移動
或る行に於いて下端に位置していた文節が矢庭に断ち切られ、其の続きが此亦唐突にページ末尾に新しい行の形で後続することがある。
(注)斯くある現象が見受けられた故に、正誤の判定は、一文字ずつ合致しているかの逐次記録よりも「底本と比べた際に『文字の種類』と『総数』が等しいのなら、 OCR は妥当な文字群を取り出している」という落とし所になった。
OCR にて 抽出されたテキスト・除去或いは置換した文字
以下で、スクリプト内での処理に於いて、意図的に手を加えた文字と其の理由とを併せて列挙する。
底本の内で加工した文字
"……"二回以上連続する三点リーダ。 ":", "・" といった誤変換を OCR が行うので除去
"!"全角のエクスクラメイションマーク。 OCR で 半角に変換されるので一律半角に併せる為、置換
"?"全角のクエッションマーク。 OCR で 半角に変換されるので一律半角に併せる為、置換
"——"語句の間を繋ぐ連続したダッシュ (EM dash)。 OCR で "||"等に誤変換されるので除去 (*3)
"("全角の括弧・開き側。 OCR で 半角に変換されるので一律半角に併せる為、置換
")"全角の括弧・閉じ側。 OCR で 半角に変換されるので一律半角に併せる為、置換
"〇"全角のアラビア数字・零。 OCR で 半角に変換されるので一律半角に併せる為、置換
" "全角のスペース。 OCR で 半角に変換されるので予め除去
OCR で抽出されたテキスト内で加工した文字
":"半角コロン。三点リーダの誤変換であることがとても多いので、初手から除去
"・・"二回以上連続する中黒。三点リーダの誤変換であることがとても多いので、初手から除去
":・"連続する中黒と半角コロン。三点リーダの誤変換である疑いを捨てきれないので、初手から除去
"・:"連続する半角コロンと中黒。三点リーダの誤変換である疑いを捨てきれないので、初手から除去
"||"連続するパイプ。 垂直になった"—" (EM dash) の誤変換。先ず検索対象とすることはない文字なので除外
"ll"連続する小文字の "L" 。垂直になった"—" (EM dash) の誤変換。検索対象とすることはない文字なので除外
改行文字 (CR, LF) は双方とも除去し、スクリプト中では数百の長さを持つ文字列として扱っている。
(*3) 二回以上連続して配置し、語句の合間を繋いだり、或いは副題を挟み込んだりする用途に供せらるる直線。(日本語の仮名文字で)長音を表す符号でも、ハイフンでも、マイナス記号でもない。
スクリプト実行結果の例示
以下に示すふたつの内容を持ったテキストファイルを例にとる。
底本側ファイル
あああああ
りりりりり
OCR でテキスト化したファイル
あああああ
りりりいり
OCR 側ファイルの処理結果は次の通り(底本と比べた際の異同を表す)。
総計: 10
あ: ±0
い: +1
り: -1
計測の結果
本項にて、計測結果を表の形で示す。
単一の書籍で得られる結果のみでは当てにならぬ事、先刻承知。
依って「文庫」、「新書」、「硬表紙(ハードカバー)」と、異なった装丁・寸法で、別別の出版元から発行された本を手元に揃えた。其其 3 ページ分を無作為に選び出して検証に供する。
表・各書籍の寸法について
各各の値に於ける計測の規則と、其れに纏わる注意点を記す。 1mm 以下の単位は、定規の目盛に照らし合わせた際の目分量に過ぎない(あやふやで不正確)。
「寸法」……「縦 / 横」とは、綴じ代を裁断した後の値ではなく、元の紙片 1 ページ分の長さである。
「文字の大きさ」……(目には見えぬが)方眼があると考え、四辺が等しい長さを持つと仮定
「字間」……縦書き文書の垂直方向字間は、「禁則処理」が施されている行の場合、周囲とは合致しないことが多多ある。代表的な例を挙ぐれば句読点の「ぶら下げ」、「追い込み」が為されていると、字間は狭まる。反対に「追い出し」たなら、行末一文字分が空白となる。
無論「字間」で示している値は、禁則処理が行われているであろう部位を、意図的に避けて計った。
(参考)「禁則処理」の梗概については、 Wikipedia 禁則処理 - 禁則処理の仕方 を参照のこと
(参考)句読点、括弧といった「約物」の定義については、 Wikipedia 約物を見よ
表・各列の名称について
各列のヘッダセルに記した題の意を詳解する。
計測対象……底本とした手入力のテキストファイル、並びに各画質でスキャニング・ OCR 処理を経て得られたテキストを保存した何れかのファイルを指す
総数……直ぐ上で触れた各テキストファイル内にある文字の数を合計した値
増加……全てのテキストファイルと照合した折に、余分に増えている文字。主として、誤変換により生じた、底本側で存在していない文字の合計
減少……底本と比して全てのテキストファイルと照合した結果、減じている、或いは、失われている文字の合計
破断……行の下方に位置する部分が途切れている箇所の数。此等は本来或る可き場所とは全く別の行に移されているか、或いは跡形もなく喪失している。既出の「文節の欠落」と「文節単位の移動」を併せて取り扱う為に定義している
文庫
1 ページ内に於ける平均文字数は、此度検証に用いた書物中で一番寡い。反面、紙面の寸法自体も最小であるが故に、文字の大きさも亦最小。
本文中の記号類の使用と、各行の脇に配されたルビの文字量が多い——一枚の紙が小振りな為、文字を詰め込む必要があり、行間が狭いので若干見辛い。
寸法……縦: 147.5mm、横: 105mm (*4)
マージン……上: 13mm、下:23mm 、左右: 12mm
文字の大きさ……2mm
行間……3.0 から 3.25mm の間
字間……0.75mm (*5)
文庫・ページ A
ルビ……  14箇所
文庫・ページ A
計測対象総数増加減少破断
吾輩はブログである。名前は未だ無い 縦書き文書を対象とした  Acrobat の OCR 精度を検証する
