UNIX間でのアプリケーション移植の基礎知識
UNIXを元にした OS は数多くあり、単純に一つのプログラムを作ったからといってすべての
UNIX 上で簡単に動作するわけではありません。Solaris, HP-UX, AIX, Linux, FreeBSD など、それぞれの
OS
に合わせたプログラムを作らなければなりません。そこで、ここでは UNIX間で移植性のあるプログラムを作るにはどんな点に注意しなければならないかまとめてみます。
はじめに
一般的な移植上の問題として以下のことが上げられます。
ハードウェアの違い(ハードウェアに依存するコード)
オペレーティングシステムの違い(OSに依存するコード)
構築環境の違い(環境に依存するコード)
ここでは、これらの問題を取り上げどういった点に注意が必要なのかを簡単に記述します。
ハードウェアに依存するコード
移植性を考慮したプログラムを作る上でもっとも難しいのは、特別なハードウェアを含むアプリケーションを作成する場合です。この節では、以下の3種類のハードウェア依存の問題について考えます。 
独自仕様なインターフェース
バイトオーダー (エンディアン)
アライメント
独自仕様なインターフェースを持つものの移植性を高める
UNIX アプリケーションには、データオペレーションをより高速化するために固有の CPU 命令(アセンブラ)を使用することによって、独自なインターフェースを使用するものがあります。これらのインターフェースは、システムモニタやイメージフィルタ、デバイスドライバなどでしばしば書かれています。ほとんどの場合、これらは以下の方法のうちのいずれかにより、インターフェースの移植性を高めることができます。 
UNIX間でのアプリケーション移植の基礎知識
