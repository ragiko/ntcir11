
5 空間データの索引付けおよび問合せ
空間データを使用した問合せのパフォーマンスを向上させるには、空間データのロード(第4章を参照)が完了した後で、データに対して空間索引を作成する必要があります。この章では、次の操作を実行する方法について説明します。
空間索引の作成(5.1項を参照)
Oracle Spatialの問合せモデルおよび1次フィルタ処理と2次フィルタ処理を理解したうえでの効率的な空間データの問合せ(5.2項を参照)
5.1 空間索引の作成
効率的にデータにアクセスするには、バルク・ロードまたはトランザクション・ロードによる空間表へのデータのロードが完了した後で、表内の各ジオメトリ列に対して空間索引(空間Rツリー索引)を作成する必要があります。たとえば、次の文は、すべてのパラメータについてデフォルト値を使用して、territory_idxという空間索引を作成します。
CREATE INDEX territory_idx ON territories (territory_geom)
INDEXTYPE IS MDSYS.SPATIAL_INDEX;
空間索引の作成のオプションの詳細は、第18章のCREATE INDEX文を参照してください。
索引作成が完了しなかった場合、索引は無効になるため、DROP INDEX <index_name> [FORCE]文で削除する必要があります。
索引付けされる各ジオメトリ列内では、すべてのジオメトリのSDO_SRID値が同じである必要があります。
空間索引は、2次元、3次元または4次元のデータに作成できます。デフォルトの次元数は2ですが、3次元以上のデータの場合は、sdo_indx_dimsパラメータ・キーワードを使用して、索引を作成する次元数を指定できます。 (3次元ジオメトリのサポートの詳細は、1.11項を参照してください。 問合せ要素における次元の様々な組合せのサポートについては、5.2.3項を参照してください。)
Oracle Databaseの自動UNDO管理機能またはPGAメモリー管理機能のいずれかを使用していないか、あるいはこの両方を使用していない場合、設定する必要のある初期化パラメータの値については、5.1.7項を参照してください。自動UNDO管理およびPGAメモリー管理の両方は、デフォルトで有効になっており、これらを使用することをお薦めします。
CREATE INDEX文のtablespaceキーワードで指定された表領域(または、tablespaceキーワードが指定されていない場合はデフォルトの表領域)を使用すると、索引データ表、および内部計算用に作成されたいくつかの一時表の両方が保持されます。WORK_TABLESPACEを表領域として指定すると、一時表は作業表領域に格納されます。
1,000,000行を超える大規模な表では、内部ソート操作を実行する場合に一時表領域が必要です。この一時表領域のサイズは、最大値を1GBとして、100×n バイト(n は表の行数)にすることをお薦めします。
空間索引の作成に必要な領域を推定するには、SDO_TUNE.ESTIMATE_RTREE_INDEX_SIZEファンクション(第31章を参照)を使用します。 
5.1.1  特定のジオメトリ・タイプへのデータの制限
空間索引の作成または再作成時、表内のすべてのジオメトリ、または後で挿入されるすべてのジオメトリを、指定したジオメトリ・タイプにすることができます。 このように、データのジオメトリ・タイプを制限するには、CREATE INDEX文またはALTER INDEX REBUILD文のPARAMETERS句でlayer_gtypeキーワードを使用し、2.2.1項の表2-1の「ジオメトリ・タイプ」列の値を指定します。次に、レイヤー内の空間データをポリゴンに制限する例を示します。
CREATE INDEX cola_spatial_idx
ON cola_markets(shape)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS ('layer_gtype=POLYGON');
表2-1のジオメトリ・タイプは、データの確認時に階層とみなされます。
MULTIフォームには、通常のフォームも含まれます。たとえば、'layer_gtype=MULTIPOINT'を指定すると、レイヤーには、POINTジオメトリおよびMULTIPOINTジオメトリの両方を含めることができます。
COLLECTIONを指定すると、レイヤーには、すべてのジオメトリ・タイプを含めることができます。
5.1.2 クロススキーマの索引作成
自分のスキーマ以外にある表に対して、空間索引を作成できます。ユーザーBが、ユーザーAのスキーマにある表T1のGEOMETRY列に空間索引を作成するとします。次に手順を示します。
権限を持つユーザー(SYSTEMなど)としてデータベースに接続し、次の文を実行します。
GRANT create table, create sequence to B;
権限を持つユーザーとして接続するか、またはユーザーAとして接続して(接続をユーザーAに切り替えて)、次の文を実行します。
GRANT select, index on A.T1 to B;
ユーザーBで接続し、次の文を実行します。
CREATE INDEX t1_spatial_idx on A.T1(geometry)
INDEXTYPE IS mdsys.spatial_index;
5.1.3 パーティション空間索引の使用
パーティション表にはパーティション空間索引を作成できます。この項では、Oracle Spatial固有の使用上の考慮点について説明します。 パーティション表およびパーティション索引の詳細は、『Oracle Database管理者ガイド』を参照してください。
パーティション空間索引には、次のメリットがあります。
パーティション化によってディスクI/O操作が削減されるため、長時間実行問合せの応答時間が短縮されます。
I/O操作が各パーティションで同時に実行されるため、同時問合せの応答時間が短縮されます。
パーティション・レベルでの作成および再作成操作によって、索引のメンテナンスが容易になります。
パーティションの索引は、他のパーティションに対する問合せに影響を与えずに再作成できます。また、各ローカル索引の記憶域パラメータは、他のパーティションとは無関係に変更できます。
複数のパーティションの検索にパラレル問合せが実行されます。
並列度は、USER_INDEXESビューに表示される索引の行のDEGREE列の値(CREATE INDEX、ALTER INDEXまたはALTER INDEX REBUILD文のPARALLELキーワードの指定値またはデフォルト値)です。
マルチプロセッサ・システム環境における問合せ処理が向上します。
マルチプロセッサ・システム環境では、パーティション化された空間索引を持つ表に対して空間演算子が使用され、問合せで複数のパーティションが検索される場合、複数のプロセッサを使用して問合せを評価できます。使用されるプロセッサの数は、並列度と、問合せの評価に使用されるパーティションの数によって決まります。
空間索引のパーティション化には、次の制限事項が適用されます。
空間表のパーティション・キーは、空間列ではなく、スカラー値である必要があります。
基になる表では、レンジ・パーティション化のみがサポートされています。その他すべての種類のパーティション化は、パーティション空間索引ではサポートされていません。
パーティション空間索引を作成するには、LOCALキーワードを指定する必要があります。(LOCALキーワードを指定しないと、すべての表パーティションのデータに非パーティション空間索引が作成されます。)次の例ではパーティション空間索引を作成します。
CREATE INDEX counties_idx ON counties(geometry)
INDEXTYPE IS MDSYS.SPATIAL_INDEX LOCAL;
この例では、索引パーティションの数および配置に、次のデフォルト値を使用します。
索引のパーティション化は、基になる表のパーティション化に基づきます。表パーティションごとに、対応する索引パーティションが作成されます。
各索引パーティションは、デフォルトの表領域に置かれます。
個々のパーティションに対してパラメータを指定する場合は、次の考慮点が適用されます。
各パーティションには、各パーティションに同じ記憶特性か、またはそれぞれ異なる記憶特性を指定できます。記憶特性が異なる場合は、パラレルI/O(表領域が異なるディスク上にある場合)が使用可能になり、パフォーマンスが向上する場合があります。
sdo_indx_dims値には、すべてのパーティションで同じ値を指定する必要があります。
各パーティションで使用されるlayer_gtypeパラメータ値(5.1.1項を参照)には異なる値を指定できます。
パーティション化のデフォルト値を上書きするには、次の一般的な形式のCREATE INDEX文を使用します。
CREATE INDEX <indexname> ON <table>(<column>)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
[PARAMETERS ('<spatial-params>, <storage-params>')] LOCAL
[( PARTITION <index_partition>
PARAMETERS ('<spatial-params>, <storage-params>')
[, PARTITION <index_partition>
PARAMETERS ('<spatial-params>, <storage-params>')]
)]
パーティション表で問合せを操作して、1つのパーティションのみに対する問合せを実行できます。次に例を示します。
SELECT * FROM counties PARTITION(p1)
WHERE ...<some-spatial-predicate>;
複数の問合せを異なるパーティションで同時に操作する場合、選択したパーティションに対する問合せを行うと、問合せが高速化され、スループット全体が向上する場合もあります。
問合せでパーティション空間索引を使用する場合、空間演算子およびファンクションのセマンティック(意味または動作)は、SDO_NN(最も近くにあるもの)の場合を除いて、パーティション索引および非パーティション索引を使用する場合と同じです。SDO_NNの場合、その問合せによって影響されるパーティションごとに、要求した数のジオメトリが戻されます。 たとえば、ある地点に最も近い5つのレストランを要求し、空間索引に4つのパーティションがある場合、SDO_NNは最大20(5ラ4)のジオメトリを戻します。この場合、最も近い5つのレストランを戻すために、ROWNUM疑似列(ここでは、WHERE ROWNUM <=5)を使用する必要があります。詳細は、第19章のSDO_NN演算子の説明を参照してください。 
5.1.3.1 ローカル・パーティション空間索引の作成
ローカル・パーティション空間索引を作成する場合は、PARALLELキーワードを使用するかわりに、この項の手順を使用することをお薦めします。この手順では、(表領域に空きがないなど)なんらかの理由でパーティションの索引作成に失敗した場合に、最初からやり直す必要がなくなります。次に手順を示します。
ローカル空間索引を作成し、UNUSABLEキーワードを指定します。次に例を示します。
CREATE INDEX sp_idx ON my_table (location)
INDEXTYPE IS mdsys.spatial_index
PARAMETERS ('tablespace=tb_name work_tablespace=work_tb_name')
LOCAL UNUSABLE;
この文の実行は短時間で行われ、索引に関連付けられたメータデータが作成されます。
ALTER INDEX REBUILD文を使用したスクリプトを作成します。ただし、PARALLELキーワードは指定しません。たとえば、パーティションが100個、プロセッサが10個ある場合は、次のようにALTER INDEX文を10個使用したスクリプトを10個作成します。
ALTER INDEX sp_idx REBUILD PARTITION ip1;
ALTER INDEX sp_idx REBUILD PARTITION ip2;
. . .
ALTER INDEX sp_idx REBUILD PARTITION ip10;
すべてのスクリプトを同時に実行します。これにより、各プロセッサが単一パーティションの索引に対して機能する一方で、すべてのプロセッサではその一連のALTER INDEX文による動作が進められます。
ALTER INDEX文のいずれかが失敗しても、操作が正常に完了したパーティションを再作成する必要はありません。
5.1.4 索引を含むパーティションの交換
EXCHANGE PARTITION...INCLUDING INDEXES句を指定してALTER TABLE文を実行すると、空間表パーティションおよびその索引パーティションを対応する表およびその索引と交換できます。 パーティションの交換については、『Oracle Database SQL言語リファレンス』のALTER TABLE文の説明を参照してください。
この機能を使用すると、次のような様々な状況でより効率的に操作を実行できます。
データをパーティション表に挿入し、索引作成のコストを回避する場合。
パーティション索引を管理および作成する場合。たとえば、データを複数表に分割できます。各表の索引を1つずつ作成して、索引作成中に必要なメモリーおよび表領域リソースを最小化できます。または、索引を複数のセッションでパラレルで作成することもできます。その後、表を(索引とともに)元のデータ表のパーティションと交換できます。
オフライン挿入操作を管理する場合。新しいデータを一時表に格納し、定期的に新しいパーティションと交換できます(履歴データを含むデータベース内など)。
索引を含むパーティションを空間データおよびその索引と交換するには、2つの空間索引(1つはパーティションの索引、もう1つは表の索引)が同じ次元数(sdo_indx_dims値)である必要があります。2つの索引が同じ次元数でない場合は、エラーが発生します。表データは交換されますが、索引は交換されず、変換に失敗したことが示されます。索引を使用するには、その索引を再作成する必要があります。
5.1.5 空間索引および空間データのエクスポートとインポートに関する考慮事項
エクスポート・ユーティリティを使用して空間データを含む表をエクスポートする場合、その処理の動作は、空間データが空間索引付けされているかどうかによって異なります。
空間データが空間索引付けされていない場合、表データはエクスポートされます。ただし、適切な情報でターゲット・システムのUSER_SDO_GEOM_METADATAビューを更新する必要があります。
空間データが空間索引付けされている場合は、表データがエクスポートされ、ターゲット・システムのUSER_SDO_GEOM_METADATAビューに適切な情報が挿入され、ターゲット・システムに空間索引が作成されます。ただし、USER_SDO_GEOM_METADATAビューへの挿入が失敗した場合(たとえば、その空間レイヤーのUSER_SDO_GEOM_METADATAエントリがすでに存在する場合)、空間索引は作成されません。
インポート・ユーティリティを使用して、空間索引付けされたデータをインポートする場合は、次の考慮点が適用されます。
エクスポートするデータの索引がTABLESPACE句を使用して作成された場合、その指定表領域がインポート時にデータベースに存在しないと、索引は作成されません。(これはOracleの他の索引とは異なる動作です。他の索引では、元の索引に指定された表領域がインポート時に存在しない場合、索引はユーザーのデフォルトの表領域に作成されます。)
権限を持つデータベース・ユーザーがインポート操作を実行することが必要な場合にFROMUSERおよびTOUSER書式を使用するときは、インポート操作を実行する前に、次の例に示すように、CREATE TABLEおよびCREATE SEQUENCE権限をTOUSERユーザーに付与しておく必要があります(プロンプトが表示されたらSYSTEMアカウントのパスワードを入力します)。
sqlplus system
SQL> grant CREATE TABLE, CREATE SEQUENCE to CHRIS;
SQL> exit;
imp system file=spatl_data.dmp fromuser=SCOTT touser=CHRIS
エクスポート・ユーティリティおよびインポート・ユーティリティの詳細は、『Oracle Databaseユーティリティ』を参照してください。
空間データの索引付けおよび問合せ
