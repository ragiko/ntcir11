なにが問題になったのか
2014年9月29日から10月3日にかけて、スリランカのコロンボを会場にして、公的な文字コード国際規格「ISO/IEC 10646」の改訂を審議する国際会議(以下、コロンボ会議)が開催された。
現在、我々が使うスマートフォン、タブレット端末、パソコン等は、ほぼすべて文字コード規格として「Unicode(ユニコード)」が実装されている。同規格は前述ISO/IEC 10646と文字セットを共有しており、制定団体であるUnicodeコンソーシアムもコロンボ会議に、リエゾン(投票権のない連繋団体)として参加している。
このUnicodeコンソーシアムはアメリカに拠点を置き、Apple、Google等の有力IT企業を会員に持つ。その上、アメリカという国家として投票権のある代表団、そして委員長とプロジェクトエディターを出している。このようにUnicodeコンソーシアムは豊富な人材・組織を背景に、この分野では圧倒的な存在感を持っている。ところが、過去の経緯により文字の追加に関しては、その決定権を文字コード国際会議に委ねている。つまり、強大な力を持つ彼等をもってしても、この会議は無視できない。
最近、Unicodeコンソーシアムの元に一部の絵文字が特定の人種に偏向しているとの指摘が寄せられたという。同コンソーシアムは検討の末に対応策を作成し、それをコロンボ会議に提出した。ところが各国はこれを了承せず、2つの対抗案を出して論戦が繰り広げたという。
今やスマートフォンやタブレット端末において絵文字は欠かせない存在だが、これらは、もともと日本の携帯電話に実装されたものが起源だ。2009年に提案され、約1年の審議をへてISO/IEC 10646・Unicodeに収録された。そうした絵文字が人種差別的だと指摘されたのなら、日本に住む私たちも関係ないでは済まされない。
そこでコロンボ会議の論戦をお知らせしたいのだが、その前に簡単に絵文字の実装状況を振り返っておこう。というのは、現在、絵文字フォントはカラー化が進んでおり、人種差別的ではないかという指摘はこうした状況と無関係ではないからだ。
現在、絵文字のカラーフォントをサポートしているのは、OSベンダーではApple(2012年、iOS 5.1/OS X 10.7.3以降)、Google(2013年、Android 4.4)、Microsoft(2013年、Windows 8.1)だ。ただしカラーフォントのフォーマットは標準化されておらず、これら絵文字フォントは各OS間で互換性はない。ほかにTwitter、Gmail、Yahoo!メールなどは、OSに依存せずカラーの絵文字を入力、送受信、表示できるようになっている。
他方で、Unicodeの規格票そのものはモノクロで印刷されている。いくつかの絵文字はその名前に色を含んでおり、これらは色が決められていると言えるが、その他の絵文字は、規格上どんな色で実装してもよい。そこで各社は自分の判断で絵文字の色を決めている。顔や人体の絵文字は、期せずして各社足並み揃えて明るい肌色で実装されているが、こうしたところに濃い色の肌を持つユーザーや、肌の色を使い分けたいユーザーの不満が生じる余地がある。図1はUnicodeコンソーシアムが提案に際しておこなった調査結果だ。
Unicode案の内容と問題点
Unicodeコンソーシアムがこの問題について対応策を提出したのは、コロンボ会議が始まる18日前、9月11日のことだった。それが「Skin tone modifier symbols」(「肌色の修飾子・シンボル」以下、Unicode案)[*2]だ。ここでは導入部で、各社が同種の肌色を実装している現状について〈当然のことだが、こうした均一性は多くの否定的な反応を呼び込んでしまった〉と総括し、多くのユーザーが複数のチャンネルを通じて、この問題に要望を寄せてきたことを紹介している。
その上で対応策として提案されているのは、絵文字のうち人間や手・足等を対象に、肌の色調(濃淡/tone)を変える5つの符号だ(図2)。これは単体でも色見本(色のシンボル)として使用可能だが、顔や人体を表す絵文字の直後に置かれると、その絵文字と結合して定められた色調(tone)に変化させる修飾子としてふるまう(図3)。なお、色調の基準は肌の濃淡を表す「フィッツパトリックのカラー標準」[*3]に基づいている。
では、Unicode案の問題点はなんだろう。おそらく多くの人がすぐに思いつくだろうが、過去の実装との互換性に問題を抱えることになる。符号の結合をともなう以上、これを実装するにはフォントの変更だけでなく、文字を描画するレンダリングエンジン、つまりOSやアプリケーション(ブラウザー等)の変更が必要だ。
ということは、サポートしない旧バージョンのOSやアプリケーションでこれらの文字を表示すると「」「?」などに文字化けする。対応済みのフォントに入れ替えた場合でも、レンダリングエンジンが未対応だから、結合せずに絵文字と色のシンボルが並ぶことになる。つまり送信側は絵文字の肌色を変えるつもりが、受信側では絵文字の色は変わらず、直後に色のシンボルが出現してしまう。実装方法によっては文字化けになるかもしれない。これを見たユーザーは混乱するだろう。
ここまで読んだ読者の中には、符号が結合して文字を変化させるという意味で、漢字における細かな違いを区別する技術、IVS(Ideographic Variation Selector)[*4]との類似を感じとる人もいるかもしれない。しかし両者には大きな違いがある。それは互換性への配慮だ。IVSでは実装者は「default ignorable」(デフォルト・イグノラブル/初期状態では無視してよい)と規定するが、Unicode案は以下のように書いている。
「絵文字に平等をサポートしてください」人種差別の指摘にゆれるUnicode -INTERNET Watch
