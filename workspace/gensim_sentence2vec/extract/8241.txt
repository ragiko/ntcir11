
XMLフロンティア探訪
第10回 XHTMLモジュールを利用した言語開発
(完結編)
前々回、上司から呼び出されて、自社の情報システム用に新しい言語をXMLで作ることになったA君。彼が作った言語を理解するために、2回に分けてXHTMLのモジュールについて解説してきた。今回はついに、A君がどうやって1週間で言語を作り上げたのか、その内容が明らかになる。(編集局) 
川俣 晶
株式会社ピーデー
2002/3/5
パパッとお手軽にいこう!
前回までは、便利なモジュールの宝庫であるModularization 
of XHTMLの機能と、それを利用した言語の例としてXHTML 
Basicを解説してきた。今回は、XHTMLとは関係のないモジュールをさらに組み合わせて言語を作ってみよう。もちろん、パパッとお手軽にいこう! 
A君が作った今回の言語は、実はXHTML Basicがあれば機能としては十分なのだが、うるさいお客さんの名前を正確に指定するために、「JIS 
TR X 0047 XMLによる画像参照交換方式」(これを使うと、いわゆる外字を指定する情報を文書に埋め込むことが可能になる。以下、TR X 
0047)の機能も使えるようにしたい、というストーリーで流れを見てみよう。
TR X 0047は、登録されているグリフ(Glyph:いわゆる文字の形)の名前を記述する方法を定めている。名前は、ISO/IEC 10036という規格で定められた手順で登録する。実はすでに「今昔文字鏡」とよばれる漢字検索システムで使用される番号(文字鏡番号)に対応する9万字分のグリフが登録されており、これらについては今昔文字鏡を利用することで、あらためて登録することなく指定し、表示できる(今昔文字鏡については、「XMLフロンティア探訪 
第2回 XMLで解決する外字問題 」参照)。 
例えば、吉田茂元首相の吉の字は、上が「土」になるのが正しいが、このグリフは、ISO/IEC 10036/RA//Glyphs:10003290という名前で登録済みである。これは国際的に認められた名前で、地球上のどこに行っても、この名前は上が「土」の吉であると認められる。実際にこれをXML文書の中に書き込む場合は、http://www.xml.gr.jp/PRE/Referenceという名前空間に属するname属性を記述する。
考えるのは1つだけ
さて、XHTML BasicとTR X 0047を併用する場合は、頭を使って考える作業が1つだけ発生する。それは、TR X 0047のname属性を、XHTML 
Basicのどの要素に付けるか、だ。考え方はいくつかある。例えば、img要素で文字を示す画像データを指定して、それに名前としてname属性を付けるという選択もある。また、span要素に付けて文字についての説明をspan要素の内容に書けるようにする、という選択もある。ここでは、後者の方法を取ろう。つまり、以下のように記述可能にする。
このように記述しておけば、文字を厳密に処理する必要のない場合はname属性を無視して 括弧内の(上が「土」の吉)という説明を見て納得すればよいし、厳密に処理する必要がある場合は、ISO/IEC 
10036/RA//Glyphs:10003290という名前の下の桁を切り出して文字鏡番号と見なして、今昔文字鏡のフォントで表示印刷するようにすればよい。
というわけで、これで言語は完成である。とてもお手軽であることが分かるだろう。
スキーマもパパッといこう 
言語はできたが、この言語仕様を日本語で説明するのでは厳密とはいえない。厳密な定義を与えるには、やはりスキーマを書かねばならない(スキーマについてはスキーマの用語解説を参照)。そして、モジュールを用いた言語作成を行うときには、スキーマもモジュールを活用できる。
ここでは、RELAX 
NGと呼ばれるスキーマ言語を使って、上記の新言語に対応するスキーマを記述してみよう。
最初に思い付くのは、新言語のスキーマのほとんどの部分はXHTML Basicと同等であるということだ。XHTML Basicはメジャーな言語なので、そのスキーマはインターネットを検索すれば手に入るだろうと予測できる。そして、手に入れたらその中の属性の定義を1個書き加えればおしまい、と思うかもしれない。
だが、それはうまい方法ではない。手に入れたスキーマを書き換えてだれかに提出する、ということは、何かあったとき、そのスキーマ全体をメンテナンスする必要に迫られるからだ。もし使用したスキーマ(のオリジナル)に何か問題が発見された場合、修正個所をすべて調べ上げて、自分の言語のスキーマにも反映させなければならない。そのような手間は掛けたくはない。それは手抜きのためではなく、手間を掛けるということは、間違いが入り込む可能性が高まることを意味するからだ。
さて、実際にXHTMLをRELAX NGで記述したスキーマがModularization 
of XHTML in RELAX NGとして存在する。これは、RELAX NGの作成者の1人であるJames Clark氏が記述したものだ。このサイトからは、XHTMLのモジュール1個ごとに対応するスキーマを入手できる。以下が入手可能なスキーマの一覧である。名前からどのモジュールが対応するかは容易に推測できると思う(拡張子rngは、そのファイルがRELAX 
NG形式であることを示している)。
XMLフロンティア探訪 第10回 モジュールによる言語開発の実践(完結編)
