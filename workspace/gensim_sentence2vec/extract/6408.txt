データの同時実行性と整合性の概要
シングル・ユーザーのデータベースでは、他のユーザーが同時に同じデータを変更することがないため、ユーザーは何も心配せずにデータを変更できます。ただし、マルチユーザー・データベースでは、複数のトランザクション内の文によって、同じデータが同時に更新される可能性があります。同時に実行される複数のトランザクションでは、意味のある一貫した結果を出すことが必要です。このため、マルチユーザー・データベースには次の機能が備わっている必要があります。
データ同時実行性は、複数のユーザーが同時にデータにアクセスできることが保証されます。
データ整合性は、各ユーザーにデータの一貫したビューが表示され、その中にユーザー自身のトランザクションや他のユーザーのトランザクションによる参照可能な変更も含まれることが保証されます。
複数のトランザクションが同時に実行される場合のトランザクションの首尾一貫した動作を記述するために、データベース研究者はシリアライズ可能性と呼ばれるトランザクションの分離モデルを定義してきました。シリアライズ可能トランザクションは、他のユーザーがデータベースのデータを変更していないように認識される環境内で動作します。
一般に、この程度までのトランザクションの分離が望ましいとされますが、シリアライズ可能モードで数多くのアプリケーションを実行すると、アプリケーションのスループットがかなり低下する可能性があります。同時に実行される各トランザクションの完全な分離とは、あるトランザクションが問合せを実行している表に対して、他のトランザクションが挿入を実行できない状態を指します。つまり、現実には、トランザクションの完全な分離とパフォーマンスとの間の妥協点を考慮する必要があります。
Oracle Databaseでは、マルチバージョン一貫性モデルや様々なタイプのロックおよびトランザクションを使用することによって、データ整合性を維持します。これにより、データベースが複数の同時ユーザーに対してデータのビューを提示する場合、それぞれ特定の時点において一貫性があるビューになります。異なるバージョンのデータ・ブロックが同時に存在する場合があるため、トランザクションでは問合せに要求された時点でコミットされているデータのバージョンが読み取られ、ある特定の時点において一貫性のある結果が戻されます。
マルチバージョン読取り一貫性
Oracle Databaseでは、マルチバージョン機能によって、複数のバージョンのデータが同時にマテリアライズされます。Oracle Databaseでは、マルチバージョン読取り一貫性が維持され、データベース問合せには次の特徴があります。
読取り一貫性問合せ
1つの問合せによって戻されるデータは、コミット済であり、ある特定の時点での一貫性を保っています。
内容を保証しない読取りの問題を具体的に説明するため、あるトランザクションが列値を更新し、その値がまだコミットされていない場合を考えます。2つ目のトランザクションによって、内容が保証されない更新された値(未コミットの値)が読み取られます。その後、1つ目のセッションによってトランザクションがロールバックされ、列の値が元の値に戻された場合でも、2つ目のトランザクションでは更新された値が引き続き使用されるため、データベースが破損します。内容を保証しない読取りでは、データ整合性が損われ、外部キーに違反し、一意制約が無視されます。
非ブロック化問合せ
データの読取り側と書込み側が互いに処理をブロックしません(「ロック動作の概要」を参照)。
文レベルの読取り一貫性
Oracle Databaseでは、文レベルの読取り一貫性を常に適用することにより、1つの問合せによって戻されたデータがコミット済で、ある特定の時点で一貫していることを保証します。単一のSQL文の一貫性が保たれる基準となる時点は、トランザクション分離レベルおよび問合せの内容に応じて異なります。
コミット読取り分離レベルでは、この時点は文が開始されたときになります。たとえば、SCN 1000でSELECT文が開始された場合、この文ではSCN 1000の時点での一貫性が保たれます。
シリアライズ可能トランザクションまたは読取り専用トランザクションでは、この時点はトランザクションが開始されたときになります。たとえば、複数のSELECT文が実行されるトランザクションがSCN 1000で開始された場合、各文ではSCN 1000の時点での一貫性が保たれます。
フラッシュバック問合せ操作(SELECT ... AS OF)では、SELECT文で特定の時点が明示的に指定されます。たとえば、先週の木曜日の2:00 p.m時点の表を問い合せることができます。
データの同時実行性と整合性
