この記事は公開されてから1年以上経過しています。情報が古い可能性がありますので、ご注意ください。
どうもひめのです。 今回はTracとの連係を行なってみたいと思います。
まず、Tracサーバを用意する必要があります。 VirtualBoxで仮想のCentOS環境を構築し、Kanonをインストールしました。
Kanonとは
Tracなどのチケット(バグ、タスク)管理システム
Subversionなどのバージョン管理ツール
Jenkinsなどの継続的インテグレーションツール
を連携した状態で導入できるツールになります。
もともと、Windows用にTracLightningというものがありますが それをLinux用にしたものがKanonになります。
構築手順は簡単なので公式サイトを確認して下さい。 
Trac連係ツールの導入
前回と同様にタスクの登録を行いますが 新規タスクの作成時に、Install More Connectors... を選択します。
次にコネクタの一覧から Edgewell Trac を選択してインストールします。
インストール後に、再度新規タスク作成画面を開き 今度は Add Task Repository... を選択します。
リポジトリの選択画面が表示されるので Tracを選択して Next > をクリックします。
接続先、ラベル、ユーザ情報を入力して Validate Settings をクリックします。 ここではデフォルトで作成されるadminユーザを利用しました。 問題がなければFinishがクリックできるようになるのでクリックします。
新規タスク作成画面に先程入力したラベル名のリポジトリが追加されていれば導入は完了です。
Tracへのタスク登録
タスクの新規作成画面で先程作成したリポジトリを選択し Finish をクリックすることで以下の新規タスクが作成されます。
タイトルや説明を入力して Submitボタンをクリックすることで ローカルタスクと似た画面が表示され、Task Listに追加されたことがわかります。
次にブラウザからTracのチケットを確認します。
先ほど作成した「Tracテストです。」のチケットが確認できました。 これで、EclipseからTracのチケットが作成できるようになりました。 もちろん、EclipseからTracの情報を更新することもできます。自分のタスクを公開できるので進捗を報告する必要がなくなるかもしれません。
ソースコードとの連係は前回記載したものと同様になります。
次回はJenkinsとの連係を予定しています。
Eclipse Mylyn でタスク管理開発入門 その3 Trac連係 ｜ Developers.IO
