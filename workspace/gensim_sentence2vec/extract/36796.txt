
3.実験による評価と考察
3.1 実験内容
実験は、以下に示す通りに行う。
(1)被験者5名に、図3のWebページで検索を行ってもらう。被験者は、上部と下部に配置されているテキストフィールドに検索ワードを入力し、sendボタンを押す事で、検索を行う。sendボタンを押し、検索ワードを送信すると、中央に検索結果が4つずつ表示される。nextボタン、prevボタンを押す事で、前後の検索結果を表示する。この時、推薦度による並び替えは行わない。本実験では、表示された検索結果と実際のWebページの内容が一致していない場合は考えない事とする。つまり、検索結果の内容が、Webページの内容を正しく要約しているものと仮定している。
(2)被験者が入力した検索キーワードと、どのような検索結果が返ってきたか、ユーザがどの検索結果を選択したか、という情報を記録する。
(3)記録した情報を基に、Webページランキングシステムを使った場合と使わなかった場合それぞれで、1回の検索毎のADMを計算する。
記録したデータは、表2の形式で保存される。このデータを用いて、何も処理をしない場合と、「1トークン1形態素」の方法で嗜好情報を記録し推薦した場合、「1トークン2形態素」の方法で嗜好情報を記録し推薦した場合のシステムを評価する。
3.2 ADM
推薦システムの推薦性能を評価するために、正確性と網羅性の観点から適合率や再現率が評価尺度として利用されている［2］。適合率は、推薦システムが推薦した情報の中に、どれだけユーザの要求が満たされている情報を含んでいるかの割合を示す。一方、再現率は、推薦した情報で、ユーザの要求を満たしているもののうち、実際に推薦された情報の割合である。しかしながら、提案するWebページランキングシステムは、単純に「推薦する/しない」に分類するわけではなく、推薦度の降順でユーザに提示することで推薦を行っており、推薦度は0から1までの連続値である。このシステムを、適合率や再現率で評価するためには、推薦度に閾値をもうけ、閾値以上のものを推薦し、そうでないものは推薦しないという処理をしなければならない。そのため、検索結果の再順位付けによる推薦を行うシステムを評価する指標として、適合率や再現率は適切ではないと判断した。そこで、「システムが行った評価とユーザが行った評価がどれだけ近いか」という指標であるADMを使用し、提案するWebページランキングシステムを評価することにした。ADMとは、システムが行った評価とユーザが行った評価とが完全に一致するシステムが最良のシステムであるという仮定の下でシステムを評価する手法で、式(4)で表される。
ここでは、「検索結果集合」をR、「検索結果集合RのADM値」をADMR、「検索結果集合Rに属する検索結果の数」をn、「検索結果集合Rに属する i 番目の検索結果」をri、「ri に対するシステムの評価」をSRER(ri)、「ri に対するユーザの評価」をURER(ri)と表している。
URER(ri)は、ユーザが ri を選択した場合1となり、選択しなかった場合は0となる。SRER(ri)は、2.5で説明した推薦度で、0から1までの数値で表される。ADM値が1に近づけば近づくほど、ユーザの行った評価とシステムの行った評価が近く、逆に、0に近づけば近づくほどユーザの行った評価とシステムの行った評価が離れている事を示す。
3.3 検索例の説明
「CUDA 環境導入」という検索ワードで検索した結果を表3に示す。表3は被験者の1人が行った検索に結果と、それらをWebページランキングシステムによって再順位付けした検索結果とを比較したものである。
表3の「*」マークは、その印のついたページにユーザがアクセスした事を示す。ユーザがアクセスした「s website」という名前のページが2位から1位へ、「CUDA開発環境のインストール」が9位から4位へ移動している事がわかる。
入れ替えにより1位となった「s website」というアイテムを「1トークン1形態素」の方法で解析した結果の一部を表4に示す。表4のトークンとその推薦度の項目は、検索システムから受け取った「s website」のタイトル、概要、ホスト名をひとまとめにした文章の解析結果を示している。「興味状態:トークン=推薦度」という書式で表されており、「CUDA:CUDA=0.40」は「CUDA」興味状態に属する「CUDA」というトークンの推薦度が 0.40 である事を示す。
全体の推薦度を求める手順は、以下の通りである。まず、タイトル、概要、ホスト名に使われているトークン全ての推薦度を求める。次に、トークンの推薦度を利用し、興味状態毎の推薦度を求める。最後に、文章の推薦度を求める。このように、検索ワードから求めた興味状態と、ページ情報に使われているトークン、ユーザの嗜好情報を利用して推薦度を求める。その結果、「s website」の推薦度は 0.90 となり、1位へ再順位付けされた。Google AJAX Search APIの検索結果では4位となっている「www.cuda-powerdirector.com」の推薦度は0.07となり、25位へ再順位付けされた。
表4を見ると、同じ「環境」というトークンでも、興味状態毎に推薦度が違っているのがわかる。長期的にユーザの嗜好情報を取得し記録していった時、興味状態を導入しない場合では、この興味状態毎の推薦度の差が平均化されてしまう。例えば、表4の「環境」というトークンは、あくまで「CUDAの環境」であり、それ以外の環境(「環境問題」の「環境」など)とは意味が異なる。本システムの興味状態取得方法は、今後「環境問題」という検索ワードで検索した時にも、「CUDAの環境」で検索した時の嗜好情報と区別ができるため、精度の高い推薦が期待できる。ただし、この例のように、2つの形態素の組み合わせを興味状態とした場合、興味状態の数が非常に多くなってしまう。1度の検索毎に興味状態の数だけ文章の解析と学習を繰り返さなければならないため、学習、推薦時の処理量と、ユーザの嗜好情報の記憶量が増加してしまう。
3.4 実験結果
被験者5名に3.3節で示した検索を繰り返し、合計 620 回の検索を行った。1つのトークンを1つの形態素で構成する方法では、平均ADM値が 0.65 となり、1つのトークンを2つの形態素の組み合わせで構成する方法を用いても、同等の結果となった。
実験結果の一部のグラフを図4に示す。図4は横軸が検索回数、縦軸が検索のADM値を表すグラフである。このグラフを見ると、検索を重ねる毎にADM値が上昇している事がわかる。表5は、図4の各検索毎に、どのような検索ワードが使われているかを示している。
例えば、1度目の検索では、「仮想化とは」という検索ワードで検索し、その時のADM値が 0.25 であるという事を示している。このように、1つ又は2つの検索キーワード(表5の場合は「仮想化」)を固定し、それ以外のキーワードを追加、変更しながら調べる場合、検索回数を重ねる毎にADM値が上がっていく傾向が見られた。今回の実験ではこの他に、「CUDA」「Objective-C」「物理演算」について調べているときに、検索を重ねる毎にADM 値の上昇が見られた。
3.5 考察
1つ又は2つの検索キーワードが固定で、それ以外のキーワードを追加、変更しながら調べる場合、ADM値が右上がりで上昇している傾向見られた。このような検索を行う場合は、一度の検索で十分な情報を得ることができないために検索を繰りかえしている場合が多い。そのため、再順位付けを行わない場合と比べ、本システムを使用した場合の方がより早く目的のページにたどり着ける可能性が高いと思われる。
同じトークンでも興味状態が異なる場合には、推薦度が違うことがわかった。このことから、ユーザが対象を変えて複数回の検索を行った場合、興味状態を導入した方がより精度の高い推薦が行えると考えられる。
1つのトークンを複数の形態素の組み合わせで構成する手法を用いた場合も、1つのトークンを1つの形態素で構成する手法を用いた場合も、ADM値はほぼ等しい事がわかった。これは、検索システムから得られる「タイトル、概要、ホスト名」という情報が、文章としては量が少なく、かつ、細切れな文章になっている事が多いことに起因すると思われる。普通の文章の場合、言葉の係り受けや、文章の流れなどがあるが、文章が細切れになると、その関係が壊れることが多く、その結果、トークン同士の前後の位置関係の重要性が低下する結果になったと考えられる。実験では1つのトークンを1つの形態素で構成する方式が処理時間の面で効率が良いことがわかった。また、検索結果の概要が、Webページの内容をうまく要約し、細切れになっていない文章の場合には、1つのトークンを複数の形態素の組み合わせで構成する方式が精度が高くなる可能性も考えられる。今後、検索システムをGoogle AJAX Search APIから別の検索システムのAPI に変更して処理効率と精度に関する実験を行うことを考えている。
検索ワードに使われているトークンの組み合わせによる検索結果の分類は、長い検索ワードが入力されたときなどに、処理量の増加、記録する情報の増加が問題となる。さらに、本来同じ興味状態に分類したい「同じ対象を表している別の言葉(表記揺れなど)」や、「複数の対象を包含する概念的な言葉」を、全く別の興味状態と認識してしまうことも問題である。そのため、別の検索結果の分類方法も検討し、改良する必要がある。
ベイジアンフィルタを利用したWebページランキングシステムの提案とADMによる評価
