 サーバ仮想化にはいくつかの技術がある。1つの技術であらゆる要件を満たすのは非常に困難であり、このため複数の技術をニーズや目的に応じて使い分けることが求められる。HPでは「HP 
VSE」という体系のもとで、複数のサーバ仮想化技術を提供し、これらを臨機応変に適用する環境を提供している。どのような使い分けが可能なのかを紹介する。
サーバ仮想化では共通して、サーバの物理的なリソース(CPUやメモリなど)を論理的な利用単位に分割することができる。しかしこれを実現する技術には複数の選択肢があり、利用するシチュエーションや求められる要件によって、それぞれに向き不向きがある。単一のサーバ仮想化技術に依存しようとするよりも、複数の技術を適材適所に活用することで、サーバ仮想化の効果を最大限に引き出すことができる。 
現在、各ベンダから、さまざまな仮想化ソリューションが提供されている。HPでは、複数のサーバ仮想化技術を統合化し、そのソリューション・フレームワークを「HP 
Virtual Server Environment」(HP VSE)として体系化している。HP VSEには、幅広い「パーティショニング機能」、リソースを動的に再配分しそれを管理する「リソース管理機能(制御)」、高信頼性のシステムを構築する高い「可用性」、リソース追加の際にコストを減らすことが可能な「ユーティリティ・プライシング」という4つの要素がある。これらは小規模なシステムでももちろん利用価値はあるが、すべてエンタープライズ向けの機能・性能を有し、高度な耐障害性を持つなどミッションクリティカルなビジネスの現場でも利用できる、リアルな仮想化ソリューションとなっている。
このリアルな仮想化を実現するうえで重要な技術が、パーティショニング(分割)だ。パーティショニングは、1台のサーバのリソース(CPUやメモリ、I/Oなど)を複数のパーティションに分割し、それぞれに独立したOSインスタンスやアプリケーションを動作させる技術だ。HP 
VSEには、大まかに3種類のパーティショニング技術がある。ハードウェア・パーティション、ソフトウェア・パーティション、そしてリソース・パーティションだ。
1つ目のハードウェア・パーティションは「nPartitions」(nPars)と呼ばれる。これはサーバ全体をシステム・ボード単位で電気的に分割する技術である。HP9000、HP 
Integrityサーバのミッドレンジサーバおよびハイエンドのサーバの心臓部は、「セルボード」と呼ばれるものを複数組み合わせることで構成されている。それぞれのセルボードはCPU、メモリ、チップセットなどコンピュータの要素が一通り搭載された基板だ。nParsではこれを1枚で、あるいは複数組み合わせて1つのパーティションを作ることになる。
分割されたそれぞれのパーティションは、完全に独立したサーバとして動作する。独立したサーバなので、OSレベルの障害はもちろんのこと、ハードウェア障害が仮に発生しても、ほかのパーティションに障害の影響を与えることはない。nParsは、可用性、耐障害性についていえば最も優れたパーティショニング技術だといえる。ただし、リソースの配分を変更する際にはサーバの再起動が必要になる。
nParsはHP-UXのクラスタ機能により(HPではこれを「Serviceguard」という製品で実現している)、複数のパーティションを用いた冗長構成を取り、可用性の高いシステムを構築することが可能だ。ハードウェアリソースを電気的なハードウェアレベルで分割するので、仮想化によるパフォーマンスの劣化は発生しない。このほか、nParsで稼働するOSは、HP-UX、Windows、Linuxとなっており、ミッションクリティカル用途の物理サーバを1つのサーバに統合することが可能となる。
さらにHPでは、サーバのリソース(CPUやメモリ、I/Oなど)をソフトウェアレベルで論理的に分割する「ソフトウェア・パーティション」も提供している。この仮想化の方法には、「Virtual 
Partitions」(vPars)と「HP 
Integrity Virtual Machines」(Integrity VM)の2つがある。双方とも構築されたそれぞれのパーティションにおいて、独立したOSが動作する。ソフトウェア・パーティションの大きなメリットは、サーバを再起動せずにリソースの配分変更ができることだ。これにより、アプリケーションの要求に応じたダイナミックなリソース再配置が可能だ。
ソフトウェアレベルの仮想化技術であるvParsは、ハードウェアレベルの仮想化技術であるnParsをさらに分割することができる。vParsは、OSレベルの障害については、前述のとおりほかのパーティションに影響を与えることはない。しかしながら、ハードウェアメンテナンスなどでプラットホームとなるnParsを停止する場合には、その上で動くvParsをすべて停止する必要がある。vParsパーティションの構築単位はCPUコアで、最小1コアから構築できる。つまり複数のCPUコアが搭載されたサーバやセルボードは、複数のvParsに分割することが可能だ。vParsはファームウェアで実装されており、各vParsパーティションがサーバの物理リソースの一部を占有して使うので、性能の劣化はほとんど発生しないといっても過言ではない。vParsは、HP-UX環境向けのソフトウェアパーティション機能となっている。
これに対しIntegrity VMでは、CPUおよびI/Oのリソースが仮想マシン間で共有される。そのため、性能の考慮が必要となる。とはいえ、1物理CPUを5%からダイナミックに割り当てが可能だ。より細かい単位で論理的なリソースの分割ができ、1CPUで最大20の仮想マシンを構築できる。OSの障害については、vParsと同様分離できるが、複数の仮想マシンに関連付けられたハードウェア障害が発生した場合には、関連する仮想マシンすべてに障害の影響が及ぶ場合がある。構築された仮想マシンで稼働するゲストOS環境としては、HP-UXをはじめとし、Windows、Linuxに順次対応する。
vParsとIntegrity VMの違いは、vParsがリソースを分割する技術なのに対し、Integrity VMはリソースを共有する技術といえるだろう。vParsは各パーティションが一部のリソースを占有するので、可用性や性能の要求が高い場合に効果を発揮する。これに対し、Integrity 
VMは、より粒度のある細かい構成がとれることが大きな特長だ。ソフトウェアによるパーティショニング技術は、リソース全体の高い稼働率を実現しやすいので、コストパフォーマンスに優れた環境が実現できる。
@IT Special:「サーバ仮想化技術は適材適所」、その意味は
