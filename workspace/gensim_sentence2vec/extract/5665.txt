パーティションの表現スカラー量子化は、指定した範囲内のすべての入力を共通の値に割り当てるプロセスです。このプロセスは、値の範囲が異なる入力を、別の共通の値に割り当てます。実質的に、スカラー量子化はアナログ信号をデジタル化します。量子化を決定するものは、次の 2 つのパラメーター、パーティションとコードブックです。量子化の分割は、実数値の集合において、オーバーラップしないで隣接する値の範囲を定義します。分割を MATLAB® 環境で指定するには、異なる範囲の明確な端点をベクトルでリストします。たとえば、分割が実数線を次の 4 つに分割する場合を考えてみます。{x:x ≤ 0}{x:0< x ≤ 1}{x:1 < x ≤ 3}{x:3 < x}この場合、分割を 3 要素ベクトルとして表すことができます。partition = [0,1,3];
分割 ベクトルの長さは、分割の区間数よりも 1 小さくなります。
コードブックの表現コードブックは、分割の各範囲に分けられる入力に割り当てる共通の値を量子化器に指定します。コードブックは、長さが分割の区間の数と同じベクトルとして表されます。たとえば、次のベクトルを例に説明します。codebook = [-1, 0.5, 2, 3];
このベクトルは、分割 [0,1,3] に対して考えられるコードブックの 1 つです。
各入力の区間の決定関数 quantiz は、各入力がどの区間に当てはまるかを示すベクトルも返します。たとえば、以下の出力は、各入力要素が 0、6、および 5 というラベルが付けられた区間に当てはまることを意味します。ここでは、0 番目の区間は 3 以下の実数で構成され、6 番目の区間は 8 より大きく 9 以下の実数で構成され、5 番目の区間は 7 より大きく 8 以下の実数で構成されます。partition = [3,4,5,6,7,8,9];
index = quantiz([2 9 8],partition)出力は以下のようになります。index =
0
6
5
以下のようなコードブック ベクトルを定義して、この例を続行した場合を考えてみます。codebook = [3,3,4,5,6,7,8,9];ここで、以下の式はベクトル index を量子化信号 quants に関連付けます。quants = codebook(index+1);この quants の式は、この例を次のようにより簡潔に表現した場合に関数 quantiz が使用する式です。partition = [3,4,5,6,7,8,9];
codebook = [3,3,4,5,6,7,8,9];
[index,quants] = quantiz([2 9 8],partition,codebook);
例: 量子化パラメーターの最適化関数 lloyds は、Lloyd アルゴリズムに従って分割およびコードブックを最適化します。以下のコードは、おおまかな初期推定から開始して、正弦波信号の 1 区間の分割とコードブックを最適化します。その後、これらのパラメーターを使用し、初期推定パラメーターと最適化パラメーターを使用して元の信号を量子化します。出力は、量子化後の二乗平均歪みが最適化パラメーターに対して非常に小さいことを示します。関数 quantiz は、二乗平均歪みを自動的に計算して 3 番目の出力パラメーターとして出力します。% Start with the setup from 2nd example in "Quantizing a Signal."
t = [0:.1:2*pi];
sig = sin(t);
partition = [-1:.2:1];
codebook = [-1.2:.2:1];
% Now optimize, using codebook as an initial guess.
[partition2,codebook2] = lloyds(sig,codebook);
[index,quants,distor] = quantiz(sig,partition,codebook);
[index2,quant2,distor2] = quantiz(sig,partition2,codebook2);
% Compare mean square distortions from initial and optimized
[distor, distor2] % parameters.出力は以下のようになります。ans =
0.0148    0.0024
差分パルス コード変調この節の概要DPCM の用語予測子の表現例: DPCM 符号化と復号化この節の概要信号の量子化の節の量子化では、送信される信号について "事前の" 知識は必要ありません。実際には、多くの場合、過去の信号送信に基づいて現在の信号に関して経験に基づく推定を行うことができます。そのような経験に基づく推定を使って信号を量子化することを "予測量子化" といいます。最も一般的な予測量子化法は、差分パルス コード変調 (DPCM) です。関数 dpcmenco、dpcmdeco、および dpcmopt を使用すると、線形予測子を使用して DPCM 予測量子化器を実装できます。DPCM の用語このような量子化器の符号器を決定するには、パーティションの表現とコードブックの表現で説明した分割とコードブックだけでなく、"予測子" を指定しなければなりません。予測子は、各手順で経験に基づく推定を行うために DPCM 符号器が使用する関数です。線形予測子は、以下の形式です。y(k) = p(1)x(k-1) + p(2)x(k-2) + ... + p(m-1)x(k-m+1) + p(m)x(k-m)ここで、x は元の信号を表し、y(k) は x(k) の値を予測します。p は実数の m 組です。x 自身を量子化する代わりに、DPCM 符号器は、"予測誤差" x-y を量子化します。上記の整数 m は、"予測次数" と呼ばれます。m = 1 である特殊な場合は、"デルタ変調" と呼ばれます。予測子の表現x の以前の値に基づく信号 x の k 番目の値の推定が次のように表される場合を考えてみます。y(k) = p(1)x(k-1) + p(2)x(k-2) +...+ p(m-1)x(k-m+1) + p(m)x(k-m)
この場合のツールボックス関数に対応する予測子ベクトルを次に示します。predictor = [0, p(1), p(2), p(3),..., p(m-1), p(m)]
情報源符号化 - MATLAB & Simulink - MathWorks 日本
