
今回は、新しい技術「 WebSocket 」をつかって
現在の課題を解決してみます。
現在の課題
・字幕が届くまでに遅れがある
・字幕通信にかかる通信料の問題
・PCにかかる負荷が大きい
まず、字幕の遅れです。
現在のITBCは、字幕を一定期間ごとに読み込みにいくことで
最新の文章を表示できるよう、作られています。
つまり、「一定期間の遅れ」が発生します。
この遅れを無くすためには、読み込み間隔を早くすれば
ある程度改善されますが、その場合には通信量が増すため
結果的に「インターネット使用料」が高くなります。
ユーザにとってはリアルタイム性の向上と
通信負担の増加は背反する課題というわけです。
また、読み込みが増えれば増えるほど、
処理するパソコン(ITBCが動いているPC)にも
負荷がかかります。
安価なPCで処理したいというニーズも多いですから、
この点も課題になるわけです。
解決手段
根本的な問題は、「ブラウザは字幕を受信したら終わり」ということです。
次の字幕を受信するには、何らかの方法で次の字幕を取りに行く 
作業をする必要があります。現在は、JavaScript をつかって
自動的に再読み込みするため、現在のような字幕受信が可能です。
では、「字幕を受信し続ける」ことが可能になれば、
再読み込みが不要になり、課題が解決できるはずです。
今回は、 HTML5規格の一部として検討されていた
WebSocket という通信規格を使って実現します。
(現在はまだドラフト規格で、HTML5から切り離されて検討されているようです)
WebSocket は、ブラウザが連続してデータをやり取りできる
国際的な(検討段階の)通信規格です。
ITBC v2.40リリース候補5(RC5) は、このWebSocket機能を搭載しました。
この機能をつかって、リアルタイム字幕配信をやってみます。
<試す場合はこのように設定してみてください>
(1)WebSocket用のレイアウトを読み込みます。
「配信画面をデザイン」より選んで、ダブルクリックします。
(2)WebSocketを有効にします。  
詳細設定通信WebSocketから、設定を有効にします。
※字幕に関する通信をすべて配信するようになりますので、
入力者名なども配信されます。気を付けてください。
※今後、配信内容は選択できるようにする予定です。
(3)字幕を受信します。
ブラウザで開いてみてください。
※最新技術のため、対応するブラウザが必要です。
Google Chrome の最新ベータ版、Safari 最新版、
iPad/iPhone用iOSの最新ブラウザでお試しください。
結果
字幕の受信遅れは、同一PCで見る限り ほぼ同時です。
PCSoftbank 携帯電話に字幕配信する場合に、通信回線の遅れが
0.5～1秒ありますから、実際にはその程度の遅れで字幕配信が可能です。 
(現在読み込みを1秒設定、通信遅れ補正OFFの場合、字幕配信に2~3秒かかります。
この技術を使えば、1/2程度に抑え込むことが可能になります)
通信量の面です。
<前提>
・1回の字幕配信に 3KB(3072 bytes) かかる
(字幕文字列は170文字/分 = 512 bytes とする)
・1秒ごとに読み込み
・通信量は 0.2円/パケット 128byte/1パケット  ...ソフトバンク通信量を想定。
通常は、1回に 3072 byte/128 byte = 24パケット= 48 円かかります。
1分間で 1,140パケット = 288円、1時間で 86,400パケット=17,280円かかります。
学校などで使う場合、授業1コマ受けるだけで、高額なパケット代になります。
もちろん、パケット定額に入るケースが多いと思いますが、
常に上限に張り付いてしまいます。
WebSocketを使う場合には、
1分に 512 byte/128 byte = 4パケット 
字幕が 1分に10回送られたと想定し、WebSocket通信 10パケット
= 1分間に 14パケット = 2.8 円、1時間で 840パケット=168円かかります。
この技術をつかえば、通信量を 1/100 程度まで抑えることができます。
実用レベルまで作りこむと、文章訂正など、もっと細かな通信をするために
通信量は増えますが、それを見込んでも 1/50 程度には抑えられると思います。
今後、正式に通信規格が確定すれば、もっと利用できる環境が整うと思われます。
その時が来るまで、この機能をつかって課題や環境を整えていければとおもいます。
展望
このWebSocket機能は、受信機間での情報やり取りも可能にしてくれます。
ゆくゆくは、HTML5機能と組み合わせ、iPhone同士で手書きデータを共有したり、
ブラウザから字幕入力することすら可能になります。
要約筆記の環境を一新する技術になることは まちがいないでしょう。
今後も、標準的な規格を取り入れ、汎用的なシステム構築をしていきたいと思います。
[ITBC2]字幕配信遅れを最小にする手段の検討 - ソフト開発・公開情報
