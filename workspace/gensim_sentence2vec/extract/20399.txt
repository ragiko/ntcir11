機能検証のための手段としてアサーションを用いたモデルチェッキングが注目されている.SVAでは,アサーション中に局所変数を用いることができるが,モデルチェッキングを考えた場合,局所変数の値を保存するための保存変数が一般に多数必要となり,計算量の点で問題となる.本稿では,モデルチェッキングに必要なメモリ量を削減することを目標に,保存変数の個数を各局所変数に対して1個に抑えるようなチェッカ生成アルゴリズムを提案する.提案アルゴリズムとLongとSeawrightによる先行研究との比較実験を行い,遅延回路やFIFO回路に対して検証時のメモリ使用量が10〜30%改善されることを確認した.
To perform functional formal verification, model checking for assertions has been used. It is difficult, however, to handle assertions with local variables such as in System Verilog. The problem is that many storing variables for local variables are required, and having many storing variables increases the computational complexity of model checking. In this report, we show an algorithm for verification in order to reduce the number of storing variables. In particular, our algorithm requires only one storing variable for each local variable. We also show experimental results for our algorithm compared with the previous work by Long and Seawright, in which the memory requirement decreases by 10-30%.

