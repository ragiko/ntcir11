ディスパッチャの Actions プロパティで省略記号(...)をクリックすると,オブジェクトインスペクタからアクションエディタを開くことができます。［追加］ボタンをクリックすることにより,アクションエディタでアクション項目を追加できます。異なるリクエストメソッドまたはターゲット URI に応答するには,ディスパッチャにアクションを追加します。アクション項目を設定するにはいくつもの方法があります。リクエストを前処理するアクション項目を最初に設定し,最後にデフォルトアクション(レスポンスが完全かどうか確認してからレスポンスを送信するかエラーコードを返します)を設定できます。リクエストの種類ごとに別々のアクション項目を追加し,アクション項目ごとにリクエストを完全に処理することもできます。 
ディスパッチャは,クライアント要求を受信すると,BeforeDispatch イベントを生成します。これにより,アプリケーションはリクエストメッセージを前処理してから,アクション項目を使って処理できます。BeforeDispatch イベントを生成した後,ディスパッチャはアクション項目のリストの繰り返し処理を行い,リクエストメッセージのターゲット URL の PathInfo 部分に対応した,リクエストメッセージのメソッドとして指定されたサービスも提供するエントリを探します。これは,TWebRequest オブジェクトの PathInfo プロパティと MethodType プロパティをアクション項目の同名のプロパティと比較して行います。ディスパッチャは,適切なアクション項目を見つけると,そのアクション項目を起動します。起動されたアクションフィールドは以下のいずれかを行います。
レスポンスの内容を埋め,そのレスポンスを送信するか,リクエストの処理が完了したことを通知する 
レスポンスに追加を行い,ほかのアクション項目によって処理が完了できるようにする 
リクエストをほかのアクション項目に任せる 
アクション項目をすべてチェックした後もメッセージが処理されていなければ,ディスパッチャは,アクション項目を使用しない自動ディスパッチャコンポーネントが特別に登録されていないかチェックします。この自動ディスパッチャコンポーネントは多層データベースアプリケーションに固有のコンポーネントです。詳細は,「InternetExpress 使用による Web アプリケーションの構築」を参照してください。すべてのアクション項目と,特別に登録された自動ディスパッチャコンポーネントをチェックした後も,なおリクエストメッセージの処理が完了していない場合,ディスパッチャはデフォルトのアクション項目を呼び出します。デフォルトアクション項目はターゲット URL にもリクエストのメソッドにも対応している必要はありません。ディスパッチャがアクション項目リストの(デフォルトアクション項目があればそれも含めて)最後まで到達しても起動されるアクションがないと,サーバーには何も返されません。サーバーはクライアントへの接続を切断するだけです。アクション項目がリクエストを処理すると,ディスパッチャは AfterDispatch イベントを生成します。これにより,アプリケーションは生成されたレスポンスを確認して最後の変更ができます。 
Web アプリケーションは,HTTP リクエストメッセージを受信すると,TWebRequest オブジェクトと TWebResponse オブジェクトを作成します。TWebRequest は HTTP リクエストメッセージを表し,TWebResponse はリクエストメッセージに対して返される応答を表します。これらのオブジェクトは Web ディスパッチャ(Web モジュールまたは TWebDispatcher コンポーネント)に渡されます。Web ディスパッチャは Web サーバーアプリケーションの処理の流れを制御します。ディスパッチャは,HTTP リクエストメッセージの種類ごとに処理方法を規定しているアクション項目(TWebActionItem)の集合を保持しています。ディスパッチャは,HTTP リクエストメッセージの処理に適したアクション項目または自動ディスパッチコンポーネントを特定し,リクエストオブジェクトとレスポンスオブジェクトを所定のイベントハンドラに渡します。これにより,要求されたアクションの実行やレスポンスメッセージの作成ができるようになります。アクション項目は,リクエストを読み出して,それに対するレスポンスメッセージを作成しなければなりません。専用のコンテンツプロデューサコンポーネントを使用すると,アクション項目は HTML カスタムコードやその他の MIME コンテンツを保持できるレスポンスメッセージのコンテンツを動的に作成できます。コンテンツプロデューサは,ほかのコンテンツプロデューサや THTMLTagAttributes の下位オブジェクトを使用して,アクション項目が簡単にレスポンスメッセージのコンテンツを作成できるようにします。多層データベースアプリケーションの Web クライアントを作成する場合,Web サーバーアプリケーションには,XML でエンコードされたデータベース情報と Java スクリプトでエンコードされたデータベース操作クラスを表す追加の自動ディスパッチコンポーネントを含めることができます。Web サービスを実装するサーバーを作成する場合は,Web サーバーアプリケーションに自動ディスパッチコンポーネントを追加することで,SOAP に基づいたメッセージがインボーカに渡り,解釈され実行されます。ディスパッチャは,自身のアクション項目をすべて試行した後,上記の自動ディスパッチコンポーネントを呼び出してリクエストメッセージを処理します。すべてのアクション項目(または自動ディスパッチコンポーネント)が TWebResponse オブジェクトを完全なものにしてレスポンスを完成させると,ディスパッチャはこの結果を Web アプリケーションに返します。アプリケーションはこのレスポンスを Web サーバーを経由してクライアントに送信します。 
WebBroker アプリケーションの構造
