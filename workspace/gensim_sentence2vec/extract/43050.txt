 句読点がほとんどないのでよくわかりませんが、こんな感じでしょうか?
オブジェクト=普段思考するときにプログラミングの関数型を使用するような感じで思考するための枠組みを学びたい。
手段1=あるオブジェクト(概念の固まり)に関数を適用して望む結果を受け取る
手段2=ちょっと言語学寄りで動詞にオペレータを追加することで熟語動詞をつくってそれが拡張関数になってる
オブジェクト補助=言語空間をブラウズする上での効率的な方法が知りたい。
最近よく見かける、投入口にデータを放り込むと、枠にはまった答えがガチャポンと下から出てくるような感じを受けます。(フレームワークは、フレームワークと言う方程式があるわけではない)不可能というより矛盾している。
プログラミングに関数型を使うとか、言語空間を…効率的方法。という考えは、あいまいであい路に入り込みやすく、なおかつすぐに入り組んでくる非効率な思索を、関数と言うパッケージに押し込んでしまい、思考の持つ広がりや、つながることによる拡張性を妨げる。これは動詞にオペレータをくっつけても同じ。とくにこの場合言語の抽象度[一般意味論]の違い[一般意味論、コーチング関連、UML]が、妨げになる。
プログラミング言語と違い、普段使われている言葉はばらばらな抽象レベルにあり、両者を結合するのは不可能。そのうえ上下関係の観念を含みやすい日本語ではさらに困難。
それと、思考過程のパターンをリスト化したアーカイブが必要。つまり哲学関連書籍のほとんどを読む。
ただ、人間の思考を真似できるというので、デジタルがコンピュータで使われているというのもあるので、必ずしも中身が分からなくても、外部への反応をリスト化しても可能でしょう。ただ、例外だらけになりそうだが。
以下参照
http://www.amazon.co.jp/パターン、Wiki、XP-~時を超えた創造の原則-WEB-PRESS-plusシリーズ/dp/4774138975/ref=sr_1_1?ie=UTF8&s=books&qid=1290450718&sr=1-1
プログラミングと人間の思考に関する本 - 書籍・文庫 - 教えて!goo
