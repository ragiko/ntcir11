このページは前リリースの情報です。該当の英語のページはこのリリースで変更されています。このリリースの英語のドキュメンテーションを参照するには、言語設定を United States に変更してください。
ピクセル強度値の調整項目一覧…
強度値の調整イメージの改善手法はイメージを改善するために使用されますが、"改善" は客観的に定義される場合 (たとえば、信号対ノイズ比の向上) と主観的な場合 (たとえば、色や強度を変更して特定の部分を見やすくする) とがあります。強度の調整は、イメージの強度値を新しい範囲にマッピングするイメージ改善手法の 1 つです。この図は低コントラスト イメージの例をヒストグラムと共に示します。イメージのヒストグラムは値が範囲の中心に集中していることを示しています。I = imread('pout.tif');
imshow(I)
figure, imhist(I,64)
データ値をマッピングし直して強度の範囲全体 [0, 255] を塗りつぶすと、イメージのコントラストを増加することができます。 ここで説明する関数は主にグレースケール イメージに適用されます。しかし、中にはカラー イメージに適用できるものもあります。これらの関数がカラー イメージにどのように適用されるかは、個々の関数のリファレンス ページを参照してください。
指定した範囲での強度値の調整イメージ強度の値は関数 imadjust で出力イメージの強度の範囲を指定することによって調整できます。たとえば、次のコードはデータ値を [0, 255] の強度域全体を塗りつぶすようにマッピングし直すことで、低コントラストのグレースケール イメージでコントラストが増加します。I = imread('pout.tif');
J = imadjust(I);
imshow(J)
figure, imhist(J,64)次の図は調整後のイメージとヒストグラムです。イメージのコントラストが増加し、ヒストグラムは強度の範囲全体に広がっています。調整後のイメージとヒストグラム
調整範囲の指定関数 imadjust を使って入力および出力イメージの範囲を必要に応じて指定できます。範囲は 2 つのベクトルを引数として関数 imadjust に渡すことによって指定します。最初のベクトルは、マッピングする強度値の上限と下限です。2 番目のベクトルは、マッピングするときに適用するスケールです。
たとえば、データの範囲を狭くすることによってイメージのコントラストを減少できます。下の例では、男性のコートが暗すぎて詳細が見えません。imadjust は uint8 の入力イメージの範囲 [0,51] を、出力イメージの範囲 [128,255] にマッピングします。これはイメージをかなり明るくします。元のイメージの暗い部分のダイナミック レンジも広くなって、コートの詳細が見やすくなっています。しかし、元のイメージの中の 51 以上の値はすべて調整後のイメージの中で 255 (白色) にマッピングされているため、調整後のイメージは、白っぽくなりすぎています。I = imread('cameraman.tif');
J = imadjust(I,[0 0.2],[0.5 1]);
imshow(I)
figure, imshow(J)再マッピングし、ダイナミック レンジを広げたイメージ
強度調整範囲の自動設定関数 imadjust を使うには、通常、次の 2 つの手順を実行しなければなりません。イメージのヒストグラムを見て、強度値の範囲を調べる。これらの範囲を 0.0 ～ 1.0 の小数値で指定して、imadjust に [low_in high_in] ベクトルとして渡す。関数 stretchlim を使用すると、これらの範囲の指定が簡単になります (関数 imadjust は、最も単純な構文 imadjust(I) で、stretchlim を使います)。この関数は、イメージのヒストグラムを計算し、自動的に調整範囲を決定します。関数 stretchlim は、1 つのベクトルに小数値としてこれらの値を返すので、それを imadjust への引数 [low_in high_in] として渡すことができます。たとえば、次のようにします。I = imread('rice.png');
J = imadjust(I,stretchlim(I),[0 1]);既定の設定では、関数 stretchlim は、調整範囲として、全範囲の低い方から 1% (0.01) と高い方から 1% (0.99) を表す強度値を使います。強度域の両端で、極値を取り去ることにより、stretchlim は、調整後のダイナミック レンジで残りの強度が広がることのできる範囲を大きくします。関数 stretchlim へ渡す引数として別の範囲を指定することもできます。詳細は、stretchlim のリファレンス ページを参照してください。ガンマ補正関数 imadjustは low を bottom に、high を top にマッピングします。既定の設定では、low と high の間の値が bottom と top の間の値に線形にマッピングされます。たとえば、low と high の間の中間の値は bottom と top の間の中間の値に対応します。imadjust は追加の引数として "ガンマ補正" 係数を受け入れます。ガンマの値によっては、入力と出力のイメージのマッピングは非線形になります。たとえば、low と high の間の中間値を bottom と top の間の中間値より大きな値にも小さい値にもマッピングできます。ガンマの値は 0 から無限大までが可能です。ガンマが 1 (既定の設定) のとき、マッピングは線形になります。ガンマが 1 より小さいと、マッピングの出力の値が高い (明るい) 方に偏ります。ガンマが 1 より大きいと、マッピングの出力の値が低い (暗い) 方に偏ります。次の図はこの関係を示します。3 つの変換曲線は、ガンマが 1 より小さいとき、1 と等しいとき、1 より大きいときに値がどのようにマッピングされるかを示したものです (各グラフで、X 軸は入力イメージの強度値を表し、Y 軸は出力イメージの強度値を表します)。3 つの異なるガンマ補正の設定を示すプロット
次の例はガンマ補正を示します。imadjust への呼び出しで、入力と出力イメージのデータの範囲が空行列として指定されていることに注目してください。空行列を指定すると、imadjust は既定の範囲の [0,1] を使用します。この例では、どちらの範囲も空のままです。これはガンマ補正が他の調整なしでデータに適用されることを意味します。[X,map] = imread('forest.tif');
I = ind2gray(X,map);
J = imadjust(I,[],[],0.5);
imshow(I)
figure, imshow(J)ガンマ補正の前と後のイメージ
ヒストグラム均等化を使ったイメージの強度値の調整強度値の調整処理は、関数 histeq を使って自動的に実行できます。関数 histeq は "ヒストグラム均等化" を行い、これによって、出力イメージのヒストグラムが指定したヒストグラムに近似するよう強度値が変換されます (既定の設定では、histeq は、64 個の区分をもつ一様なヒストグラムに一致させようとしますが、これと異なるヒストグラムに近似させることもできます。詳細は、histeq のリファレンス ページを参照してください)。これは、グレースケール イメージの調整に関数 histeq を使用する例を示します。元のイメージは、コントラストが悪く、強度域の中位にほとんどの値が集中しています。histeq は、値が範囲全体に均等に分布するように出力イメージを作成します。I = imread('pout.tif');
J = histeq(I);
imshow(J)
figure, imhist(J,64)ヒストグラム均等化後のイメージとヒストグラム
関数 histeq は、可能な各入力値に対応する均等化後の出力値を示す 1 行 256 列のベクトルを出力します (このベクトルの値は、入力イメージのクラスに関係なく、[0,1] の範囲に入ります)。このデータをプロットして、変換曲線を表示できます。以下に例を示します。I = imread('pout.tif');
[J,T] = histeq(I);
figure,plot((0:255)/255,T);
このグラフは、前の図の中のヒストグラムを反映していることに注意してください。つまり、入力値のほとんどが 0.3 と 0.6 の間にあるのに対し、出力値は 0 と 1 の間に均等に分布しています。
コントラストに制限を付けた適応ヒストグラム均等化 (CLAHE)関数 histeq の別な使い方として、関数 adapthisteq を使ってコントラストに制限を付けた適応ヒストグラム均等化 (CLAHE) を行うことができます。histeq はイメージ全体に作用しますが、adapthisteq は、イメージ内の "タイル" と呼ばれる小さな領域に作用します。出力領域のヒストグラムが指定されたヒストグラムに近似するように、各タイルのコントラストが強調されます。均等化を行った後、adapthisteq は、人為的に出現した境界を消すため、双一次内挿を使って、隣接タイルを連結します。イメージ内にノイズがあった場合に、それが増幅されるのを避けるために、adapthisteq のオプション パラメーターを使って、コントラストに範囲を設定します。特に、均一領域で有効です。これを示すために、次の例では、adapthisteq を使ってグレースケール イメージのコントラストを調整します。元のイメージは、コントラストが悪く、強度域の中位にほとんどの値が集中しています。adapthisteq は、値が範囲全体に均等に分布するように出力イメージを作成します。I = imread('pout.tif');
J = adapthisteq(I);
imshow(J)
figure, imhist(J,64)CLAHE 均等化後のイメージとヒストグラム
無相関ストレッチを使用した色分離の改善無相関ストレッチは、帯域間の有意な相関を使って、イメージの色分離を強調します。色の誇張は、視覚的な解釈を向上し、その特徴を見分けやすくします。無相関ストレッチの適用には、関数 decorrstretch を使します。必要に応じて、無相関ストレッチにオプションの線形コントラスト ストレッチを加える方法については、「線形コントラスト ストレッチの追加」を参照してください。イメージ内の色帯域の数 NBANDS は通常、3です。しかし、色帯域の数にかかわらず、無相関ストレッチを適用できます。イメージの元の色値は、より広い範囲の新しい色値の集合にマッピングされます。個々のピクセルの色の強度は、NBANDS 行 NBANDS 列の共分散、または相関行列の色の固有空間に変換され、帯域分散と等しくなるように引き伸ばされた後、変換されて元の色帯域に戻ります。帯域統計を定義するには、元のイメージ全体を使うか、または、subset オプションでそのサブセットを選択して使用できます。decorrstretch のリファレンス ページを参照してください。単純な無相関ストレッチ無相関ストレッチ操作を imdata フォルダーにあるイメージ ライブラリに適用できます。ライブラリには、リトル コロラド川の LANDSAT イメージが含まれています。次の例では、このイメージに単純な無相関ストレッチを適用します。イメージは 7 つの帯域をもっていますが、ここでは、3 つの可視色だけを読み取ります。A = multibandread('littlecoriver.lan', [512, 512, 7], ...
'uint8=>uint8', 128, 'bil', 'ieee-le', ...
{'Band','Direct',[3 2 1]});次に、無相関ストレッチを実行します。B = decorrstretch(A);結果を表示します。imshow(A)
figure, imshow(B) 2 つのイメージを比較すると、元のイメージは強い紫 (青っぽい赤) の色調を帯びていますが、変換されたイメージでは色の幅が少し広がっています。コロラド川: 無相関ストレッチ処理の前 (左) と後 (後)
イメージの色帯域散布図は帯域がどのように無相関化され均等化されたかを示します。rA = A(:,:,1);
gA = A(:,:,2);
bA = A(:,:,3);
figure, plot3(rA(:),gA(:),bA(:),'.')
grid on
xlabel('Red (Band 3)')
ylabel('Green (Band 2)')
zlabel('Blue (Band 1)')
rB = B(:,:,1);
gB = B(:,:,2);
bB = B(:,:,3);
figure, plot3(rB(:),gB(:),bB(:),'.')
grid on
xlabel('Red (Band 3)')
ylabel('Green (Band 2)')
zlabel('Blue (Band 1)')
無相関ストレッチの適用前 (左) と後 (右) の色散布図
線形コントラスト ストレッチの追加今度は同じ変換を、無相関ストレッチの後、線形コントラスト ストレッチを適用して行います。imshow(A)
C = decorrstretch(A,'Tol',0.01);
figure, imshow(C)変換されたイメージを元のイメージと比較します。無相関ストレッチ処理後に線形コントラスト ストレッチを適用したコロラド川
線形のコントラスト ストレッチを加えると、色の範囲がさらに拡張され、イメージが改善されます。この場合、変換後の色範囲は、個々の帯域内で 0.01 と 0.99 の間で正規化された間隔でマッピングされ、2% 飽和しています。Tol の詳細は、関数 stretchlim のリファレンス ページを参照してください。Tol オプションなしでは、decorrstretch は、線形コントラストのストレッチを適用しません。
ピクセル強度値の調整 - MATLAB & Simulink - MathWorks 日本
