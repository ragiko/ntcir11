ピーク時になると応答時間が急激に悪化したので、とりあえずCPUとメモリを倍増しておけば大丈夫かな……と勘に頼って対応し、ドツボにはまった経験、ありませんか? この連載では、インフラエンジニアなら最低限理解しておきたい性能問題の基礎を解説します。(編集部)
はじめに
前回「負荷テストのデータ、読めてますか?」では、負荷テストによって測定される値の中から、平均値とパーセンタイル値という極めて基本的な値から読み取れる事柄や、想定される性能問題について考えました。
負荷テストは、高負荷状況での性能を確認するために重要なものです。しかし「負荷テスト性能チューニング再び負荷テスト」というモグラたたき的な対応ではなく、事前に高負荷状況でどうなるかを予測した上でシステム構築を行い、負荷テストはあくまで想定どおりの性能が出ているかどうかの確認作業としたいものです。
そのために、第1回目で取り上げた待ち行列の特徴を考慮に入れ、「複数サーバから構成されるシステムが高負荷状況でどのような挙動を示すのか」を想定できることが必要になります。
問3:チューニングポイントの優先度
アプリケーションサーバ(APサーバ)とデータベースサーバ(DBサーバ)の2層から構成されるITシステムがあります。高負荷時に平均1秒以内の応答時間が要件です。開発を終えて単発(低負荷)で性能を測定してみると、AP=0.5秒、DB=0.2秒が掛かり、合計0.7秒でした。高負荷状態になったときには1秒を超過することが懸念されます。さて、APサーバのロジックを改善する案と、DBサーバのデータ構造を改善する案の2案があるとき、どちらを優先させるのがよいでしょうか?
前回の問題と同じように、問題文の記述だけでは不明なことがたくさんあります。いい換えると、その隠れた条件次第で、正解は1つではありません。また、APサーバかDBサーバかを画一的に決定できるとも限りません。
以下ではいくつかの考え方を述べてみたいと思います。
経験則に基づく3つの改善案
【案1】「改善案が2つ考えられるなら、両方やればよいだろう」
これが最も素直な答えかもしれません。性能トラブルが発生したときには、単一の改善策で問題がすべて解決することはまれでしょうから、複数の改善策を並行して検討すべきなのは確かです。
【案2】「一番処理時間が長い部分から削るのが鉄則。だからAPサーバを優先すべき」
【案3】「APのロジックを見直してもわずかしか改善できないことが多いが、DB側を見直すと性能が劇的に改善されるケースが多い。だからDBサーバを優先させる方がいい」
この【案2】と【案3】のような経験則的な解答もあるでしょう。これはこれで妥当な判断かもしれません。
けれど、今回の例題で考えてほしいのは高負荷時にどうなるのか?という点です。上記の【案1】【案2】【案3】にはいずれもこの観点が入っていません。その際には、問題では隠れている条件についても考える必要があります。
性能を定量的に扱うため、条件を明確に
問題文に書いてあったのは、「APサーバの処理の方がDBサーバの処理よりも2倍以上重い」ということだけです。たったこれだけでは、性能について具体的な検討はできません。性能を数値として議論しようと思うならば、次の3点を明らかにする必要があります。
負荷の程度(どのような処理をどれだけこなす必要があるのか)
資源の量(サーバのCPUやI/O性能、ネットワークの帯域幅など)
資源使用量の単価(処理を単発で実行したときの資源の使用量)
話を複雑にしすぎないため、実際に稼働するシステムからするとシンプルすぎますが、これらの3つについて次のように仮定します。負荷の内容としては単一の処理だけ考え、資源はサーバのCPUだけにしておきます。
CPUという資源を測る量は時間です。1CPU(シングルコア)の資源量は1秒につき1秒分です。マルチコア×複数CPUの場合はその数になります。
1回実行するのに0.1秒かかる処理は、10コアあれば、毎秒100回処理できます。ただしサーバ仮想化環境では、異なる性能のCPUを持つ複数のサーバを全体でシェアするので、単純にCPU時間で資源量を測るのは困難です。そこで、GHz(ギガヘルツ)単位で仮想サーバのCPU資源量を示す場合がありますが、基本的には同じことです。
ここで、1つ注意すべき点があります。問題文では「APサーバでは0.5秒掛かった」としか言っておらず、これがそのままCPUを消費した時間かどうかは分かりません。しかし、低負荷状態での実行では、掛かった時間≒CPU消費時間と見なしてよいケースが多いでしょう。
例外は、大量のファイルアクセスがあるバッチ処理などや、DBサーバでキャッシュ率が低くならざるを得ないような場合です。もちろん、1処理ごとのCPUの使用時間を正確に測れる場合は測った方がよいのですが、難しい場合には低負荷時の実処理時間から推定し、代替することもあります。
条件を踏まえたおおざっぱな試算結果
上記の条件で、低負荷時から高負荷時までの性能特性をおおざっぱに試算すると図1のようになります。多重並列処理の場合の待ち行列計算などは正確には計算に組み入れられていませんが、傾向としてはおおよそこのようになるはずです。
性能エンジニアリング入門(3):遅いところを直すだけでいいのですか?〜難しいチューニング個所の判断〜 (1/2) - @IT
