こんにちは、kazzyaです。
超久しぶりのエントリーですね。もう1本にblogまとめてしまおうかと考えたんですが、とりあえずこっちに書いておきます。
つい先日までCVSクライアントとして、Eclipse2.1.xを使用していたのですが、ふとEclipse3.1.1に変えまして。そこでちょっと挙動が違った件のメモです。エディタが賢くなったんでしょうね。
私の携わるシステムでもご多分にもれず!?、やたらとパッケージ名が長いので、パッケージ・エクスプローラーで目的のクラスを選択するには、今の「小さな」モニタでは画面1/3ぐらいまで枠を拡げなければ、識別できません。
そこで、[ウインドウ]>[設定]>[Java]>[外観]ページの、[最終セグメントを除く、すべてのパッケージ名セグメントを圧縮]をチェックし、圧縮パターンに「1.」などとして表示するわけですが…
逆に短すぎて識別できません!
という状況に陥っています。そもそものパッケージ命名規則がまずいのだと思いますが、まずいポイントを挙げると…
[最終セグメントが一意でない]常に全体が表示されるパッケージの最終セグメントは、実装システム内における1機能名称など、一意となる単語を割り当てるべき。(ホント?)今の命名規則では、beanやらconstantsやら、概念的な分類の単語が割り当てられていて、短縮後の表示パッケージ名を見ると、重複が多数存在する。多分、[1機能名称]Bean クラスとか、[1機能名称]Constans クラスで実装すべきなんでしょうね。現状1パッケージあたりに存在するクラスって、平均2ぐらいになりそう。パッケージ分類の粒度が細かすぎるんでしょうね。
[冗長な接頭辞の付加]今のパッケージ命名規則は、[ドメイン名].[システム名].[大機能].[中機能].[概念的分類]のようになっているのですが、[中機能]の命名規則が、ぶら下がる[大機能]の先頭1文字を接頭辞として付加しています。これを圧縮パターン「1.」とかにすると、接頭辞だけが表示されて、[大機能].[中機能]の部分の識別ができなくなります。じゃあ「2.」やら「3.」にすれば?と言われると、おそらく下の理由から「それでも長すぎる」ことになります。
[パッケージ階層が深すぎる]ドメイン名も含めて、現状最大8階層のパッケージ構成です。数値で見るとオープンソースのプロダクトでもありそうですね。ただ、現状少なくとも1つ、全く機能していない無駄な階層があります。これって、皆さんEclipseとかでサクッとリファクタリングしたりされているんでしょうかね?これと最初の理由の中に書いている対処を行えば、2階層は整理できそうですが…
現状Eclipseの上記設定は、最終セグメント以外のパッケージ階層は、全て同列で扱うような仕様のため、「それに合わせた」形にするには、上記のようなポイントを踏まえてパッケージを決定した方がよいのかな?と思った次第です。
P.S.そもそも自分の希望としては、[ドメイン名].[システム名]ぐらいの全クラス共通部分までを、ごっそり非表示にできないものかな、と調査していたのですが…
プログラミングノメモランダム: Eclipse
