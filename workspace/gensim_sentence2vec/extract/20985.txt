1.1. Introduction
文書はひとつ以上の「ビュー」を持ちうる。例えば、CSS スタイルシートの適用後の算出された文書表示、またクライアント内の同一文書複合表示(例: HTML フレーム)など。つまり、ビューはソース文書のいくつかの代替表現、あるいは表示であり、文書に付属するものである。
ビューは、生成された時点の静的な文書の状態の反映であるかもしれないし、また、ビュー生成に引き続き発生する、ターゲット文書内の動的な変更の反映であるかもしれない。DOM 仕様のこのレベルでは、これらの振る舞いについては記述しない。
このセクションは、そこから全ビューが由来するであろうような基本インターフェイスを提供する AbstractView インターフェイスを定義する。これは AbstractView の対象文書を参照するアトリビュートを定義する。ここに定義される AbstractView の唯一の意味論は、表示と対象文書間の関連を生成する。
DOM Level 2 において、AbstractView のサブインターフェイスは定義されない。
しかしながら、 AbstractView は 2 個所においてこのレベルで定義され、使用される:
Document はそれに関連付けられたデフォルトの view アトリビュートを持つ DocumentView を実装できる。このデフォルトの view は典型的に実装に依存する(例: ブラウザによる文書のフレームレンダリング)。デフォルトの view は、(AbstractView 上のオブジェクトの同等性の吟味、または DocumentView アトリビュートの取得による) その対象文書と view の識別、そして/または関連付けのためにも使用できる。
UIEvent は Document の	view 上で典型的に発生する(例: 特殊な Document インスタンスをレンダリングするブラウザフレーム上のマウスクリック)。UIEvent は、AbstractView にイベントが生じる 特殊な (実装依存の) view、および UIEvent が関係のある対象文書の両方を識別するそれに関係する。
このセクションに見られるインターフェイスは強制的なものではない。DOM アプリケーションは、実装によってこのモジュールがサポートされているかどうかを判定するのに、値 "Views" と "2.0" をそれぞれ引数にもつ DOMImplementation の hasFeature(feature, version) メソッドを使用できる。このモジュールの完全なサポートのために、Document Object Model Level 2 Core 仕様 [DOM Level 2 Core] で定義される "Core" の特徴を、実装はサポートしなければならない。DOM Level 2 Core 仕様 [DOM Level 2 Core] における 適合 については追加情報を参照されたい。
Document Object Model Views
