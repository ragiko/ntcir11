
ポケコン 機械語講義−2(仮想VRAM)
PC−E500ではじめて機械語のプログラムを組むにあたっては、いくつかの技術的、精神的ハードルがあることが多いです。例えば、割込みの禁止処理(つまりは初期設定ということです)、LCDCの奇妙な構成、プログラムを組むのが面倒になった(^^;;;、あたりがありがちです。
そこで、これらを頭の隅に入れながら、とにかく機械語プログラムを走らせられるようにする、という段階まで説明したいと思います。
まず最初に、理屈抜きにして、機械語プログラムを組むときに必ず記述しておくべき命令群があるので、それを示しておきます。それが次の「初期設定」と「終了設定」です。
初期設定と終了設定
ORG $BC000
IOCS=$FFFE8
VRMADR=$BF000
INIT
<$D4>.W=0
<$D6>.W=0
A=[<$E6>+8]
IL=$48
!IOCS
[--U]=<$EC>
<$EC>=0
U[IMR
($FB)=$80
FINISH
U]IMR
<$EC>=[U++]
<$D6>.W=0
RC
RETF
ラベル"INIT"の部分は所謂「初期設定」です。また、"FINISH"はプログラムを終えてBASICに戻る為の設定=終了設定、です。しかしこの意味を知る必要は特にありません。このまま使って下さい。命令の順番も変えないように!
仮想VRAM
さて、つぎに、最初にして最大の山場、すなわち「仮想VRAM」についてです。
以下にリストを示しますが、今の所は、全てを理解する必要はありません。「とにかくここをコールすれば画面表示が出来るんだ」と、ブラックボックス的に考えて差し支えありません。但しこのリストは、分かりやすさを優先しているため、処理の高速化の余地は大いにあります。
まず概念的な話から。BASICでグラフィック表示を行う時はどうしますか?まず240×32ドットの座標系(以下、「BASIC座標系」と言っておきます)を考えますね。その座標系は、左上を(0,0)として、Xが横、Yが縦を表し、右や下にいく程、XY座標の数値が増します。整然と並んで、非常に分りやすいですね。
しかーし、機械語では違うのです。座標の位置を指定する方法が複雑なのです!例えば、BASIC座標系におけるある座標にグラフィックを表示したい場合、その座標を、先程の機械語が認識する座標系(以下BASIC座標系と呼ぶ)における座標に「変換」し、その変換した座標にグラフィックを表示しないといけません。つまり、BASIC座標系機械語座標系への変換が必要なのです。それが機械語で画面表示を扱う難しさ、というより煩わしさです。
その負担を幾分か解決するのが「仮想VRAM」という考え方です。すなわち、「仮想VRAM」という、BASIC座標系に相当する座標系を自分で作り、自分が表示したいグラフィックを、その仮想VRAMに、あたかもBASIC座標系かのようにして書込みます。そして、あるタイミングを見計らって、仮想VRAMの全領域を一気に機械語座標系に変換してしまうのです。このようにして、グラフィックを書き込む毎に座標変換をするといった作業をする必要がなくなります。これにより処理が高速化し、かつ処理が簡単になります。
<BASIC座標系>
(0,0)−−−−−−−−−−>x
ポケコン 機械語講義−2(仮想VRAM)
