 みなさん、こんにちは。
ジェーエムエーシステムズ(以下、JMAS)の中居 郁です。
前回は、アプリ開発の4つの手法の1つであるネイティブアプリについて解説しました。今回は、Webアプリ、ハイブリットアプリ、フレームワーク利用開発について解説します。
操作性を重視したネイティブアプリに対して、保守性を重視したものがWebアプリになります。
Webアプリはスマートデバイスにインストールされているブラウザを利用するサーバサイドのアプリです。ネイティブアプリとは異なり、デバイス側にアプリをインストールするものではありません。OS依存がないため、拡張性や汎用性が高いアプリを構築できます。
ただし、Webアプリはサーバサイドのアプリであるため、インターネット接続が前提になります。オフラインでの利用に制限がかかる場合があり、室内や地下などで利用する場合には、注意が必要になります。
Webアプリは、以下のようなケースを実現したいときに用いる手法です。
1)社内向けのWebシステムをスマートデバイスに対応したい
2)スマートデバイスでもPCと同じサービスを利用したい
・ PCとスマートデバイス環境における2重開発を避けたい
3)オフラインでの利用を考慮しなくてもよい
・ デバイスにデータを保存したくない
4)デバイスにアプリをインストールしたくない
・ 機能の更改が多い。
・ アプリ配信・バージョン管理の運用負荷を減らしたい
・ 各種アプリ Storeからアプリを配布したくない
なお、対応するOSや、デバイスが多い場合には、この手法が最もコストを抑えられる傾向にあります。
ハイブリットアプリとは、ネイティブアプリとWebアプリを組み合わせたものです。すべてをネイティブアプリで開発するのではなく、機能の一部をWebアプリで開発する手法です。
ハイブリットアプリは、ネイティブアプリと遜色のない操作性やレスポンスを維持しつつ、外部サービスやライブラリを利用して、開発負荷を下げたいケースに検討される開発手法です。ネイティブアプリとWebアプリの切り分けが開発時におけるポイントになります。
<Webアプリで実現するケースとは>
1)外部のWebサービスと連携
・ 既に高機能なサービスが提供されている。(地図など)
・ 独自に実装するにはコストの負担が大きい機能などを利用する。
・ 外部のWebサービスを利用して低コストで実現したい。 
2)HTML5の表現力を利用
・ グラフや図形描画などのライブラリが豊富である。
・ ネイティブアプリに比べて実装負荷が低い。
第3回 Webアプリ開発のポイントとその他の開発手法 | 日本能率協会グループ 株式会社ジェーエムエーシステムズ コラムサイト
