
Julius は,与えられた入力音声(特徴量系列)に対して,音響モデルと言語モデルのもとで確率が最大となる単語列を見つけ出す.本章では Julius がいかに音声認識処理を実行するか,その認識アルゴリズムについて概要を述べる.
また,パフォーマンスチューニングのための種々の探索用パラメータ設定について解説する.
Julius の音声認識アルゴリズムは,ツリートレリス探索方式を基礎とするアルゴリズムである.全体は2パス構成となっており,2段階に分けて認識処理を行う.まず,第1パスでは入力全体に対して荒い認識処理を行い,有望な候補の集合をある程度絞り込む.このとき,簡便なモデルや近似計算を用いることで高速に処理を行う.第2パスでは詳細な認識処理を行うが,その際に第1 
パスの結果を参照しながら探索を行うことで,必要な部分にだけ精密な再計算を行って,最終的な最尤解を求める.このように複数回の照合によって段階的に候補を絞り込むことで,大語彙においても精度を落とさずに効率の良い認識を行うことを目標としている.
アルゴリズムの詳細を述べる.まず第1パスでは,音声入力と並行して,入力の始端から終端に向かってleft-to-right にフレーム同期ビーム探索を行う.
探索アルゴリズムは木構造化辞書に基づくものである.Julius では第1パスは第2パスのための前段処理であり,通常の1パス音声認識よりも強い近似を用いて高速性をある程度優先している.具体的には,単語履歴の 1-best近似,
N-gram における 1-gram factoring, 部分線形化辞書,単語間トライフォン近似を用いている.
第1パスで用いられる言語制約は言語モデルごとに異なる.単語N-gram の場合は,そのN-gram中の前向き2-gramが適用される.記述文法の場合は,文法から単語間の接続制約のみを抽出したカテゴリ対制約が用いられる.なお,このカテゴリ対制約は文法読み込み時にJulius 内部で自動生成される.
第1パスの結果として「単語トレリス」と呼ばれる単語候補集合が算出される.これは,第1パスの認識処理中の各フレームにおいて,ビーム内に終端状態が残った単語候補をインデックス化して保存したものである.それぞれの単語候補は,
その始終端フレームと入力始端から単語末尾までの累積スコアを保持している.
第2パスではこの単語トレリスを参照しながらもう一度探索が行われる.
第2パスは,第1パスとは逆に,入力の終端から始端に向かって後ろ向き
(right-to-left)に探索を行う.アルゴリズムはいわゆるスタックデコーディングであり,仮説を保持するスタックにおいて最もスコアの高い仮説から順次単語単位で仮説を展開する.探索中の部分文仮説の評価スコアは,その時点までの(後ろ向きの)スコアに,未探索部分のヒューリスティックとして第1パスで生成された単語トレリスを接続した値となる.このスコアに従って
best-firstに探索を行い,最終的な認識結果を出力する.第2パスでは,
第1パスの結果単語トレリス上に残った単語についてのみ計算を行うため,
探索空間はあらかじめ絞り込まれており,詳細な計算を行うことができる.
言語制約は全制約を用い,単語間や履歴近似も行わない.
一般に,パス間の中間表現としては上位 N 個の文候補や単語グラフがよく用いられる.これに対して,Julius の単語トレリスは候補を上位のみに絞り込まず,下位を含めて登場した候補全てを残す.このため,第1パスで強い近似によって計算誤差が増大しても,中間結果の中に最尤仮説系列が含まれ,そのため第2パスで誤差を回復できる可能性が高い.この単語トレリスの性質により,Julius の第1パスでは,Viterbi経路の単語履歴依存性を考慮しない 
1-best 近似や,1-gram factoring, 単語間の接続部における音素環境依存性の近似など,高速化のための様々な強い近似が用いられている.
なお,孤立単語認識の場合,単語間や単語履歴,言語モデルにかかる近似は必要なく,第1パスのみで正確な認識結果を出すことができる.このため,孤立単語認識では第2パスは実行されず,第1パスの結果が最終結果となる.
また,音声認識の計算の大部分は音響尤度計算が占めるが,Julius ではこの音響尤度計算について,混合ガウス分布の尤度を上位コンポーネントのみ求めるGaussian pruning を用いており,さらに尤度下位のトライフォンの尤度をモノフォンの尤度で代用する Gaussian mixture selection も利用可能である.
認識アルゴリズムで調整可能なパラメータを以下に示す.これらは認識処理オプション("-SR")であり,モデルごとではなく認識処理インスタンスごとに設定する.
これらの探索パラメータは,認識精度を数%左右することもある重要なパラメー
タである.Julius のデフォルト値は,一緒に配布されている日本語標準モデル用の値であり,あくまで参考値である.与えられた言語モデル・音響モデルの組み合わせでの最大性能を求めるにはチューニングが必須である.たとえばモデルおよびその組み合わせによって最適な重みは異なるし,たとえば,計算時間よりも精度を重視する場合はビーム幅を広く取る必要がある.性能評価実験等を行う場合は特に注意されたい.
統計言語モデルを用いた音声認識では,通常,言語モデルが与える尤度より,
音響モデルの尤度のほうがダイナミックレンジが対数尤度で数倍程度大きく,
扱う仮説が音響モデルに大きく引っ張られる.これを防いで言語制約を強調する目的で,言語モデルの尤度に一定の係数を乗じる言語重みが用いられる.
また,単語間の遷移に一定のペナルティを課すこともしばしば行われる.これは単語挿入ペナルティと呼ばれる.単語挿入ペナルティを大きく課すことで,
単語間の遷移を抑制することができる.これは,例えば「派手に」という発話が助詞の「は で に」と認識されるといったように,短い単語仮説が連続して生成されてしまい湧き出し誤りを起こす場合に,このペナルティを設定することで長い単語を優先させるといった効果が期待できる.
N-gram では,-lmp
weightpenalty で第1パスの,-lmp2
weightpenalty で第2パスの(最終の)言語スコア重みと挿入ペナルティを指定できる.ペナルティは負であれば単語挿入を抑制し,正であれば単語挿入を促進する.以下は重みをそれぞれ 8.0, 挿入ペナルティをそれぞれ -1.0, 0.0 とする場合の例である.
第8章 認識アルゴリズムとパラメータ
