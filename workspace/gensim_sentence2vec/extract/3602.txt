
診断コンテキストのコンフィグレーション
WLDF インスツルメンテーション コンポーネントは、要求をユニークに識別し、システム内でのフローに従って要求を追跡する手段として利用できます。WLDF をコンフィグレーションすると、システムに届く各要求の特定の特性 (発信したユーザやクライアント アドレス) をチェックするようにしたり、要求に (ユニークな ID や、要求の特性を表すフラグにより定義される) コンテキストをアタッチしたりしてから、その要求のコンテキストを基にインスツルメンテーション イベントをトリガするようにできます。そうしたインスツルメンテーション イベントは、後にログを生成したり通知をトリガしたりするために使用できます。
診断コンテキストは、システム レベルでもアプリケーション レベルでも利用できますが、コンフィグレーション方法と使用方法に若干の違いがあります。
この章を通して、診断コンテキストのコンフィグレーションと使用のプロセスについて詳細に説明します。内容は以下のとおりです。
診断コンテキストの内容、ライフサイクル、コンフィグレーションについて
プロセスの概要
DyeInjection モニタを介した仕分けベクトルのコンフィグレーション
仕分けフィルタを使用するための代理モニタのコンフィグレーション
仕分けマスクによるモニタへ渡す要求のフィルタ方法
インスツルメンテーション イベントの量を制御するスロットル機能の使い方
診断コンテキストの内容、ライフサイクル、コンフィグレーションについて
診断コンテキストには、ユニークなコンテキスト ID と、コンテキストの特性を識別する仕分けベクトルが含まれます。
コンテキストのライフ サイクルとコンテキスト ID について
要求の診断コンテキストはその要求がシステムに参加したとき (たとえばクライアントで HTTP 要求を発行したとき) に作成され、初期化されます。このコンテキストは、要求がスレッド境界や Java 仮想マシン (Java Virtual Machine : JVM) 境界を越えてもアタッチされ続けます。診断コンテキストは、要求のライフ サイクル全体を通して存続します。
すべての診断コンテキストは、ドメイン内でユニークな ID によって識別されます。この ID が要求に付随して移動するので、システム内でのフローに従って所定の要求を追跡できます。
仕分け、仕分けフラグ、仕分けベクトルについて
コンテキスト情報は、64 ビットの仕分けベクトルとして要求と共に移動します。それぞれのビットは仕分けの存在を識別するフラグです。各仕分けが要求の 1 つの属性 (発信したユーザ、発信したクライアント IP アドレス、アクセス プロトコルなど) を表します。
特定の属性に対応する仕分けフラグが設定されている場合、その属性が存在することを示しています。フラグが設定されていない場合、その属性が存在しないことを示しています。
例として、要求の発信元が IP アドレス 127.0.0.0 であることを示すために仕分け ADDR1 がコンフィグレーションされているコンフィグレーションについて検討します。要求の発信元が IP アドレス 127.0.0.1 であることを示すために仕分けフラグ ADDR2 がコンフィグレーションされています。IP アドレス 127.0.0.0 からの要求がシステムに参加すると、その要求の仕分けベクトルの ADDR1 仕分けフラグが設定されます。ADDR2 仕分けフラグは設定されていないままの状態です。 
診断コンテキストを利用する診断機能やモニタ機能では、属性が存在するかどうかを判断する目的で仕分けベクトルを調べられます。上記の例では、管理者は監視をコンフィグレーションして、その監視で ADDR1 仕分けの設定されたすべての要求を調べるようにすることで、IP アドレス 127.0.0.0 から発信された要求を調べられます。 
また、仕分けベクトルには THROTTLE 仕分けもあります。この仕分けは、受信する要求に仕分けを設定する頻度を指定するために使用します。この特別な仕分けの詳細については、「THROTTLE 仕分けフラグについて」を参照してください。
利用できる仕分けとそれによって表される属性のリストについては、「DyeInjection モニタでサポートされる仕分け」を参照してください。仕分けベクトルをコンフィグレーションおよび使用するプロセスについては、この章の以降の節で説明します。
診断コンテキストがコンフィグレーションされる場所
診断コンテキストは、診断モジュールの一部としてコンフィグレーションされます。診断コンテキストをコンフィグレーションするための主なメカニズムは、標準の診断モニタである DyeInjection モニタです。DyeInjection モニタがコードにウィービングされるジョインポイントは、要求がシステムに参加する可能性のある場所です。診断アクションによって、各要求が DyeInjection モニタのコンフィグレーションに照らしてチェックされてから、その要求にコンテキストが作成されてアタッチされ、必要に応じた仕分けフラグが設定されます。診断モニタのタイプ、(ジョインポイントを定義する) ポイントカット、および診断アクションについては、「インスツルメンテーションのコンフィグレーション」を参照してください。
プロセスの概要
ここでは、サーバ スコープの診断モジュールにおけるコンテキストのコンフィグレーションと使用について概説します。 
診断コンテキストのコンフィグレーション
