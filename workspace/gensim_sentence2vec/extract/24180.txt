 DOXboxのドキュメントは、wikiにまとめられてる。ここの記述によると、DOSBoxで実現する仮想PC(正確には、DOSBoxはx86エミュレータの上でDOSを動かしている)に実装するCPUは、インテルの80286、Intel 386、Intel 486に相当し、リアルモードとプロテクトモードをサポートする。実際に、DOS環境でCPUの種類をチェックするユーティリティ「CHKCPU」を、aDosBoxを導入したGalaxy S(NTTドコモのSC-02B、シングルコアARM Cortex A8を1GHzで駆動)で走らせたところ、Cyrixの「Cx486DLC リアルモード」として認識された。
DOSBoxの環境ではCPUの動作クロックはDOSBoxが用意する「CPU Cycle」で変更できる。ただ、性能に制約のあるAndroidデバイスでCPU Cycleを上げすぎると、動きの多い描画のコマ落ちや音声の音飛びが発生する。逆に、DOS時代の想定よりデバイスの動作クロックが速すぎる場合は、CPU Cycleの値を下げることもある。CPUを速くしたいけれどコマ落ちが激しいときは、DOSBoxが用意する「Frameskip」設定で意図的に描画するフレームを間引くことも可能だ。なお、DOSBoxでは、サウンドカードとしてSoundBlasterをエミュレートする。この使用するアドレスやIRQなどもSETコマンドで設定できる。
DOSのエミュレートはaDosBoxもAnDOSBoxも同じだが、DOSBoxを利用する機能の実装はそれぞれが独自に行っている。aDosBoxでは、CPU CycleやFrameskipの設定をDOSBoxメニューにまとめている(写真=左)。aDosBoxでは、設定したCPU CycleとFrameskipの値を別々のファイルに保存できる。起動するアプリケーションごとに異なる設定を呼び出すことも可能だ(写真=右)
物理キーボードを持たないデバイスでDOSを使うには
タッチパネル操作が前提で、物理キーボードを持たないモデルが圧倒的に多いAndroidデバイスで、DOSを使うときに困ってしまうのがキーボード操作が前提のユーザーインタフェースだ。DOS時代のゲームでもマウス操作を大幅に取り入れたタイトルは多いが、コマンドプロンプトではキーによる文字入力が必須になる。
aDosBoxもAnDOSBoxも、デバイスが用意するソフトウェアキーボードを利用するほか、ゲームで使えるソフトウェアゲームパッドを自前で用意する。ポインティングデバイスは、タッチパネルのスライドやタップで代用する。こちらでは、左クリックと右クリックの認識、マウスカーソルの移動速度などの設定が可能だ。aDosBoxでは、デバイスに搭載する加速度センサーも入力デバイスとして利用できる設定項目を備えている。
ソフトウェアキーボードは、Androidデバイスが備えているモジュールを利用できる。ただ、DOSBoxはASCII配列しかサポートしないため、ソフトウェアキーボードによっては、入力できない文字も出てくる(写真=左)。aDosBoxはソフトウェアゲームパッドも用意している。カーソルキーが用意されている分、AnDOSBoxより使いやすい。ソフトウェアキーボードで入力できない文字をボタンに割り当てるという技も使える(写真=中央)。aDosBoxでは、入力デバイスとして加速度センサーもサポートする(写真=右)
だって、こっちのほうが面白いんだもん:ARMを載せたAndroidで“DOSゲーム”が復活する! (3/3) - ITmedia PC USER
