ユーザとのインタフェースが原因で発生するエラーは,プログラム内でエラー対処ができないので,ユーザに誤りを知らせ,正しい方法で操作をやりなおすことを促します。
プログラム内のバグが原因で発生するエラーは,ユーザには対処できません。プログラム外部の異常が原因で発生するエラーは,ユーザが正しく操作し,プログラムにバグがありません。
エラーの対処
ユーザとのインタフェースが原因のエラーに対しては,ユーザに誤った入力・操作を取り消し,正しい入力・操作をやりなおしてもらうことが対処になります。
そこで,ユーザに対して何が間違ったのかを指摘して,正しい入力・操作を示す必要があります。通常は,エラーが発生した直後にユーザインタフェース(画面)を用いて知らせます。たとえば,「日付の指定が間違っています。予約日は本日から30日以内で指定してください」のように示します。よく見かける,「不正な操作です」「内部エラーが発生しました」といったエラーメッセージを画面に表示するのは適切ではありません。
プログラム内部のバグが原因のエラーに対しては,開発者にプログラムを修正してもらうことが本質的な対処となります。ユーザ自身が開発者でない限り,エラーが発生した時点でバグを修正することはできません。そこで,プログラムでは,ユーザにエラーが発生したことを知らせ,プログラムを安全に終了させ,エラーが発生した詳しい状況を開発者に伝えるという対処を行います。
安全に終了させるのは,バグによるエラーが発生したあとにプログラムを続行しても,以降のプログラムの実行結果が正しいことを保証できないためです。間違ったまま動作し続けると,誤った結果を出力し,データを破壊し,危険な制御状態になり被害を持たらします。間違って動作することで発生する被害を防ぐために,プログラムを停止させます。
エラーの発生を知らせる際,ユーザに知らせる内容と開発者に伝える内容は異なる点を意識しましょう。ユーザに知らせる内容は,プログラムがエラーにより終了することとその理由,取ってほしいアクションとなります。ユーザは開発者ではないことを前提とし,開発者にしか意味がわからないメッセージをユーザに出さないようにします。開発者に伝える内容は一般的にはログを使います。例外のスタックトレースをエラー通知画面に表示するのは不適切です。
プログラム外部の異常が原因のエラーに対しては,管理者に外部の異常状態を解消してもらうことが本質的な対処となります。ユーザ自身が管理者ではないこともあるので,エラーが発生した時点で異常状態を解消できません。そこで,プログラムでは,可能であれば異常状態からの回復を試み,回復ができない場合はユーザにエラーが発生したことを知らせ,異常状況を管理者に伝える対処を行います。
異常状態からの回復の例としては,ネットワークやサーバの一時的な過負荷で発生したエラーがあります。一時的な負荷は時間をあけると解消していることが期待できるので,リトライ処理を行います。
ユーザに知らせる内容と管理者に伝える内容は異なります。しかし,管理者は開発者ではないので,ログを使用する場合でも開発者向けのものとは異なる内容となります。開発者用と管理者用でログレベルを分けるか,ログ出力先を分け,ログメッセージも開発者ではない管理者に理解できる内容とします。
表2に,まとめを示します。
第2回 潜在するバグに対処するための エラー処理の考え方:WEB+DB PRESS Vol.51 特集2「“巧い”メソッド設計」連動企画｜gihyo.jp … 技術評論社
