7.1 概要
EJBテクノロジの主な強化点はJPAの追加です。これにより、エンティティ永続性モデルが簡略化され、EJB 2.1テクノロジにはなかった機能が追加されます。
JPAでは、Javaオブジェクト(永続エンティティ)にリレーショナル・データをマップし、これらのオブジェクトに後でアクセスできるようにリレーショナル・データベースに格納し、エンティティの状態を、使用元のアプリケーションの終了後も存続させることができます。エンティティ永続性モデルを簡略化するほかに、JPAはオブジェクト・リレーショナル・マッピングの標準化も行います。
Coherenceクラスタ内でのデータの格納方法を決定するために、バッキング・マップが使用されます。デフォルトでは、Coherenceはメモリーベースのバッキング・マップを使用します。データを永続化するためのバッキング・マップ実装は複数あります。
この演習ではJPA実装を使用します。この実装では、Javaの世界からデータベースの世界へのオブジェクト・リレーショナル・マッピング(ORM)を備えているため、Coherenceの標準的なgetまたはputを使用したり、JPAおよびEclipseLinkを使用してCoherenceコールをデータベース・コールに変換できます。
7.2 JPAを使用したJavaオブジェクトへのリレーショナル・データのマッピング
この演習では、Jdeveloperを使用して次の手順を実行します。
OracleXEデータベースでHRスキーマへの接続を作成します。
EMPLOYEES表向けのJPAオブジェクトを自動生成します。
サンプルのJPA cache-config.xmlを指すようにcache-server.cmdを変更します。
Java Persistence API(JPA)を使用してCoherenceでのデータ・マッピングのデモを行う手順は次のとおりです。
インストール済のOracleXEデータベースでHRアカウントをロック解除します。
ここでは、使用するマシンにOracleXEデータベースをインストール済で、HRスキーマにアクセスできると想定しています。HRアカウントをロック解除するには、次の手順を実行します。
「スタート」「すべてのプログラム」「Oracle Database 10g Express Edition」「SQLコマンドラインの実行」に移動します。
connect system as sysdbaと入力し、パスワードを要求されたらwelcome1と入力します(この演習では、ユーザー名はsystem、パスワードはwelcome1としています)。
JPAとCoherenceの併用
