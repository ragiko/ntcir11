pspkurakusさん 
>scriptの方が圧倒的に遅いのでしょうか??
まず、性能比較の条件を示されていなくて、「無条件で、圧倒的に」という認識は誤りでしょう。 
下記URLの性能比較結果によれば、C言語ベースのフレームワークより、
JavaScriptベースのフレームワークの方が1.2倍早かったことが報告されています。0.2倍の差異は圧倒的な差異ではないでしょう。
むしろ、非オブジェクト指向言語とオブジェクト指向言語の性能差の4倍の方が、圧倒的と言ってよいでしょう。
ウサギと亀の逸話のように、「性能の良いフレームワークを作ることに関して、C言語(ウサギ)のプログラマは怠慢で、JavaScript(亀)に追い抜かれてしましました」
http://www.techempower.com/benchmarks/#section=data-r6&hw=i7&test=d...
cpoll_cppsp-raw :C++言語 114,711回処理/秒 4.8倍早い
gemini Java言語 105,204回処理/秒 4.4倍早い
nodejs-mongodb-raw JavaScript/秒 27,598回処理 1.2倍早い
onion-raw C言語 23,649回処理/秒 1
潜在的には、実行時に構文の解釈処理が走らない方が速くて、
(マシン語で直書)>(コンパイラ系の言語で記述してマシン語で動作)>(コンパイラ系言語で記述して中間言語にコンパイルし、中間言語をインタプリト(構文の解釈&実行))>(記述した言語をインタプリト構文の解釈&実行)という早さになるでしょう。
でも、DB入出力とか、画像とか、何らかのグローバルリソースを操作するライブラリを使う場合、オブジェクト指向言語の方が、「サッキの処理の続き。 以前の内部状態を記憶して継続操作を最適化して実行」ということをマルチスレッド対応でも簡単に実装することができて、全体的に早い実装が容易です。
そうしたライブラリの実装の難しさが理解できれば、上述の性能比較のレースに参加しようというC言語版onionフレームワークのチークのスキルや能力の高さをもってしても、他のチームを制することができなかったことを怠慢というのは、言い過ぎだといえましょう。
なぜC言語などとscript言語の処理速度を比べるとscriptの方が圧倒的に遅... - Yahoo!知恵袋
