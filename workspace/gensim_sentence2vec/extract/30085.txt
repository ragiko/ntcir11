Markdownサポート
Markdown サポートは、doxygen version 1.8.0で導入しました。Markdownは、John Gruberが書いたプレーンテキストのフォーマットで、次のような設計目標を基礎としています。 
Markdownフォーマットのシンタックスの設計目標は、できる限り読みやすくすることです。 その思想は、Markdownフォーマットの文書は、プレーンテキストのまま印刷可能で、 タグ付けや、フォーマット指示といった様子がないようにすることです。 Markdownシンタックスは、テキストをHTMLに変換する既存のフィルターの影響を受けていますが、 その着想の根本にあるのは、プレーンテキストのメールのフォーマットです。
次のセクションで、Markdownの基本機能を簡単に紹介します。 詳しくは、Markdownサイトを参照してください。
あちこちでMarkdownの拡張が行われました。たとえば、PHP Markdown Extraと、GitHub flavored Markdownです。セクション Markdown 拡張 では、doxygenがサポートする拡張を紹介します。
最後に、セクションDoxygen 特有の事項 で、Markdown標準をdoxygenではどのように実装しているかを紹介します。
標準のMarkdown
段落
Markdownサポートを始める前から、doxygenは同様の段落作法をサポートしていました。段落を作るには、連続するテキスト行を、1行以上の空行で分けてください。
例: 
ここに一段落目を書きます。
続くテキストを別の段落に書きます。
見出し
Markdown同様、doxygenは2種類の見出しをサポートします。
レベル1か2の見出しは、次のように書きます。 
レベル1の見出し
=========================
レベル2の見出し
-------------------------
見出しの次行は、=か-だけで構成します。 =、-の正確な数は、2以上あれば、重要ではありません。
または、行の初めに # を使うこともできます。行の初めの数で、レベル(6が最大)を決めます。行の終わりに # をいくつか使うことで見出しを終わることもできます。例: 
# レベル1の見出し
### レベル3の見出し #######
引用ブロック
引用ブロックの各行の初めには、一つ以上の>を置きます。これは、テキストだけのメールと似ています。 
> 引用ブロック
> 複数行です
引用ブロック内には、リストとコードブロック(下記参照)を含むことができます。 引用ブロックをネストすることもできます。
doxygenで注意していただきたいのは、>の後にスペースを入れることです。誤検知を避けるためです。 たとえば、次のように書くと、 
0  if OK\n
>1 if NOK
2行目は引用ブロックになりません。
リスト
行頭に -,+,* を書くことで単純なリストを作れます。 
- アイテム1
アイテム1のテキスト
- アイテム2
+ ネストされたリストのアイテム
+ もうひとつのネストされたアイテム
- アイテム3
リストのアイテムは、各段落が適切にインデントされていれば、複数の段落に分けることができます。リストはネストできます。 また、次のように、番号を付けることもできます。 
1. 最初にアイテム
2. 次のアイテム
doxygen特有の事項については、リストの拡張 を読んでください。
コードブロック
フォーマット済み逐語ブロックは、テキストブロックの各行を、最低4つのスペースでインデントすれば、作れます。 
ここは普通の段落
ここはコードブロック
再び普通の段落
doxygenは、コードブロックから必須のインデントを削除します。 ここで注意していただきたいのは、コードブロックは段落の途中で始められないことです。コードブロック前の行は空にしてください。
セクション コードブロックのインデント で、doxygenによるインデントの扱い方を細かく説明します。標準のMarkdownとは少し扱いが違うのです。
水平線
水平線を作るには、行にハイフンかアスタリスクかアンダースコアを三つ以上入れます。その行には、空白をいくつ含めてもかまいません。
例: 
- - -
______
コメントブロックにアスタリスクを使用しても水平線にはなりません。詳細はアスタリスクの使用 を参照してください。
強調
テキストを強調するには、アンダーラインかアスタリスクでテキストをはさんでください。2つ使うと、さらに強くできます。
例: 
アスタリスク一つ*
_アンダーライン一つ_
アスタリスク2つ**
__アンダーライン2つ__
セクション 強調の限界 で、doxygenの強調の扱い方が、標準のMarkdownと少し違うところを説明します。
コード範囲
コード範囲を示すには、コードをバッククォート(`)で囲みます。コードブロックと違い、コード範囲は段落の中に出現します。例えば、 
`printf()` 関数を使いなさい
コード範囲内で文字バッククォートを使うには、次のようにします。 
コマンド `ls` の出力先を `var` に指定するには、 ``var=`ls``` とします。
セクション コード範囲の制限 で、doxygenのコード範囲の扱い方が、標準のMarkdownと少し違うところを説明します。
リンク
doxygenでは、 *インライン* と *参照* どちらのリンクスタイルも使えます。
どちらのスタイルでも、リンク定義は、[角括弧] で区切られたリンクテキストで始まります。
インラインリンク
インラインリンクでは、リンクテキストの後 URL が続き、その次にリンクタイトルがオプションで続きます。これら2つは、通常の括弧で囲まれます。 リンクタイトル自体は、引用符で囲まれます。
例: 
[リンクテキスト](http://example.net/)
[リンクテキスト](http://example.net/ "リンクタイトル")
[リンクテキスト](/relative/path/to/index.html "リンクタイトル") 
[リンクテキスト](somefile.html) 
加えて、doxygenは、文書つき要素をリンクする方法も提供します。 
[リンクテキスト](@ref MyClass) 
参照リンク
URL をインラインに配置せず、リンクを分離して、テキスト内部から参照するようにもできます。
リンク定義は次のようにします。 
[リンク名]: http://www.example.com "オプションでタイトル"
二重引用符でなく、一重引用符や括弧もタイトル部分に使えます。
一度定義すると、リンクは次のようになります。 
[リンクテキスト][リンク名]
リンクテキストと名が同じなら、次のようにできます。 
[リンク名][]
あるいは 
[リンク名]
でリンクへの参照を定義できます。
リンク名の適合は、大文字小文字を区別しません。 例: 
[Google] からのトラフィック量は、[Yahoo] や [MSN] の10倍ある。
[google]: http://google.com/        "Google"
[yahoo]:  http://search.yahoo.com/  "Yahoo Search"
[msn]:    http://search.msn.com/    "MSN Search"
リンク定義は、出力には現れません。
インラインリンクと同様、doxygenでは、リンク定義内に @ref を使えます。 
[myclass]: @ref MyClass "My class"
イメージ
Markdown では、イメージへのシンタックスはリンクと似ています。 唯一の違いは、リンクテキストの前に ! を置くことです。
例: 
![キャプション テキスト](/path/to/img.jpg)
![キャプション テキスト](/path/to/img.jpg "イメージタイトル")
![キャプション テキスト][イメージ定義]
![イメージ定義]
[イメージ定義]: /path/to/img.jpg "オプションでタイトル"
また、ここでも @ref を使ってイメージへのリンクを定義できます。 
![キャプション テキスト](@ref image.png)
![イメージ定義]
[イメージ定義]: @ref image.png "キャプション テキスト"
キャプション テキストはオプションです。
自動リンク
URL や e-mail アドレスへのリンクを作る際、Markdown は次のシンタックスをサポートします。 
<http://www.example.com>
<address@example.com>
doxygen は、角括弧なしでもリンクを作ることができます。
Markdown 拡張
目次
doxygen は、特別なリンクマーカー [TOC] をサポートします。ページの先頭に全セクションを並べる目次を作るために配置します。
[TOC] は、\tableofcontents コマンドと同義です。
テーブル
"Markdown 拡張" で定義されている機能のうち、simple tables のサポートがあります。
テーブルはヘッダー行、セパレータ行と、一行以上のデータ行からなります。列は、パイプ(|)文字で区切ります。
例: 
最初のヘッダ  | 次のヘッダ
------------- | -------------
内容          | 内容 
内容          | 内容 
以上は、次のテーブルを作ります:
最初のヘッダ 次のヘッダ
Doxygen
