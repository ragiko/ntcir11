先日の投稿で「ANALYZE INDEX … VALIDATE STRUCTURE」による、肥大化した(無効ブロックが多い)インデックスの調査要領と注意点を紹介した。
例では12%程度の無効ブロック数率であったが、調査は業務時間外に限られるため調査の間隔によってはより比率が高くなるまで肥大化に気がつかないかもしれない。
リビルド自体はオンライン(業務時間中)でも実施可能なので(当然負荷を考慮する必要はある)、何度か調査を繰り返していけば肥大化の傾向を把握できるかもしれない。
大規模なシステムではテーブル数が多く必然的にインデックスの数も多くなる。従ってどのインデックスが調査対象とするかは(ANALYZEコマンドは1つのインデックスだけが対象となるため)、テーブルに対するINSERT/DELETEの数が比較的多いものを優先して調査すればよい。
ところで、あるサイトでDBAがすべてのインデックスを毎日リビルドして「うちのシステムはインデックス検索については問題がない!」と豪語しているケースがあった。
以前、インデックス・スキャンについて考える①～実行計画におけるアクセス方法の集計～というエントリを投稿したのだが、普通のOLTP主体のデータベースではアクセス方法の6〜7割がインデックスに関するものであった。(サンプル数はそれほど多くないのだが、経験的にはインデックス検索の比率はもっと高いように思う。)従って「リビルドを行えばシステム全体のパフォーマンス向上に有益である。」という考え方はあながち間違いではない。
ただし、リビルドを行って(つまりインデックスをよりコンパクトにすることで)パフォーマンスの向上が期待できるのは
INDEX FULL SCAN
INDEX FAST FULL SCAN
上限値(または下限値条件)のみを指定したINDEX RANGE SCAN
くらいである。
他には、ループ処理の中で INDEX UNIQUE SCAN を大量に実行しているような場合、リビルドの結果例えばBLEVELが43になったとすれば、I/O数は25%削減されるので、バッチ処理の性能改善のヒントになることはある。
3. は「より古い」というレンジ検索の比較条件になるが、古いレコードを定期的に削除しているような場合削除フラグのついたリーフブロックを無駄に読むことでパフォーマンスが悪くなるのが原因である。
しかし、「WHERE a BETWEEN b AND c」のようにレンジ検索で上限と下限値の条件を両方指定しているようなケース(これは比率としては多いように思う)では、リビルドしてインデックスをコンパクトにしたとしても実はあまり性能の向上は期待できないのだ。
「リビルドすれば速くなる」ということが無条件に受け入れられているように感じることが多々あるのだが、もちろん肥大化していないインデックスを何回リビルドしても意味が無いことは当然として、リビルドが必ずしも性能改善に結びつかないケースがあるという事実はあまり深く理解されていないかもしれない。(これは必要なリビルドをやらなくてもよいという意味ではない。)
次回は、そのような別のケースを具体例を交えて解説してみようと思う。
About Mihara Kenichi
コンサルタントとしてOracleデータベースのチューニングをする機会が多いのですが、最近はパラメータ調整の機会が本当に少なくなりました。それだけ自動化が進んでいるということを実感します。その代り設計に起因する問題が目立ってきました。「チューニングは正しい論理設計から」というモットーで、ERDやCRUD表などの作成支援を今後のテーマにしようと日々精進してます。
Twitter: @kenichimihara
インデックスのリビルドで性能は改善するか?① | Insight Technology, Inc.
