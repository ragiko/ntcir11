はじめに
cron とは、ジョブ(スクリプト)を自動実行するためのデーモンプロセスです。そして、Linux システムの管理を行なう場合、ログのローテートや、バックアップなど、定期的に自動実行したいジョブが数多くあります。特に、バックアップなどは、システムへの負荷が大きいため、通常は、ユーザからのアクセスが少ない、深夜や早朝に行なわれます。
このように、定期的に実行されるジョブは、crond というデーモンによって、自動的に行なうように管理することができます。そこで、今回は、cron の設定を行なうために必要なコマンドや、設定ファイルについて説明していきたいと思います。
設定手順
このページでは、以下の順番で cronの設定について説明します。
まず、Linuxシステム上で、cron を使用するために、サービスの起動で、サービスの状態を確認し、停止している場合には、サービスを起動します。
次に、cronの設定を行なうために必要な、コマンドの使用方法と、設定ファイル(/var/spool/cron/user)について説明します。さらに、「/etc/crontab」ファイルから呼ばれるディレクトリでの設定について説明します。
そして、crontabコマンドの使用を制限する方法をアクセス制限で説明し、最後に、簡単な設定例を紹介してcronの設定方法についての説明を終わります。
その他
このページは、crontab の man ページを参考に、cronの基本的な設定方法についてのみ説明を行ないます。このページで説明していない内容については、以下のコマンドを実行して crontab の man ページを参照したり、Internetで検索するなどして使用して下さい。
# man 5 crontab
サービスの起動
cron を使用するためには、crond が起動していなくてはいけません。通常は、インストール時にサービスが自動起動するように設定されていますが、以下のコマンドで、crond の状態を確認します。
# /etc/rc.d/init.d/crond status
crond (pid xxx) を実行中...
もし、crond が起動していなかった場合には、crond を手動で起動し、以後、OS起動時にcrond が自動起動するように設定します。
# /etc/rc.d/init.d/crond start
crondを起動中:
# chkconfig --level 2345 crond on     ・・・(注1)
# chkconfig --list crond              ・・・(注2)
crond     0:オフ  1:オフ  2:オン  3:オン  4:オン  5:オン  6:オフ
cron の設定ガイド
