いま、ひとつのテキストが与えられていて、それが鴎外の作品か、それとも漱石の作品かの識別をしようとしている。
これは、次のような2つの条件づき確率の大小を比較することにほかならない。
これらの確率を 直接 計算する方法はない。
しかし、ベイズの定理を用いると、以下の各式の右辺を計算することによって、これらの確率を求めることができる。
ここに、分母は、
であって、鴎外のテキストでも漱石のテキストでも同じであるから、大小比較が目的ならば無視してよい。
さて、分子の
は、一般に 「事前確率」 と呼ばれているが、ここでは訓練に用いたデータにおいて、各作家のテキストが出現した確率のことであって、ちなみに今回は2作品ずつを対象としているから、どちらも 0.5 である。
したがって、問題は次のような条件づき確率(尤度という)を求めることに集約される。
ここで、テキストが形態素解析によって、次のような n 個の形態素の系列に解析されたとする。
ここで、それぞれの形態素が互いに独立であると見なす。
現実にはそんなことはあり得ないわけで、形態素間には多かれ少なかれ統語的・意味的な依存関係が存在するが、それらはバッサリ捨象してしまう。
ナイーブベイズ=単純ベイズ と呼ばれる理由はここにある。
そうすると、例えばテキストが鴎外の場合を考えると、尤度は次式のように、個々の形態素に関する条件づき確率の積として表現できる。
右辺の個々の確率は、訓練データから作成した確率行列の対応する要素を参照すればよい。
ただし、それらの確率は一般に相当小さな値をとるので、計算機で掛け算を重ねていくとあっという間に計算精度が低下してしまう。
なので、実際には両辺の対数をとることで、右辺の掛け算を足し算に変換して計算精度を保つ。
数学的には、2つの量の大小関係は対数変換しても不変である、という性質を利用している。
ついでに事前確率も追加して、次のような式の値を求めればよい(漱石の場合も同様)。
今までに作成したスクリプトは次のとおり。
library(RMeCab)
setwd("/path/to/'data'/directory/")
result <- docMatrix("data/writers/",
result <- result[ row.names(result) != "[[LESS-THAN-1]]" , ]
result <- result[ row.names(result) != "[[TOTAL-TOKENS]]" , ]
result <- t(result)
train.index <- c(1, 2, 5, 6)
writer <- factor(c(rep("ogai", 4), rep("soseki", 4)))
trData <- result[train.index, ]
level <- levels(writer[train.index])
freq <- sapply(level, function(level)
prob <- t(t(freq + 1) / (colSums(freq) + nrow(freq)))
これに、まず事前確率を計算するためのコードを追加する。
実際には鴎外・漱石ともに 0.5 と自明なのだが、将来の拡張性を考えて計算手順をコード化しておく。
R の table 関数で度数分布を作成できるので、これを利用している。
pfreq <- table(writer[train.index])
pprob <- pfreq / sum(pfreq)
とりあえず、今回は訓練データ以外のテキストとして、3番目のテキストの形態素解析結果を使って試してみる。
colSums(log(prob) * result[3, ]) + log(as.numeric(pprob))
以下に実行結果を示す。
> colSums(log(prob) * result[3,]) + log(as.numeric(pprob))        ogai        soseki -54616.58   -55484.10 
-54616.58 > -55484.10 であるから、このテキストは鴎外の作品であることを示している。
で、確かに3番目のテキストファイルは ogai_niwatori.txt  であって、これは鴎外の作品に間違いない。
残りの4番目、7・8番目のテキスト識別については次回(最終回)で検討する。
ナイーブベイズを実装する〔5〕 - 迷途覚路夢中行 - Yahoo!ブログ
