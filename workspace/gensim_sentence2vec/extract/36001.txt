
AIMは、EXPRESSと呼ばれる形式仕様記述言語により定義されている。STEP規格は、EXPRESSを用いてAIMの定義を行うことにより、次のような特徴を備える。
言語要素で表現される内容が限定されているために、自然言語で表現した場合に比べて、曖昧さのない規格の解釈が可能になる。
統合リソース、AIC、AIMの各モデルのモジュール化を行うことができる。
物理的な媒体上での実体の表現(ファイル形式など)を、EXPRESSで記述されたモデルからの形式的な写像の形で定義する。従って個々のモデル毎にファイル形式などを定義する必要がない。
記述されたモデルを計算機プログラムによって処理することによって、内容の自動的な検証、応用プログラム開発の効率化などへの応用が可能となる。
以下に、EXPRESS言語の主な構成要素を示す。
スキーマ
エンティティ
データ型
EXPRESS-G
インスタンス
継承関係とインスタンス
スキーマ
EXPRESSでは、表現しようとしているエンティティ、定義型、関数定義などのアルゴリズム宣言、及び制約などを1つにまとめて管理するための領域をスキーマ(schema)と呼ぶ。一般に、あるスキーマ中の宣言を他のスキーマ中から用いることはできない。他のスキーマ中の宣言を参照するために、EXPRESSのスキーマインターフェースを宣言して、他のスキーマ中の宣言内容に対する参照を定義する。
STEPの統合リソース、AIC、アプリケーションプロトコルも、それぞれスキーマとして宣言されている。アプリケーションプロトコルから統合リソースやAICに対する参照も、スキーマインターフェースを用いて定義される。
エンティティ
EXPRESSでのモデル表現は、オブジェクト指向言語のクラスに近い概念の集まりにより定義され、エンティティ(entity)と呼ばれる。エンティティは、他のエンティティと意味的に識別可能な最小限の単位として取り扱われる。エンティティの定義は、他のエンティティとは重複しない名称、属性の名称及び型、他のエンティティからの継承関係、制約などによって行われる。
各エンティティには、自身が正しい状態であることを規定するための制約を記述することができる。制約は、属性などを含んだ論理式として定義され、あるエンティティが正しい状態であると判断されるためには、各属性が指定された型の値をもった上で、制約の論理式が真と評価されなければならない。制約を記述するためには、定義型や関数などの手続き的なアルゴリズム記述も用いることができる。
例えば、円を表すエンティティcircleは、継承関係を用いて次のように記述されている。
エンティティcircleは、エンティティconic(円錐曲線)の下位型で、conicの属性や制約定義を継承しており、その属性radius(半径)の型はpositive_length_measureであることを示している。
この例では明示的な制約記述は示されていないが、positive_length_measureは、規格の別の部分で正の実数の値をもつ型として宣言されており、制約と同じ働きをしていることになる。また、属性の型を0.0以下の値を取ることができる一般的な実数型REALとして、WHERE節を用いて判断する制約を記述することも可能である。
EXPRESSでは、個別のエンティティだけではなく、複数のエンティティ間での制約を記述する大域制約(global
rule)を定義することができる。このために、エンティティ名によりインスタンスを検索(query)する機能などが用意されている。
データ型
属性の型を定義するために、EXPRESSでは幾つかのデータ型が用意されている。規格の中で独自に定義できるデータ型もある。以下に概要を述べる。
単純データ型
基本的な情報の表現のために、次のデータ型が用意されている。
数値データ型(NUMBER)
実数データ型(REAL)
整数データ型(INTEGER)
論理データ型(LOGICAL)
ブールデータ型(BOOLEAN)
文字列データ型(STRING)
2進データ型(BINARY)
集合体データ型
複数のインスタンスをまとめて取り扱うために、幾つか集合体データ型が用意されている。
配列データ型(ARRAY)
リストデータ型(LIST)
集合データ型(SET)
名前付きデータ型
名前付きデータ型は、スキーマ中で定義したデータ型である。エンティティがもつ属性の型として、他で定義された定義データ型名、またはエンティティデータ型名を指定することができる。
エンティティデータ型
定義データ型
構成データ型
構成データ型は、定義データ型を宣言する際に基底表現を広げるために用いられる。列挙データ型は、定義域として名前の順序付けられた集まりをもつ。選択データ型は、その選択リスト中のデータ型の内、いずれかの型の値をもつとして解釈できる。
列挙データ型(ENUMERATION)
選択データ型(SELECT)
EXPRESS-G
EXPRESSで記述されたモデルは、継承構造と参照構造が複雑になる。この理解を助けるための図式表記法をEXPRESS-Gと呼び、EXPRESSに附属した規格として用意されている。
インスタンス
定義されたエンティティの各属性が実際の値をもち、参照構造を実体化したものをインスタンス(instance)と呼ぶ。これは、オブジェクト指向言語のオブジェクトに近い概念を表す。インスタンスは、物理媒体上で識別可能な最小限の単位として実体化される。インスタンス化は、エンティティをベースにして行われ、属性として用いられる実数値や文字列などは、単体で実体化されることはなく、インスタンスに含まれる形で実現される。
継承関係とインスタンス
EXPRESSにおける継承関係は、下位型となるエンティティにおいてSUBTYPE宣言を用いて上位型を指定することで定義する。EXPRESSでは、複数の上位型からの多重継承を行うことも可能である。また、上位型がさらに別の上位型からの継承を行っている場合は、下位のエンティティは、それぞれの上位型で宣言された全ての属性や制約を継承する。継承関係をもたないエンティティは、その属性だけをもつ形でインスタンス化されるが、継承関係をもつエンティティでは、複数のエンティティから継承した内容の全てが実体化される。
また、EXPRESSでは、兄弟の継承関係をもつエンティティを組み合わせて、インスタンスに実体化することができる。以下に例を示す。属性宣言の部分は省略している。
STEP規格の概要 - 第4章 EXPRESS言語
