こんにちは、リブセンスの山浦清透です。
10万件を超えるようなデータに対してExcelのVLOOKUP関数を使用すると、データが多すぎてフリーズしたことはないでしょうか?今回は大量のデータに対してVLOOKUP関数を使用したいときの対処法を2つ、ご紹介したいと思います。
方法1 高速VLOOKUPを使用する
はじめにご紹介するのは、”高速VLOOKUP”です。
【奥義】大量データでの高速VLOOKUPで紹介されていた方法で、方法2に比べて若干低速ですが、Excelだけで完結でき非常に簡単なのでご紹介致します。
サンプルとして、「id / 名前」のtable1と「id / 身長」のtable2を統合し、「id / 名前 / 身長」のtable3を作成するケースを考えます。
事前準備: VLOOKUP関数の範囲を昇順に並び替える
VLOOKUP関数の範囲を昇順に並び替えます。
もし、文字列と数値が混在する場合は下記メッセージが表示されます。その際は、「数値とテキスト形式の数値を分けて並べ替えを行う」を選択します。
計算式
table3で、id=1の身長を求めたい場合(D16セル)、次のような計算式になります。
=IF(INDEX($D$3:$D$9,MATCH(B16,$D$3:$D$9,1),1)=B16,VLOOKUP(B16,$D$3:$E$9,2,1),NA())
まず、INDEX関数とMATCH関数を使用し、検索値のidが検索範囲の中にあるかを確認します。あった場合はVLOOLUP関数を返し、なかった場合はエラーを返します。
VLOOKUP関数は近似値で検索したほうが処理が早くなります。そこで、検索範囲を並び替えて、近似値で検索できるようにしています。
注意事項
データ範囲は必ず昇順にしてください
並び替える際は、[データ]−[並べ替え]のオプションで、「ふりがな使わない」にチェックしてください。文字列の場合、文字コード順で並び替えないと、近似値でうまく検索できなくなります
列指定すると一気に重くなるので検索範囲を設定してください
VLOOKUP関数の検索方法は1(TRUE)の近似値検索にしてください※論理式で検索値と完全一致した場合のみVLOOKUP関数を使用するので結果的には完全一致検索となります
方法2 SQLiteでデータを結合する
「Excelを開こうとするとフリーズしてしまう。」それくらい大量のデータを扱う場合は、Excelの代わりにSQLを用いる方法がオススメです。この方法だと100万行を超えるような大量のデータでも、Excelに比べると一瞬で処理することができます。
1. SQLiteをインストールします
まずSQLiteのダウンロードページにいきます。
Windowsの場合、「Precompiled Binaries for Windows」と書かれた項目の「sqlite-shell-win32-x86-3080500.zip」を任意の場所にダウンロードします(2014年6月24日時点)。
ダウンロードしたファイルを解凍します。次に、含まれているファイル「sqlite3.exe」を任意のディレクトリに移動させます。今回は「c:\sqlite」というディレクトリを作成しファイルを設置しました。
これでSQLiteのインストールは完了です。
2. SQLiteのデータベースを作成します
ここからはコマンドプロンプト上でSQLiteの操作を行います。
まず、コマンドプロンプトを立ち上げます。そしてsqlite3.exeが置いてある「c:\sqlite」へ移動します。
cd C:\sqlite
続いてデータベースを作成します。データベースは任意の名前で大丈夫です。
sqlite3 sample.sqlite3
「sample.sqlite3」というデータベースが作成され、接続も行われています。
3. SQLiteで結合させたいテーブルを作成します
ここで、結合させたいデータをCSVファイルで事前に作成しておきます。
今回はtable1とtable2をそれぞれ、「table1.csv」「table2.csv」というファイル名で保存します。ファイルの保存場所は、「sqlite3.exe」ファイルと同じディレクトリ(今回は「C:\sqlite」)にします。
続いて、結合させたいテーブルを作成します。
今回は「名前 / 身長」のテーブルと「名前 / 体重」のテーブルを結合させたいので、2つのテーブルを作成します。
create table name (id, name);
create table height (id, height);
4. CSVファイルを3で作成したテーブルにインポートします
「table1.csv」と「table2.csv」を、3で作成したnameテーブルとheightテーブルにインポートします。
まず、CSVのデータ形式に合わせて、区切り文字を「,」に設定します。
.separator ,
CSVファイルをそれぞれのテーブルにインポートします。
.import test1.csv name
.import test2.csv height
5. テーブルを結合した結果をCSVで出力します
最後に、テーブルを結合してCSVで出力します。
まずは出力モードをCSVに設定します。
.mode csv
.output result.csv
.outputを実行した後にSELECT文を書くと、その結果が「sqlite3.exe」ファイルと同じディレクトリに「result.csv」として保存されます。
SELECT * FROM name INNER JOIN height ON name.id = height.id;
これにて完了です。
また同時に複数テーブルの結合や、条件式による絞込を行えるため、方法1に比べ複雑な結合を行いたい場合に便利です。
まとめ
最後に、速度がどれくらい違うかを比較してみます。
1万5千行のデータに対して、「3万行×2列」のデータを範囲指定して、VLOOKUP関数を使用した時の実行速度(秒)です。通常のVLOOKUPと方法1、2とではおよそ100倍ほど処理速度が変わってきました。
方法1, 2の使い分けとして
膨大なデータ, 複数テーブル, 複雑な絞込を行う場合は方法2
そうでない場合は方法1
が良さそうです。
Excelがフリーズするような大量のデータを扱う場合でも、高速に処理を終わらせることができますので、よろしければ試してみてください!
参考
【奥義】大量データでの高速VLOOKUP
大量データへのVLOOKUP関数を高速にする2つの方法−LIVESENSE DIGITAL MARKETING
