
今回は、性能要件を具体化するポイントを紹介します。皆さんは、性能要件に何を定めればよいと思いますか。
システムの性能要件で、「Webアプリケーションの画面レスポンス時間は3秒以内であること」「バッチアプリケーションは毎日午前0～午前5時の間に終了すること」としか定義していないプロジェクトを見かけます。この場合、以下のような問題が潜んでいます。
(1)全機能の処理時間を同じレスポンス時間に収めなければならない
全機能に対して同じレスポンス時間を目標とするのは現実的ではありません。なぜなら、機能によって求められるレスポンス時間と処理の複雑度は異なるからです。
例えばコールセンターのシステムで、「(a)電話オペレーターが操作する画面」と「(b)管理者がマスターデータをメンテナンスする画面」があるとします。レスポンスの悪化が直ちにビジネス機会の損失につながる(a)の方が、求められるレスポンス時間はシビアなはずです。(b)の方はレスポンス時間が少々かかっても、作業がスムーズに行える機能性を重視すべきでしょう。
機能性重視と性能重視の区別なく一律の性能目標を定めることは、機能性重視の機能に対して、実現不可能な性能要件を設定することにつながり、工程の終盤で、解決が困難な性能問題へと発展する恐れがあるのです。
(2)前提条件が明確にされていない
画面のレスポンス時間やバッチ処理時間の目標値は、前提条件とセットで定める必要があります。
画面のレスポンス目標時間の場合、平常時を前提としているのか、ピーク時を前提としているのかによって達成の難易度は異なりますし、バッチ処理の場合は、処理するデータ件数によって必要な時間は異なります。性能要件には、そうした条件を明記しておくことが求められます。また、何年後の業務量を想定しているのかも前提条件として明確にすべきでしょう。
(3)何割の処理が目標時間を満たせば合格なのかが示されていない
同じ負荷がかかった状態で同じ処理を実行したとしても、レスポンス時間は毎回同じにはなりません。例えばJavaを使ったWebアプリケーションでは、サーバー上でガーベジコレクション(GC)が発生した時に実行されたトランザクションのレスポンス時間は、平常時より長くなります。「100%目標時間を満たす」ことを合格条件とすると、発生頻度がまれなGC時間を織り込んで設計しなければならず、達成のハードルが高くなります。
「全トランザクションの90%が目標時間を満たせば合格」というように、ごく一部の例外値を除外できるように決定するのが現実的でしょう。
性能要件の具体例
上記を踏まえて、性能要件を具体化したときのイメージを表1に例示しました。
現場で使える性能マネジメント - 第2回 「応答一律3秒」という性能要件はやめよう:ITpro
