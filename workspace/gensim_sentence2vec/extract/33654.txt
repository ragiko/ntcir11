
デフォルトではコンテンツ幅を 12 分割して「col-md-4 (12分割中の4つ分 : 1/3)」のようにして、並べたいカラムの割合総計を 12 に合わせて使う。
<div class="col-md-4">カラム1</div>
<div class="col-md-4">カラム1</div>
<div class="col-md-4">カラム1</div>
上記のように記述すると、ウィンドウ幅が 992 px 以上であれば各カラムが横に並ぶ。991 px になると float が解除され、縦一列に自動適用となる。各カラムには左右 15px のパディング値が設定されているため、カラム間の見た目上の間は 30px ずつ開き、最初のカラムの左側と最後のカラムの右側に 15px ごと開く。
各カラムには float がかかっているため、親要素はこれら要素の高さを認識できないので、通常の利用では「container」クラスの外枠ボックスとセットで利用し、基本コンテナサイズを等分割することになる。「container」クラスにはデフォルトで左右に 15px のパティングと clearfix が設定されているが、その他の汎用ボックスで利用する場合は clearfix が設定されていないため、ユーティリティ「clearfix」クラスを付ける。
/* container クラスでの利用 */
<div class="container">
<div class="col-md-4">カラム1</div>
<div class="col-md-4">カラム1</div>
<div class="col-md-4">カラム1</div>
</div>
/* 汎用ボックスの場合は clearfix クラスを付ける */
<div class="clearfix">
<div class="col-md-4">カラム1</div>
<div class="col-md-4">カラム1</div>
<div class="col-md-4">カラム1</div>
</div>
各カラムのパディング値は左右 15 px なので、最初のカラムの左側と最後のカラムの右側に 15px ごとの隙間ができる。これを無くしたい場合は「.row」クラスの外枠ボックスを使い、左右のネガティブマージンで吸収する。
/* row クラスで左右のパディングを吸収 */
<div class="container">
<div class="row">
<div class="col-md-4">カラム1</div>
<div class="col-md-4">カラム1</div>
<div class="col-md-4">カラム1</div>
</div>
</div>
「container」クラス以外の自動(100%)幅で利用しようとすると「row」クラスのマージン相殺が上手くいかず物理的なコンテンツサイズが 100% 以上に広がってしまいスクロールが出てしまう場合がある。その場合は左右にパディング値を 15px づつ付けることで解決できる。
カラムのオフセット
割合上限値以下のカラムを全体幅の特定の位置に固定させたい場合は「オフセット」機能を使うことで固定させることができる。
<div class="row">
<div class="col-md-4">.col-md-4</div>
<div class="col-md-4 col-md-offset-4">.col-md-4 .col-md-offset-4</div>
</div>
<div class="row">
<div class="col-md-3 col-md-offset-3">.col-md-3 .col-md-offset-3</div>
<div class="col-md-3 col-md-offset-3">.col-md-3 .col-md-offset-3</div>
</div>
<div class="row">
<div class="col-md-6 col-md-offset-3">.col-md-6 .col-md-offset-3</div>
</div>
オフセットを使う場合、カラム割合値とオフセット割合値が 12(デフォルト値)を超えないように設定する。カラム割合値とオフセット値で固定したカラムの右側にまだ割合が残る場合は float で回り込んでしまうため、次のセットとは物理的にブロックなどで分離して記述すること。
カラムのネスト
分割したカラム幅を基準に、その中をさらに分割して利用することもできる。
<div class="container">
<div class="row">
<div class="col-md-4">.col-md-4</div>
<div class="col-md-8">
<div class="row">
<div class="col-md-4">col-md-4</div>
<div class="col-md-4">col-md-4</div>
<div class="col-md-4">col-md-4</div>
</div>
</div>
</div>
</div>
上記の例では「container」クラスを 4 と 8 に分割し、8 のカラムを基準としてさらに 12 で分けたカラムが入れ子になっている。各カラムは左右 15px のパディング値が設定されているので、新しく基準とするカラムの中でそのまま使えば左右 15px ずつ縮む。「row」クラスを挟むことで左右 15px を潰すことができる。
カラムの順と見え方の変更
通常、同方向へ float された要素は出現順に並ぶが、カラムには収められるコンテンツ構成によっては表示順序を入れ替えたい場合がある。
<div class="container">
<div class="row">
<div class="col-md-9 col-md-push-3">.col-md-9 .col-md-push-3</div>
<div class="col-md-3 col-md-pull-9">.col-md-3 .col-md-pull-9</div>
</div>
</div>
「push」は指定した値分右側に表示、「pull」は指定した値分左側に表示する。
<div class="container">
<div class="row">
<div class="col-md-4 col-md-push-8"><p>.col-md-4 .col-md-push-8 右</p></div>
<div class="col-md-4"><p>.col-md-4 中</p></div>
<div class="col-md-4 col-md-pull-8"><p>.col-md-4 .col-md-pull-8 左</p></div>
</div>
</div>
Push する割合値、Pull する割合値、カラムの割合値と全体値さえ間違えなければ、2つ以上のカラムでも自在にコンテンツを入れ替えることができる。
メディアクエリー
デフォルトの Bootstrap または CDN 利用の場合でモバイル対応他でメディアクエリーを利用したい時、手動でセッティングするには以下のように設定できる。
@media (max-width: 767px) { /* xs サイズでの指定 */ }
@media (min-width: 768px) and (max-width: 991px) { /* sm サイズでの指定 */ }
@media (min-width: 992px) and (max-width: 1199px) { /* md サイズでの指定 */ }
@media (min-width: 1200px) { /* lg サイズでの指定 */ }
Sass 版では元々サイズが変数登録されているので、「_variables.scss」をインポートした上で以下のように記述することで設定できる。
@media (max-width: $screen-xs-max) { /* xs サイズでの指定 */ }
@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) { /* sm サイズでの指定 */ }
@media (min-width: $screen-md-min) and (max-width: $screen-md-max) { /* md サイズでの指定 */ }
@media (min-width: $screen-lg-min) { /* lg サイズでの指定 */ }
グリッドシステム | Digital Sketch
