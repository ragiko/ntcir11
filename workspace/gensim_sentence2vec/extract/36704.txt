たけち: 以前も話をしたように、「複合型内容をもった複合型」の派生の仕方には制限(restriction)と拡張(extension)の2つがあったよね。
さらら: えぇ。
たけち: そして「複合型内容をもった複合型」の場合、まずxsd:anyType型を制限して複合型内容をもった複合型を作るけれども、その場合に、基準型の制限も、それがcomplexContentであることも、外見上は省略できるため、一見まるで派生などは関係ない書き方に見えることも説明したよね。
さらら: そうだったわね。要は、
自分でXMLスキーマのデータ型を定義したければ、必ず他の何らかのデータ型を基準型として、そこから派生させるという形をとらない限り、自分でデータ型を定義することはできない
という基本原則はあるけれど、それが建前だっていうことよね。
たけち: そうだね。ただ確かにそういう面もあるけれど、でもそれが建前ではなくて、本当に派生らしい派生を利用したい場合も、やっぱり中にはあるんだよ。今回から、建前ではなくて、派生らしい派生を実際に書いていくことを解説することにするね。
さらら: うん。そういうのが好き。
たけち: というわけで、まずは拡張(extension)の方から話からしていくよ。まず復習だけれど、「単純型内容をもった複合型」では、「拡張(extension)」はどんな機能を持っていたっけ?
さらら: え〜と。。。属性の追加だったわよね (^ ^;
たけち: そうだね、「単純型内容をもった複合型」では「拡張(extension)」は属性を追加するという機能を持っている。さて、これに対して複合型内容をもった複合型ではこの属性の追加の機能も持つと同時に、今度は要素(モデルグループ)の追加という機能も持つんだ。
たのしいXML: Schema(スキーマ):  要素(モデルグループ)の追加 1/2
