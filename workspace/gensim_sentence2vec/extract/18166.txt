バージョン 1.1.2 から、Yii は Gii と呼ばれるウェブベースのコード生成ツールを持つようになりました。
これは以前のコマンドラインで走る yiic shell 生成ツールに取って代るものです。
この章では、開発の生産性を高めるために、どのようにして Gii を使うか、そして、どのようにして Gii を拡張するかを説明します。
1. Gii を使う ¶
Gii はモジュールの形式で実装されており、既存の Yii アプリケーションの中で使用されなければなりません。
Gii を使うためには、最初にアプリケーション初期構成を次のように修正します。
return array(
......
'modules'=>array(
'gii'=>array(
'class'=>'system.gii.GiiModule',
'password'=>'pick up a password here',
// 'ipFilters'=>array(...a list of IPs...),
// 'newFileMode'=>0666,
// 'newDirMode'=>0777,
),
),
);
上記のように、gii という名前のモジュールを宣言し、そのクラスが GiiModule であることを指定します。
同時に、Gii にアクセスするときに尋ねられるモジュール用のパスワードも設定します。
セキュリティ上の理由から、デフォルトでは、Gii は localhost でのみアクセス可能なように構成されます。
もし、他の信頼できるコンピュータからもアクセス可能なようにしたいのであれば、上記のコードで示されているように、GiiModule::ipFilters プロパティを構成することが出来ます。
Gii は既存のアプリケーションの中で新しいコードファイルを生成して保存する場合がありますので、ウェブサーバのプロセスがそうするための適切な権限を持っていることを確かめる必要があります。
上記の GiiModule::newFileMode と GiiModule::newDirMode のプロパティは、新しいファイルとディレクトリがどういうモードで作成されるべきかを制御するものです。
注意: Gii は主として開発ツールとして提供されています。
従って、開発マシンにのみインストールされるべきです。
Gii は新しい PHP スクリプトファイルをアプリケーションの中に生成することが出来るものですから、そのセキュリティの確保については十分な注意を払わなければなりません (パスワードや IP フィルターなど)。
さて、以上で、URL http://hostname/path/to/index.php?r=gii によって Gii にアクセスすることが出来るようになります。
ここで http://hostname/path/to/index.php は既存の Yii アプリケーションにアクセスするための URL であると仮定しています。
もし既存の Yii アプリケーションが path 形式の URL (URL の管理 を参照) を使っているのであれば、URL http://hostname/path/to/index.php/gii によって Gii にアクセスすることが出来ます。
場合によっては、既存の URL 規則の先頭に次の URL 規則を追加する必要があるかもしれません。
'components'=>array(
......
'urlManager'=>array(
'urlFormat'=>'path',
'rules'=>array(
'gii'=>'gii',
'gii/<controller:\w+>'=>'gii/<controller>',
'gii/<controller:\w+>/<action:\w+>'=>'gii/<controller>/<action>',
...既存の規則...
),
),
)
Gii にはデフォルトでいくつかのコードジェネレータが含まれています。
各コードジェネレータは特定のタイプのコードを生成する役目を持っています。
例えば、コントローラジェネレータは、コントローラクラスといくつかのアクションのビュースクリプトを生成します。
また、モデルジェネレータは指定されたデータベーステーブルのためのアクティブレコードクラスを生成します。
ジェネレータを使用するときの基本的なワークフローは以下の通りです。
ジェネレータのページに入ります。
コード生成のパラメータを指定するフィールドに入力をします。
例えば、新しいモジュールを作成するためのモジュールジェネレータを使用する場合は、モジュール ID を入力する必要があります。
Preview ボタンを押して生成されるコードをプレビューします。
生成されるコードファイルの一覧がテーブルで表示されます。
どれでもクリックすればコードをプレビューすることが出来ます。
Generate ボタンを押してコードファイルを生成します。
コード生成ログを確認します。
注意: モデルを生成した場合は、必ず rules メソッドを確認して修正して下さい。
なぜなら、データベースの構造がデータバリデーションの要求を反映していない場合がしばしばあるからです。
2. Gii を拡張する ¶
Gii が内蔵しているデフォルトのコードジェネレータは非常に強力なコードを生成することが出来ますが、自分自身の好みや必要に応じて、機能をカスタマイズしたり、新しい機能を作成したりしたいこともしばしばあります。
例えば、生成されるコードを自分の好みのコーディングスタイルにしたい、とか、生成されるコードが複数の言語をサポートするようにしたい、とかです。
Gii ではこのようなことはすべて簡単にできます。
Gii は二つの方法で拡張できます。
既存のコードジェネレータのコードテンプレートをカスタマイズするという方法と、新しいコードジェネレータを書くという方法です。
コードジェネレータの構造
コードジェネレータは、それぞれ、一つのディレクトリの下に格納されています。
そのディレクトリの名前がジェネレータの名前として扱われます。
ディレクトリは通常下記の内容から構成されます。
model/                       モデルジェネレータのルートフォルダ
ModelCode.php             コード生成に使われるコードのモデル
ModelGenerator.php        コード生成コントローラ
views/                    ジェネレータのためのビュースクリプト
index.php              デフォルトのビュースクリプト
templates/                コードテンプレートセットを格納
default/               'default' のコードテンプレートセット
model.php           モデルクラスのコードを生成するためのコードテンプレート
ジェネレータのサーチパス
Gii は利用可能なジェネレータを GiiModule::generatorPaths プロパティで指定される一連のディレクトリから探します。
カスタマイズが必要な場合は、次のようにして、アプリケーション初期構成の中でこのプロパティを構成することが出来ます。
上記の構成は、Gii に対して、デフォルトの場所である system.gii.generator および application.gii に加えて、 common.gii というエイリアスのディレクトリの下からもジェネレータを探すように指示するものです。
異なるサーチパスの下に同じ名前の二つのジェネレータを置くことも可能です。
その場合は、GiiModule::generatorPaths で先に指定されたパスの下にあるジェネレータが優先されます。
コードテンプレートをカスタマイズする
この方法が Gii を拡張するもっとも簡単でもっともよく使われる方法です。
例を使ってコードテンプレートをカスタマイズする方法を説明しましょう。
モデルジェネレータによって生成されるコードをカスタマイズしたいとします。
最初に、protected/gii/model/templates/compact というディレクトリを作成します。
ここで model は、デフォルトのモデルジェネレータを オーバーライド しようとしていることを意味します。
そして templates/compact は、compact という名前の新しいコードテンプレートセットを追加しようとしていることを意味します。
次に、前の節で見たように、アプリケーション構成を修正して、GiiModule::generatorPaths に application.gii を追加します。
ここでモデルのコードジェネレータのページを開いて下さい。
Code Template フィールドをクリックすると、新しく作ったテンプレートディレクトリ compact を含んだドロップダウンリストが表示される筈です。
ただし、このテンプレートを選んでコードを生成しようとすると、エラーが表示されます。
これは、この新しい compact テンプレートセットには、まだ一つも実際のコードテンプレートファイルを入れていないからです。
ファイル framework/gii/generators/model/templates/default/model.php を protected/gii/model/templates/compact にコピーします。
もう一度 compact テンプレートで生成を試みると、今度は成功します。
ただし、生成されるコードは default テンプレートセットで生成されるものと違いはありません。
今こそ実際にカスタマイズの仕事をすべき時です。
ファイル protected/gii/model/templates/compact/model.php を開いて編集します。
このファイルはビュースクリプトのように使われること、すなわち、PHP の式や文を含むことが出来るということを憶えておいて下さい。
テンプレートを修正して、生成されるコードの attributeLabels() メソッドが Yii::t() を使って属性のラベルを翻訳するようにしましょう。
その他のトピック: 自動的なコード生成 | The Definitive Guide to Yii | Yii PHP Framework
