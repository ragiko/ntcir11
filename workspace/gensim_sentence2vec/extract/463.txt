
文字列 (テキスト値) は高度に圧縮された形式でテーブル モデルに格納されます。この圧縮により、文字列の全体または一部を取得するときに予期しない結果を取得することがあります。
文字列のロケールと照合順序は最も近い親プロジェクトから階層的に継承されるため、文字列の言語が明示的に定義されていない場合、親のロケールと照合順序は、文字列の格納方法、および文字列が一意であるか親の照合順序の定義に従って同様の文字列と結合されるかに影響することがあります。 
このトピックでは、文字列を圧縮および格納するメカニズムについて説明し、照合順序と言語がテーブル モデルのテキスト式の結果に与える影響の例を示します。
テーブル モデルでは、すべてのデータがより効率よくメモリに収まるように高度に圧縮されます。
その結果、構文的に等価と見なされるすべての文字列が 1 回だけ格納されます。 文字列の最初のインスタンスが正規表現として使用され、等価な各文字列は最初の出現と同じ圧縮値にインデックス付けされます。 
重要な問題は、構文的に等価な文字列を構成するものは何かということです。
2 つの文字列は、同じ単語と見なされる場合に構文的に等価と見なされます。 たとえば、英語では、violin という単語を辞書で検索すると、辞書の編集方針に応じて Violin または violin というエントリが見つかりますが、一般にはどちらの単語も等価と見なされ、大文字と小文字の違いは無視されます。 テーブル モデルでは、2 つの文字列が構文的に等価であるかどうかを決定する要因は、編集方針やユーザー設定ではなく、列に割り当てられたロケールと照合順序です。 
したがって、大文字と小文字を同じものとして扱うか異なるものとして扱うかは、照合順序とロケールによって決まります。
ロケール内の単語について、特定の列内に最初に見つかったため単語および文字列の正規表現として使用される単語が非圧縮形式で格納されます。 他のすべての文字列は最初の出現に照らしてテストされ、等価テストで一致した場合は最初の出現の圧縮値に割り当てられます。 後で圧縮値が取得されるときに、それらの圧縮値は文字列の最初の出現の非圧縮値を使用して表現されます。 
このしくみを明確にするのには例が役立ちます。
次の「分類 - 英語」列は、植物と木の情報を含むテーブルから抽出しました。 各植物 (ここでは植物の名前を示しません) について、分類列に植物の一般カテゴリが示されます。 
テーブル モデルの文字列ストレージと照合順序
