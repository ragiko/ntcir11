
BrianによるBitTorrentのFAQとガイド
ようこそ! あなたがBitTorrent初心者ならこのサイトが一般的によくある質問の解答を得る助けとなるでしょう。
もし質問(または回答)があるなら、連絡ページを利用して私にメールを送って下さい。
注意: 私はWindowsユーザーですので特別な記載がない限り、このサイトの説明はWindowsに対して適用されるものと考えて下さい。ですが、できるだけ多くのLinux、Macの情報を含めるように努力しています。もし何か追加すべき項目がありましたら、是非連絡して下さい。
代替サイト
また、このFAQは異なる形式でbtfaq.comでも利用可能です。そのサイトはFAQを個別の項目に分割するFAQ-o-Maticスクリプトを使用していますが、このサイトでは殆ど全ての説明を一つのファイルで行っています。しかしながらこのサイトは私が運営しているため、そうではないbtfaq.comサイトは情報が少し遅れます。両方のサイトを維持するのが困難になってきたので、この2つのどちらかを止めるかどうか今でも迷っています。この件に関して意見がありましたら連絡して下さい。
目次
これらのリンクを利用してドキュメント内の特定の場所へジャンプすることができます。又はただ単に下にスクロールさせて表示したい所まで移動して下さい。
BitTorrentとは何ですか?
BitTorrentと他のファイル転送システムとの違いは何でしょうか?
何処でBitTorrentのプログラムをダウンロードできますか?
BitTorrent関連ユーティリティにはどんなものがありますか?
BitTorrentをインストールしましたが、何をすれば良いんですか? 実行するプログラムがありません!
TorrentリンクをクリックしてもBitTorrentが起動されずに小さなファイルしかダウンロードできません。どうしてでしょうか?
BitTorrentインストール後にダウンロードするように求められる、Mandrakeというのは何ですか?
BitTorrentのアンインストールはどうしたら良いのですか?
これらの単語の意味は何でしょうか? (seeding、uploading、share rating等)
サポートや、質問をする場所は何処ですか?
BitTorrentが使用するポートは何番でしょうか? また、ファイアーウォール/NAT上で動作するでしょうか?
BitTorrentでプロキシサーバーを使用できますか?
インターネットにアクセスするためにSOCKSを使用したい場合はどうすれば良いのでしょうか?
BitTorrentが何かをアップロードしています。どのようなファイルを共有していて、何を送信しているのですか?
ダウンロードをキャンセルすればどうなりますか? どのようにしてダウンロードを再開しますか?
ほんの一部しかダウンロードしていないにも関わらず、ダウンロードされたファイルが巨大なのは何故ですか?
ダウンロードの再開時に何故ハードディスクが忙しく動作するのでしょうか?
シード化とは何ですか? どのようにそれを行いますか? 何故ダウンロード完了後もクライアントを開いたままにしておくべきなのでしょうか?
表示されるエラーメッセージの意味は?
ブルースクリーンエラーや突然の再起動、フリーズ等が発生します。どうしたら良いのでしょうか?
ダウンロードが異常に速くなって、その後インターネット接続が切断されます。どうしてですか?
ダウンロード速度が出ません。どうすれば速くできますか?
どうやって接続している人のリストを見るのですか?
転送が完了する前にファイルをプレビューできますか?
拡張子.のファイルはどうやって開くのですか?
Windowsでのコマンドラインパラメータの変更方法は?
インターネットエクスプローラでTorrentリンクをクリックした時に、自動的にダウンロードGUIが開かれるより、ファイルの保存ダイアログを開くようにするにはどうすれば良いのですか?
BitTorrentのコマンドラインパラメータについて教えて下さい。
どのようにして新しくtorrentを作成するのですか? (他の人への共有方法)
どうやってトラッカーを起動するのですか?
.torrentファイル用のウェブサーバーの構成法は?
クライアントのコピーを大量に起動させずに一度に多くのファイルをダウンロード/シード化する方法はありますか?
有用なBitTorrentリソース
BitTorrentとは何ですか?
BitTorrentとはファイル転送用に設計されたプロトコルのことです。ユーザー間で互いに直接に接続して、実際にピア・ツー・ピアでファイルの部品を送信・受信します。しかしながら、ピア同士の接続を調整するためにトラッカー(Tracker)と呼ばれる中央サーバーが必要になります。トラッカーは接続を管理するだけで、ファイルの中身に関する情報については関知しません。したがってあまり帯域幅を使用しないために、帯域があまりないトラッカーでも多数のユーザーを収容することができます。BitTorrentの思想の基本原理は、ユーザーがダウンロード(入力転送)と同時にアップロード(出力転送)も行わなければならないということです。この事からも判るとおり、BitTorrentネットワークにおける帯域幅はできるだけ効率的に利用されます。BitTorrentは他のファイル転送プロトコルとは対照的に、より人々の関心を集めているファイル程、優先的に動作するように設計されています。
このプロセスを説明する喩えとして、ひとつのテーブルに座っているグループを想像して下さい。テーブル上の個人のそれぞれがそのテーブル上の他の人々と会話できます。これらの人々はそれぞれ一冊の本の完全なコピーを得ようとしています。Aはページ1〜10、23、42〜50、75を持っています。C、D、Eが持っていないページをAが所有しているため、Aは彼らが持っていないページのコピーをそれぞれに与えるように調整します。そしてBはページ11〜22、31〜37、63〜70を持っていることを全員に伝えます。A、D、EはBが持っているページのいくつかが欲しいことをBに伝え、Bは所有しているページのコピーを希望者に与えます。この手順はテーブル上にいる人々全てが、所有しているページ(したがって所有していないページも発表していることになります)を発表するまで継続されます。テーブルにいる人のそれぞれが、自分の持っている本の部品を他の人全てが所有するまで交換する事になるのです。また、テーブルには彼らとは違う種類の人もいます。この人を「S」と呼ぶことにします。Sはこの本の完全なコピーを持っているため、他の人が彼に何も渡す必要はありません。
彼はグループの誰も持っていないページに対しての問い合わせに応じます。グループの人々が最初にテーブルに付いた時に、彼らの皆が最初のページのセットを得るために、Sと話さなければなりません。だからといってテーブル上の人々は彼から全て同じページをもらう程馬鹿ではありません。程なくして彼らは皆、本全体の部品を持っていなかったとしても、本の大部分をそれぞれ所有することになります。この方法を利用すれば、Sがこの本に興味を持っている人全てに完全なコピーを与える必要無しで、多くの人々に対してその本を共有することができます。この人・・・ここで言うところのS・・・は、BitTorrent用語ではシード(Seed)と呼ばれます。後半の項では色々な用語の解説があります。
BitTorrentと他のファイル転送システムとの違いは何でしょうか?
インターネット上で行われる最も一般的なファイルの転送方式はクライアント-サーバー型です。中央サーバーは要求があればそれぞれのクライアントに対してファイル全体を送信します…これの動作ついてはHTTPでもFTPでも同じです。クライアントはサーバーとだけしか通信せず、クライアント間での通信は決して行われません。この方式の利点は設定が簡単で、サーバーがファイルをサーブする作業だけに専念していて、インターネットに常時接続されていることから、通常はいつでも利用可能であることです。しかしながらこの方式には巨大なファイルやとても一般的なファイル、またはその両方に関する重大な問題があります。各クライアントに対してファイル全体を送信しなければならないために、そのようなファイルを配布するために大量の帯域幅と、大量のサーバーリソースが必要となります。例えばあなたが新しいゲームの最新のデモや、新しいLinuxディストリビューションのCDイメージをダウンロードしようとすれば、殆ど全てのサーバーが"too many users(人大杉)"という報告をするか、いつダウンロードできるかも判らない程長い時間キューに並ばなければならない羽目に陥ることがあります。ミラーサーバーの概念は、複数のサーバーを横切って負荷を分散させることにより、この欠点を部分的に解消します。しかし、ミラーのネットワークを効率的に設定するためには多くの同調と努力が必要になり、通常は最も忙しいサイトだけでしか可能ではありません。
これとは別のファイル転送方式が最近流行ってきました。それがKazaa、eDonkey、Gnutella、Direct Connect等のシステムが採用するピア・ツー・ピアネットワークです。これらのネットワークでは、ユーザー同士が1対1で直接接続することによってファイルを交換します。この方式の利点はサーバーにアクセスすることなくファイルを共有することができるということです。そしてこの理由のために、ファイルの中身に関する責任能力が殆どありません。したがってこれらのネットワークは音楽・映画・海賊版のソフトウェア等のような不法ファイルのために使用されることが一般的であるという強い傾向があります。通常、ダウンローダーは単一ソースからファイルを受け取りますが、いくつかのクライアントの最新バージョンでは速い速度を得るために、複数のソースからひとつのファイル用にダウンロードすることができるようになっています。一般的なファイルは多くのピアによって共有されるために、そのファイルをダウンロードできる機会が増えるので、上で述べたような一般的なファイルについての問題は多少緩和されます。あまり世に知られていないファイルのダウンロード速度は低い傾向がありますが、入手しやすいファイルのダウンロード速度は高い傾向があります。これらのシステムに関連する別の共通な問題があります。その問題とは検索問い合わせをピアに渡すために発生する重大なプロトコルオーバーヘッドです。このためにひとつが到達できるピアの数は多くの場合、制限されたものになります。いくつかの新しいクライアントがこの機能を提供していますが、多くの場合は部分ダウンロードファイルを他のピアのために利用することはできません。ファイルの利用率は一般的にユーザーの好意の度合いに依存しているため、これらのネットワークのいくつかは特別な規則を実施したり、送信/受信比率を制限していたりします。
Usenetバイナリニュースグループの使用はファイルを配布する更に別の方法です。これは他の方式とは本質的には別のものになります。Usenet上で転送されるファイルは殆どが小さいものに限定されます。バイナリニュースサーバーの一般的な保存期間は24時間以下で、投稿されたファイルは一週間程の間利用可能になります。Usenet型ではニュースサーバーから別のニュースサーバーまで、ピアの巨大な網を通してメッセージが渡され、最終的にはエンドユーザーに向けてあらゆる方向に発信されます。この仕組みは比較的効率が良いシステムです。多くの場合エンドユーザーは彼ら自身のISPによって提供されたサーバーへ接続して更に帯域幅を節約します。また、Usenetはより匿名性が高いファイル共有形態のひとつであり、当然のことながらこれもよく不法ファイルのために使用されます。NNTPの性質上、ファイルの人気とその利用率は殆ど無関係です。したがってUsenetからのダウンロードはその内容にかかわらずかなり高速になる傾向があります。この方式の欠点は規則と手続きが煩雑なのと、ユーザーにある程度のスキルと努力が必要になる点です。大きいファイルは小さな投稿に収まるように大量に分割するのが当たり前ですので、完全なファイルを得るには忍耐が必要になる点です。最終的にはバイナリグループ内にある非常に大量のメッセージのためにUsenetへのアクセス権を購入しなければならない羽目になります。
私の考えでは、BitTorrentはUsenetと非常によく似ています。その仕組みは多くの人が興味を持つであろう新しいファイルに適したものとなっています。よく知られていなかったり、いファイルはあまり利用できない傾向があります。ソフトウェアが成熟するに従って、torrentをシードし続けるよりも良い方法が現れるかもしれませんが、現在のクライアントはかなりリソースを集約したものとなっていて、これはファイルを多数共有することを面倒なものにしています。また、BitTorrentは他の方式と比べて特に高い需要にあるファイルが流通します。
何処でBitTorrentのプログラムをダウンロードできますか?
KaZaAのようなクローズドソースのP2Pアプリケーションと違ってBitTorrentの実装はオープンソースですので、色々なクライアントを選択することができます。これはもしプログラマが変更を加えたいと感じる部分があるなら、プログラムのソースコードを得て自由にそれを変更できることを意味します。私が知っているだけでも様々なクライアントが存在します:
Microsoft Windows
The Shad0w's experimental client - 推奨! このクライアントには公式バージョンのコードベースと同様に、試験バージョンの全ての改良が組み込まれます。更に多数のバグフィックスや最新の開発バージョンのCVSソースからの改良、アプリケーションの設定を保存しておくためのユーザー設定機能等が追加されています。私はこのバージョンを強くお勧めします! (ミラー 1) (ミラー 2)
burst! - 推奨! wxPython GUIをDelphiで作成したものに置き換えているため、このクライアントは他のクライアントに比べて消費するメモリ領域が少ないという特徴があります。このGUIはただひとつのウィンドウで複数の転送を制御することができ、それに加えて内蔵TorrentSpyとでもいうべき機能も実装されています。Shad0w'sクライアントと同じPythonバックエンドを使用しているため、最新の開発バージョンの改良が全て含まれています。
burst plus! - burstに基づいて開発されたクライアントで、スペイン語のサポートや独自の機能が追加されています。
SimpleBT - これもburstコードベースから派生したクライアントで、中国語をサポートしています。
ABC ("Another BitTorrent Client") - これは試験バージョンにある最新の変更を取り込んだ、比較的新しいクライアントです。また単一ウィンドウによる複数ダウンロードの管理、キュー、自動シード設定等の機能が追加されています。詳細: Sourceforgeページ
Official client - BitTorrentの設計者であるBram Cohenによる最新サポートバージョンで、BitTorrentの"公式"クライアントです。これには必要最小限の機能しかなく、リリースは試験バージョンよりも遙かに保守的になっています。アップロード率の制限のような他のクライアントでは一般的な機能をまったく必要とせず、安定性が欲しい場合にこれを使用して下さい。参照: (CVS表示)、Sourceforgeページ
Eike Frost's Experimental client - これは公式バージョンを元に開発され、アップロード比率を制御したり、ピアやシード数に関する統計情報を表示したりできるパッチが追加されています。新しい"-2"が付いた改訂版では、接続ピアについて追加の詳細情報の表示機能がサポートされ、いくつかの不具合とバグ修正が行われています。
Azureus - 転送に関する沢山の視覚情報や統計情報を表示するためのGUIを搭載した良質のJavaクライアントです。このクライアントを実行するには1.4 JREがインストールされている必要があります。JREはこのリンクから入手することができます。参照: スクリーンショット
Personal Torrent Collector (PTC) - これはPython BitTorrentクライアントの代替GUIインターフェースです。このクライアントはBitTorrent転送グループの総合的な帯域幅の制御や、Torrentファイル構成用のRSSシンジケートのような多くの興味深い機能をサポートしています。参照: Sourceforgeページ
Shareaza - このプログラムの最新のパブリックベータバージョンでは、eDonkey2kやGnutellaプロトコルに加えて、現在ではBitTorrentがサポートされました。しかしながらBitTorrentサポートにはまだバグを持っている可能性があるかもしれません。また、いくつかの機能(ファイルのシード化等)はBitTorrent専用クライアントほど簡単ではないかもしれません。
NovaTorrent - このクライアントについてのレビューを募集します。:-) 私は個人的にまだこのクライアントを評価していません。
BitTorrent++ - これは公式クライアントの代替となるクライアントです。単一GUIからの複数ダウンロード制御のような拡張機能がサポートされます。何人かの人(私も含みます)はこのプログラムで重大なバグを経験しているため、このクライアントは不安定であると考えています。同じ経験をしたくないなら他のクライアントを使用して下さい。また、開発は放棄されているようで長い間どのようなバグフィックスも行われていません。したがってこれらのバグがBitTorrentの集団の性能に悪影響を与える可能性があるので、どうかこのクライアントを使用しないで下さい。
Mac OS X
公式クライアント v3.2.2a - これはOS X 10.2(Jaguar)用クライアントの最新ビルドです。これにはアップロード比率の制御や、最小/最大ポート設定といった追加修正が組み込まれています。また、いくつかの統計情報(ピア総数、アップロード合計/ダウンロード合計)の表示やRendezvouのサポート(ファイアーウォールの内側でピアを探し、ローカルドメイン内ではトラッカー無しで操作ができる機能)がこれに含まれます。注意: このバージョンでtorrentを開いた時、Download failedというメッセージが表示されるなら、以下の修正を行ってみて下さい。(更に注意: v3.2.2a以降のバージョンでこの不具合が修正されるのは明らかです)
インストールしている全てのBitTorrentのバージョンとそのコピーをゴミ箱へ移動させます。
ゴミ箱を空にします。
再度 BitTorrent_OSX_3.2.2a.dmg ファイルを開き、BitTorrentプログラムを直接アプリケーションフォルダにコピーして下さい。
公式クライアント v3.1 - もし3.2.2の使用が困難なら、この旧バージョンを試して下さい。
比率制限パッチ済みv3.1クライアント - このバージョンに関する追加情報はありません。
Sarwat Khan's OS X client - これはOS X用にビルドされた代替クライアントです。参照: スクリーンショット
さらにソースコードから直接、色々な種類のPython/wxPythonベースのクライアントを実行することができますが、これにはいくつかの下準備が必要になります。以下にあなたが行うべき手順を記載します。注意: 私はMacユーザーではないためこの動作を保証することができません。もし間違えているところがありましたら私にご連絡下さい。
Pythonをインストールします。OSが10.2ならこれ(Python 2.3a3)をダウンロードして下さい(参照: ホームページ)。10.1なら、パッケージ済みのバージョンがここにあります(ホームページの解説をお読み下さい)。このアーカイブにはstuffitを使用することはできません。PythonとMacに関する詳細はこのリンクを参照して下さい。
wxPythonのインストールを行います。10.2とPython 2.3用にはこのパッケージ(2.4.0.7)を使用して下さい。Python 2.3がないなら、旧バージョン(2.4.0.2)を使用しなければならないかもしれません。Sourceforgeのこのページではいくつかの旧バージョンと一緒に最新バージョンが公開されています。
BitTorrentクライアント用のソースコードをインストールします。上にあるWindowsクライアント用のリンク先にはソースコード用のリンクも存在します。
GUIクライアントを開始するには "python btdownloadgui.py --responsefile file.torrent" を実行します。file.torrentはあなたが既にダウンロードしたtorrentファイルがある場所です。また下にあるBitTorrentコマンドラインツールについての項も参照して下さい。コマンドライン版のPythonを正しく動作させるためにはパスが必要になります。/usr/local/binをあなたのパスに追加するための指示についてはこのページを参照して下さい。
Max OS 9
Max OS 9用の公式サポートはありません。更にwxPythonはMax OS 9用に移植される予定がありません。これはMax OS 9ではGUI版を実行できないことを意味します。しかしながら望みはあります: 少し下準備すればBitTorrentを使用できるようになります。
MacPythonをダウンロード・インストールします。PythonとMacについての情報はこのページを参照して下さい。
クライアントのソースコードをダウンロードして解凍します。
ソースコードからPythonInterpreterへファイル btdownloadheadless.py をOption-ドラッグします。次にUnixのようなコマンドラインインタープリタ上にあるSetをクリックして、"--url http://server/file.torrent"を入力して下さい。ただし、URLの部分には実際の.torrentファイルへのURLを代入して下さい。これはtorrentを提供するウェブページの"ダウンロード"リンクと同じものです。それからGoを選択すればファイルのダウンロードが開始されます。"ImportError: cannot import name getpid" というエラーが表示される場合は以下の手続きを行って下さい:
ソースコードからdownload.py(BitTorrentという名前のサブフォルダ内にあります)を見つけ、プレーンテキストエディタでそれを開きます。
23行目辺りで以下の文字列を探して下さい:
from os import getpid, path, makedirs
そしてgetpidという単語を取り除きます。この結果として以下のようになります:
from os import path, makedirs
177行目付近で以下の行を探します。
myid = (chr(0) * 12) + sha(repr(time()) + ' ' + str(getpid())).digest()[-8:]
そして次のように変更します:
myid = (chr(0) * 12) + sha(repr(time())).digest()[-8:]
ファイルを保存します。それからエラーメッセージが表示されること無しで実行できることを確認します。
Linux/Unix
純粋なPython/wxPythonで作成されたクライアント(例えば公式BitTorrentクライアントや、Eike Frost's experimental、Shad0w's experimental)の殆どは問題なく*BSD/Linuxで実行できます。これらのクライアントのソースコードのtarボールはホームページからダウンロードできます(上のリンクを参照して下さい)。また、Javaのような他のクロスプラットフォームの言語で書かれたクライアント(例: Azureus)も実行することができます。
*BSD/Linux上でBTクライアントを実行させるための最大の問題は、必要なライブラリがインストールされているかどうかということにつきるでしょう。実行には最低でもPython 2.2以降のバージョンを必要とします。もし'-gui'バージョンのクライアントを使用したいならwxWindowsも併せて必要になります。このwxWindowsにはwxPythonと呼ばれる独自のPythonバインディングを持っています。これらが全てあなたのシステム上でパッケージとして利用可能でなければなりません。あなたの最初のステップは、ディストリビューションのパッケージシステムを参照して、これらの必須ライブラリを手に入れることです。
Debianシステムではbittorrentと呼ばれるパッケージがあり、これはpython 2.2パッケージを要求します。もしGUIバージョンのクライアントを使用する計画があるなら、libwxgtk2.4-python と mime-support という2つのパッケージをインストールする必要があります。
MandrakeのCookerを使用しているなら、ここにあるRPMを試すことができます。
以下にUnix/Linuxシステム上にインストールするための方法をいくつか記載します。
Python 2.2以降のバージョンをインストールすることが望ましいです。現在インストールされているPythonのバージョンを見るには、ターミナル上で"python -V"と入力して下さい。また、複数のバージョンのPythonを持つこともできるため、pythonが1.xと表示されていたとしても /usr/bin を調べてpython2.2といったコマンドがないかどうか確認して下さい。もしあなたのディストリビューションがパッケージシステムを使用しているなら、手動インストールする前にあらかじめパッケージ済みのものがないか検索して下さい。こことここでPython RPMをダウンロードできます
GUIバージョンを使用したいならwxPythonをインストールします。これにはGLib と GTK+ ライブラリが必要になります。もしGNOMEがインストールされているなら、この2つのライブラリは恐らく既にインストールされています。(GTK+が必要なら、ここからダウンロードするか、あなたのディストリビューションのパッケージマネージャを検索して下さい)。インストール済みのPythonのバージョンに対応したwxPythonを使用したいと思うかもしれません。このような場合は、RedHatやMandrake等のRPMシステムではPythonのバージョン 2.1、バージョン 2.2、バージョン 2.3に対応したwxPython RPMを選択することができます。更に多くのRPMがSourceforgeで利用可能であり、wxPythonダウンロードページを参照することもできます。上でリンクされているRPMはPythonが/usr、Pythonライブラリが/usr/lib/python2.x/にインストールされていることを想定しているのに注意して下さい。もし他のパスにインストールされているなら、インストール時にその情報を指定してやる必要があります。 
最後に、BTクライアント用のソースtarボールを好きなディレクトリにインストールします。クライアントとウェブブラウザを統合するなら、ファイルタイプ"application/x-bittorrent"をBitTorrentクライアントと関連づける必要があります。これには/etc/mailcap ファイル内に以下のような行を加える必要があります:
application/x-bittorrent; /usr/local/bin/btdownloadgui.py --responsefile %s; test=test -n "$DISPLAY"
上ではあなたがソースtarボールをインストールした場所のパスを使用することに注意して下さい。wxPythonを持っていなかったり、キャラクタモードのクライアントを使用したいなら、btdownloadgui.pyをbtdownloadcurses.pyかbtdownloadheadless.pyに置き換えて下さい。また--responsefile引数が指定されければ、INSTALL.unix.txtファイルにエラーが記述されます。
MIME-Typeとコマンドを関連づける方法が異なるウェブブラウザも存在するため、設定ファイルや初期化ファイルで詳細を調べた方が良いかもしれません。
Javaクライアント(プラットフォームから独立)
Azureus - 数多くの機能拡張があるBitTorrent完全互換のJavaクライアントです。
snark 0.4 - Snarkはgcj…GNU Compiler for Javaを使用したBitTorrentプロトコルの実装です。Snarkには通常のクライアント機能に加えて、.torrentファイルの作成機能や小型HTTPdサーバー機能、そしてトラッカー機能の全てが統合されています。Snarkではトラッカーをインストールしたり、ウェブサーバーを見つけたり、.torrentファイルを投稿する手間を省いて、単一のコマンドによってファイルを共有することができます。コンパイルにはgcj 3.3以降のバージョンが必要になります。自分でコンパイルする替わりに、ここであらかじめコンパイルされたバイトコード版を手に入れることもできます。詳細についてはホームページをご覧下さい。
Effusion 0.3 - IRCを統合した試験的Javaクライアントです。詳細と使い方はホームページを参照して下さい。
JTorrent 0.1 - これはPythonクライアント/トラッカー v3.0.2のソースコードを1行ずつJavaのものに移植したものです。現在はWindowsとUnix上でインストール・実行でき、JRE v1.4移行のバージョンが必要となります。インストールするにはインストーラをダウンロードして、READMEファイルを参照して下さい。また、 project status READMEもご覧下さい。これはまだαレベルのコードであり、バグが存在することに注意して下さい。
BitTorrent関連ユーティリティにはどんなものがありますか?
TorrentSpy - 推奨! このMS Windows用ツールは、指定したtorrentのトラッカーへの問い合わせや、メタデータ情報の表示、ファイルハッシュの確認等を行うことができます。また新機能として、アップロードするtorrentファイルを作成するための"create"タブが追加されました。
maketorrent -burst!クライアントの作者による、torrentファイル作成用のユーティリティ。MakeTorrentのバージョン 1.xはPython製のプログラム'completedir'に色々な拡張機能を搭載した修正バージョンでしたが、バージョン 2.xからはDelphiで完全に書き直されました。このツールを強くお勧めします!!
completedir 1.0.1 -   新しく.torrentファイルを作成するためのユーティリティで、公式BitTorrentクライアントパッケージの一部です。これはWindowsインストーラとしてパッケージされています。他のプラットフォームで使用したい場合はソースコードを入手して下さい。
BNBT - これはBitTorrentトラッカーのC++による実装です。これはGCCを利用して殆どのUnix上でコンパイルでき、同じくMS Windows上でもMSVCを利用してコンパイルできます(バイナリも含まれます)。また、標準Pythonトラッカーの機能の全てを含みつつも、多くの機能拡張が追加されています: ユーザーアカウント、ウェブインターフェースの改良、統計情報等。使用するのが簡単な、BNBTがバンドル済みのTrackPakも参照して下さい。
Java BitTorrent Tools - メタファイルビューア/エディタ、利用率チェッカ、基本トラッカー。
BTChange 0.94a -既存.torrentファイル内のトラッカー情報を変更します。トラッカーが変更されている場合はこれを使用して下さい。そうすればファイルを再生成する必要はなくなります。参照: Sourceforgeページ。
PHPBTTracker - フリー(GPL)のMySQLをバックエンドにしたPHPによるトラッカーの実装で、統計情報を収集してレポートする機能を搭載しています。参照: サンプル出力
DumpTorrentCGI - この便利なウェブページを使用すれば.torrentファイルの内容を解析・出力することができます(ローカルシステム、リンクURLのどちらからでも使用できます)。これを利用することでtorrentのハッシュIDやどのトラッカーがホストしているかを簡単に知ることができます。
trackerlyze.pl 1.11 - トラッカーのログファイルを解析して、使用されている帯域幅やピア/シードの数の情報、グラフを作成するフリー(GPL)のPerlスクリプトです。参照: ホームページ
libbt - BitTorrentプロトコルのCによるライブラリの実装です。このプロジェクトはまだ開発中であり、現在の時点ではエンドユーザーの使用に適しません。
BitTorrentをインストールしましたが、何をすれば良いんですか? 実行するプログラムがありません!
BitTorrentは他のピア・ツー・ピアアプリケーション(WinMXやKaZaA、Gnutella等)と違って、自分自身の"ネットワーク"を持っていません。BitTorrentは他のP2Pアプリケーションとは別の道を歩んでいて、Web上にその存在価値を見いだしています。これの意味するところは、利用可能なファイルの検索/リスト化の全てがWeb上で行われているということです。ダウンロードしたいファイルを見つけたなら、そのTorrentリンクをクリックすればBitTorrentクライアントプログラムが自動的に起動されます。次にダウンロードの保存先を指定すればダウンロードが開始されます。あなたが初心者なら、ウェブ上でファイルを探す起点となる場所へのリンクがありますので参照して下さい。
TorrentリンクをクリックしてもBitTorrentが起動されずに小さなファイルしかダウンロードできません。どうしてでしょうか?
ウェブブラウザを一旦終了させて、再起動してみて下さい。BitTorrentインストール時に、新しいMIME-Type (application/x-bittorrent)が登録されます。この変更は次にウェブブラウザが起動されるまで適用されません。
BitTorrentインストール後にダウンロードするように求められる、Mandrakeというのは何ですか?
これをダウンロードする必要はまったくありません。Mandrakeとは完全なLinuxディストリビューションで、OSの1つです。BitTorrentは大勢のダウンローダーが群がるような、最新リリースの大きなファイルを配布するために設計されています。これはそのような配布物の例のひとつです。言い換えれば、MandrakeはBitTorrentとはまったく関係がありません。多くの人が興味を持ちそうな物の例として考えて下さい。
BitTorrentのアンインストールはどうしたら良いのですか?
MS Windows
コントロールパネルのプログラムの追加と削除を開いて下さい。リスト内にBitTorrentのエントリが存在するはずです。エントリが存在しないなら、インストールで不具合があったことが疑われます。この場合は最新版をインストールしてその後すぐにアンインストールして下さい。
もしあなたがWindowsに精通しているなら、ディレクトリ C:\Program Files\BitTorrent\ (プログラムをインストールした実際の位置で置き換えて下さい) を削除することでBitTorrentを手動でアンインストールすることができます。そして以下のレジストリキーを削除して下さい:
HKEY_CLASSES_ROOT\.torrent
HKEY_CLASSES_ROOT\MIME\Database\Content Type\application/x-bittorrent
HKEY_CLASSES_ROOT\bittorrent
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall\BitTorrent
Mac OS X
単にアプリケーションをゴミ箱にドラッグするだけです。設定ファイルも削除したいなら、同じようにして ~/Library/Preferences/BitTorrent.plist もゴミ箱に入れて下さい。
これらの単語の意味は何でしょうか? (seeding、uploading、share rating等)
以下にBitTorrent用語とその意味の簡単なリストがあります。
torrent (トレント)
通常これはウェブサーバーから受け取る小さなメタデータ(末尾に拡張子.torrentが付きます)のことを指します。ここで言うメタデータとは、あなたがダウンロードしたいデータに関する情報を含むファイルのことであり、実際のデータそれ自身ではありません。これはウェブサイト上でダウンロードリンクをクリックした時にあなたのコンピュータに送信されてくるファイルです。torrentファイルはあなたのローカルシステムに保存することもでき、BitTorrentでダウンロードするにはそれをクリックします。これは後でtorrentを再度開く時に同じリンクを探す手間を省くことができるので便利です。
またtorrentという用語はBitTorrentで利用可能なファイルに関連する全てを指して使用されることもあります。例えば「俺そのtorrentをダウンロードしたよ」とか「そのサーバーには良いtorrentがいっぱいあるよ」という使われ方をします。後者は『そのサーバー上にはBitTorrentを経由して利用可能な沢山の良質なファイルがある』ということを意味しています。(訳注: これは実際非常に紛らわしいので、便宜上このページではメタデータという意味の.torrentファイルのことを英文字列のtorrentとし、得られるファイル群のことを日本語でトレントと呼ぶことにします)
peer (ピア)
ピアとはインターネット上に存在する他のコンピュータのことで、あなたが接続してデータを転送する/される相手です。通常、ピアが完全なファイルを所有していることはありません。完全なデータを持っているピアは特別にseedと呼ばれます。また、ダウンロードを終えてもなお、クライアントをそのままにしておいてseedの役割を継続している寛大な人々と区別するために、ピアをreeches(リッチ…蛭または吸血鬼の意)と呼ぶ人もいます。
seed (シード, 種)
トレントの完全なコピーを持っているコンピュータのこと。BitTorrentは一旦ダウンロードが完了すると、Finishボタンをクリックするまではウィンドウが開いたままになって他のピアにアップロードし続けます。この行為はseedやseedingとして知られています。また完全なファイルを持ったままBitTorrentクライアントを開始することもできます。この場合BTは始めにファイルをチェックして、その後ファイルの部品を他の人にアップロードしていくことになります。一般的にダウンロードを完了した後でも、他の人を助けるためにファイルをシードし続けることは良いマナーであると考えられています。また、新しいトレントがトラッカーで公開されれば、他の人が利用可能になるように、誰かがseedにならなければなりません。トラッカーは実際のファイルの内容については何も知らないということを覚えておいて下さい。そのため、トラッカーにtorrentファイルをアップロードしたならファイルをシードし続けるということが重要になります。
reseed (再シード)
与えられたトレントにシードが一人もいなければ(そして分割されたコピーを持つピアが十分でなければ)、この集団の中の誰も足りない部品を持っていないために、結局全てのピアのダウンロードが未完了のまま止まってしまいます。この状態に陥ると、完全なファイルを持っている誰か(seed)がこれらの足りない部品を転送するためにこの集団に接続しなければなりません。これを再シード(reseed)と呼びます。ファイルを再シードしてくれた親切な人へのお返しに、再シード要求をした人がダウンロード完了後に、一定の期間シードにならなければならない(トレントの寿命を長くする)という暗黙の了解があります。
swarm (集団, スワーム)
特定のファイルのために接続されたコンピュータの集まりのことをいいます。例えばBitTorrentクライアントを開始して、10ピアと3シードが接続済みと表示されているなら、集団(swarm)はあなたとこれらの13人から構成されることになります。
tracker (トラッカー)
BitTorrentクライアントの動作を調整するために起動されているインターネット上のサーバー。torrentを開いた時、あなたのマシンはトラッカーに連絡して、コンタクトをとるピアのリストを問い合わせます。転送中、あなたのマシンはトラッカーによって定期的に監視され、どの位ダウンロード/アップロードしているか、完了までの残り時間、あなたの状態(starting、finished download、stopping)等がトラッカーに報告されます。もしトラッカーが落ちている時にtorrentを開いた場合は接続することができないでしょう。トレント中(例: 既にいくつかのピアと連絡できていて、ピアとの通信が開始されてる時や、ダウンロードが既に始まっている場合)にトラッカーが落ちた場合は、その時接続しているピアとの転送は継続できますが、新しいピアとの連絡は出来なくなります。多くの場合トラッカーエラーは一時的なものですから、接続試行させるためにクライアントを起動したままにしておいた方が良いでしょう。
downloading (ダウンロード中)
他のコンピュータ『から』データを受信中です。
uploading (アップロード中)
別のコンピュータ『へ』データを送信中です。
share rating (共有率)
もしあなたが統計パッチが適用されている試験クライアントを使用しているなら、GUIパネル上で共有率(share rating)の表示を見ることができます。これはただ単にアップロード量をダウンロード量で割った比率です。使用されるアップロード/ダウンロードの量は現在のセッションのものだけで、ファイルの履歴全体の量ではありません。もし共有率が1.0なら、あなたがダウンロードしたのと同じだけアップロードしたことを表します。この数が大きければ大きい程あなたがネットワークに貢献したことになります。共有率が"oo"と表示されているなら、これは無限大(∞)を意味します。これはあなたが完了ファイルをBTクライアントで開いた場合(例: ファイルをシードする時)に表示されます。この場合あなたは完全なファイルを持っているのでダウンロードするものは何もありません。このためアップロードするだけになりますので、便宜上無限大という表示になります。注意: 共有率はただの参考目的のためだけに表示される数値です。これはクライアントの動作等にまったく影響することはありません。もちろん他の人への好意から、この比率をできるだけ高いものにしようと努力することが奨励されるのは言うまでもありません。
distributed copies (分散コピー)
いくつかのクライアントのバージョンでは、"Connected to n seeds; also seeing n.nnn distributed copies."といったテキストが表示されることがあります。シードとは完全なファイルを持っているコンピュータのことです。しかしながら、集団(swarm)の一人一人が持っているコピーの断片をまとめれば一つの完全なデータとなることもあります。distributed copies (分散コピー)とはこれを表した用語です。再び『テーブルの人々』の喩えで話を進めます。ここでは本の総ページ数を10ページと考えます。Aは1〜5ページまでを所有し、Bは6〜10ページまでを所有しています。たとえAとBのそれぞれが全てのページを持っていなかったとしても、AとBをひとつの集団とすれば、その集団は完全な1冊の本を持っていると言うことができるでしょう。この考え方はいわばBitTorrentの禅とでも言うべきもので、あまり深く考えても仕方がありません。
choked (チョーク)
これはBitTorrentプロトコルの仕様書で使用されている用語です。これはアップローダー…データを他のクライアントへ送信するスレッド…の状態を表します。接続がチョークされているなら、現時点ではそのリンク先に何も送信するつもりがないということを意味します。いくつかの理由により、他のクライアントに対してチョークというシグナルが送信されます。デフォルトではクライアントのアップロード数は--max_uploadsで有効になる最大同時アップロード数を超えないように維持され、それから洩れた残りはチョークとして印が付けられます。その後チョーク対象となったクライアントへシグナルが送信されます(--max_uploadsのデフォルト値は4で、これは試験クライアントで調整できる値と同じものです)。これがチョークの理由としては最も一般的なものです。また他の理由によって接続がチョークされることがあります。例えばシードからダウンロードしているピアは、シードがそのピアからデータをダウンロードする必要がないため、シードへの出力接続をチョークとしてマークします。各接続は双方向で対称なので、それぞれのTxエンドポイントひとつあたり1つずつ、つまり各接続に2つのチョークフラグ(合計4つ)があることに注意して下さい。
interested (インタレスト, 興味)
プロトコル仕様書で使用されている用語。これはチョークフラグの結果として生じるもので、interestedは接続に関するダウンローダーの状態を表します。ダウンローダーはリンク先の他のコンピュータが欲しい部品を持っている場合にinterestedとしてマークされ、さもなければnot interestedとマークされます。
snubbed (スナッブ, 冷遇)
クライアントが一定の期間(デフォルト: 60秒)何も受信しなかった場合は、接続相手先のピアがしばらく何も送信しないことを選択しているため、その接続をスナッブとしてマークします。アップローダーがその接続をチョークとしてマークする原因についてはチョークの説明を参照して下さい。この変数に絶えず注意を払う理由は、ダウンロード速度の改善のためです。珠にクライアントが多くのピアに接続しすぎて、その全てでチョーク状態になっていることがあります。クライアントはこの状態を防ぐ目的で、チョークフラグを使用します。このフラグを監視して、部品を交換しようとしているピアがしばらく何も送信していない時(スナッブ状態)に、そのピアから部品を得るために楽観的なチョーク状態のまま放置しておく代わりに、そのピアへの送信用にアップロードスロットの1つを予約して、遊ばせている帯域を有効に活用します。(参照)
optimistic unchoking (楽観的非チョーク)
クライアントは定期的にアップローダーのリストを刷新して、以前にチョーク状態になった接続とは異なる接続に対して転送を試みたり、使用している接続をチョークしたりします。試験クライアントのうちの1つでは、「Advanced(高度)」パネルを監視することにより、10〜20秒ごとにこの操作が行われているのを見ることができます。
サポートや、質問をする場所は何処ですか?
メーリングリストやウェブサイト、フォーラム等についての情報は、このページのリンクとリソースの項を参照して下さい。
BitTorrentが使用するポートは何番でしょうか? また、ファイアーウォール/NAT上で動作するでしょうか?
概要: NATを使用していて速度を速くしたいならば、ポートを開く必要があります。これは恐らくBitTorrentを使用する人々があまり行っていない設定です。これを行う必要があるなら、この項目の全てを熟読して下さい。
3.2より前のバージョンでは、BitTorrentはデフォルトでは6881-6889の範囲のポートを使用していました。3.2以降から現在のバージョンでは、その範囲が6881-6999までの範囲に拡張されました(これらは全てTCPポートです。BitTorrentはUDPポートを使用しません)。クライアントはこの範囲の一番下のポートから順に使用していきます。ポートの割り当てができるまでより高いポートを順番に試していきます。これはあなたが接続を開く最初のクライアントは6881番に割り当てられ、その次は6882番になるということを意味します。したがって既に接続しているBitTorrentクライアントと同じ数だけ実際に開かれている必要があります。殆どの場合は6881〜6889までを開けば十分です。
BitTorrentが使用するポート範囲は独自に設定することができます。コマンドラインパラメータの項、得に --minport と--maxport パラメータの部分を重点的に参照して下さい。
BitTorrentが接続しなければならないトラッカーは通常はポート6969番を使用しているため、クライアントはこのポートの出力方向へのアクセスも確保しておかなければなりません。しかし、これとは別のポート番号を使用しているトラッカーも存在します。
BitTorrentは通常、出力方向の接続だけで機能するため、NAT(ネットワークアドレス変換)環境下でも正常に動作します。一般的には、そのような環境では複数のコンピュータが1つだけの公開IPアドレスを共有しています(例: ホームネットワーク上でケーブルまたはxDSL接続を共有しているコンピュータ)。あなたがNATを使用しているかどうかわからない場合は、あなたがNATの陰に隠れているかを確認してくれるこのリンクを試してみて下さい。
しかしながら入力接続を受け付けることができれば、より良い速度を得ることができます。NAT/ゲートウェイタスクを実行している環境下でこれを行うには「ポートフォワーディング(ポート開放)」作業を行ってやる必要があります。例えばあなたがケーブル/DSL接続だったとすれば、使用しているルータ/スイッチングハブ/ゲートウェイ/ファイアーウォール/の設定で、BitTorrentが使用する6881〜6889までのポートをローカルマシンへフォワード(転送)してやる必要があります。もしあなたが使用しているデバイスでポートの範囲入力ができない(ポート番号を個別に入力しなければならない)場合、とりあえず最初の10個程度のポートを開くだけで良いでしょう。そのかわりそれ以上の数のクライアントと同時に接続することはできません。もしゲイトウェイの背後にいる複数の人がBitTorrentを使用したいなら、各マシンで違う範囲のポートを使用するべきです。そしてゲイトウェイはそれぞれのポート範囲をローカルマシンへフォワードしなければなりません。
もしあなたがこれらのブロードバンドルータ/NAT(Linksys BEFSR41, D-Link DI-701/704, Netgear RT311, SMC Barricade, 3Com Home Ethernet Gateway等)を使用しているなら、ポート設定を行うにはデバイスのウェブ設定画面用のアドレスを入力する必要があります。よくわからない場合は http://192.168.1.1 または http://192.168.0.1 を入力してみて下さい。もしこれで設定画面を表示させることができない場合はデバイスのマニュアルを参照して下さい…多くの場合ではメーカーのウェブサイト上でPDF形式で閲覧できます。また、あなたは Broadband Reports や Practically Networked といった場所のフォーラムに参加することもできます。例を挙げるなら、これはLinksys BEFSR41のマニュアルへのリンクです。65ページの"Port Range Forwarding"の項を見て下さい。
Windowsのインターネット接続の共有(ICS: Internet Connection Sharing)機能を使用しているなら、ポートをマッピングするためのこの記事が役に立つかもしれません。
あなたがソフトウェアファイアーウォールを使用しているなら、BitTorrentクライアントプログラムによって応答できるように入力接続を使用できるようにしておかなければなりません。Windows XPには原始的な内蔵ファイアーウォール(「インターネット接続ファイアーウォール」またはICF)があり、これを使用する場合はBitTorrent用に構成しておく必要があることに注意して下さい。ここではWindows XP内蔵ファイアーウォール上でのポートの開き方について解説します:
「ネットワーク接続」フォルダを開きます(スタートコントロールパネル(ネットワークとインターネット接続)ネットワーク接続)。
インターネット接続ファイアーウォールによって保護されている共有接続か、インターネット接続をクリックし、左側のネットワークタスクの中からこの接続の設定を変更するをクリックします。
詳細設定タブの設定をクリックします(このボタンが選択できない場合はICFは無効になっています)。
フォワードする各ポート(例: 6881, 6882, ... 6889)用に以下の設定を行います:
サービスタブで追加ボタンをクリックして、以下の情報を全て入力します:
サービスの説明には「BitTorrent」のようにサービスの内容が容易に判別できる名前を入力して下さい。
ネットワークでこのサービスをホストしているコンピュータの名前またはIPアドレスには127.0.0.1(これは"ローカルマシン"を表します)を入力して下さい。
このサービスの外部/内部ポート番号の両方に6881のようなポート番号を入力します。.
TCPを選択して、OKをクリックします。
XP内蔵ファイアーウォールの追加情報についてはこのリンクや、このリンクを参照して下さい。
別の種類のソフトウェアファイアーウォール(Zone Alarm Pro, Norton Firewall, McAfee Firewall, BlackICE Defender等)を実行しているなら、BitTorrentクライアント(通常はbtdownloadgui.exe)がポート688xで入力アクセスができるように、上と同じような設定を行わなければならないかもしれません。
例えばZone Alarm Proなら、プログラムのリスト内でプログラム名(btdownloadgui.exe)をクリックし、それからオプションボタンをクリックして使用するポートを入力します。接続に関して困ったことがあれば、一旦全てのポートへのアクセスをBitTorentに与えてみても良いでしょう。
Mac OS Xのファイアーウォールでポートを開くには以下の手順を行います:
システム環境設定を開きます。
共有をクリックします。
ファイアーウォールタブをクリックします。
新規...ボタンをクリックします。
ポート名にあるポップアップメニューから、その他...を選択します。
ポート番号、ポート番号の範囲に「6881-6999」を入力します。
説明フィールドに「BitTorrent」(またはアプリケーションを容易に特定できる名前)を入力します
OKをクリックします。
BitTorrentでプロキシサーバーを使用できますか?
まず始めに断っておかねばならないことは、BitTorrentプログラムが作成する接続には次の2種類があるということです:
トラッカーへの出力HTTP接続 … 通常はポート6969が使用されます。
ピアのマシンとの入出力接続 … 通常はポート6881以上が使用されます。
2番目はHTTP接続ではないため、ウェブプロキシが利用できるのは最初の種類の接続だけです。理論的にはHTTPプロキシを経由してそれらをトンネルするためにHTTP CONNECTコマンドを使用することができますが、クライアントに対して追加のコードを記述しなければなりません。しかしながらこういった目的のための次善策があります。これを行う場合は以下の点に注意して下さい。
ここで述べているのは、トラッカー接続用のHTTPプロキシの設定の仕方です:
プロキシが認証を必要としないなら、システム全体にわたってプロキシ設定が有効になります。Windwosではコントロールパネルを開き、インターネットオプションを選択し、接続タブをクリックして、あなたの使用している接続を選択して設定...ボタンをクリックします(直接接続の場合はLANの設定...をクリックして下さい)。そしてこの接続にプロキシ サーバーを使用するにチェックが入っていることを確認して、プロキシのアドレスとポートを入力して下さい。
もしあなたが使用するプロキシが基本的な認証を必要とするなら、http_proxy環境変数を http://ユーザー名:パスワード@ホスト名:ポート に設定して下さい。ここでのユーザー名とパスワードとはログイン名とそのパスワードを指し、ホスト名:ポートとはプロキシサーバーのアドレスとポートのことを指します。もし環境変数を設定する方法を知らないなら、Windows上での設定方法を記述したMike Ravkine (krypt)によるページがあります。
あなたのプロキシがNTLM認証(Microsoftが所有している方式)を必要とするなら、サードパーティ製のプログラムを使用する必要があります。幸いなことに NTLM Authorization Proxy Server というユーティリティが存在します。これはあなたのローカルマシン上で実行するプログラムで、あなたのプロキシ用のプロキシとして動作します。言い換えれば、アプリケーション(BitTorrent)から(非認証の)プロキシ要求をとり、必要なNTLM認証を追加してあなたの構成したプロキシへフォワードします。このプログラムはPythonで記述されておりソースとして利用可能なため、実行するにはコンピュータ上にPythonがインストールされていなければなりません。詳細についてはホームページを参照して下さい。
もしあなたがファイアーウォールされた環境にいて、これらのHTTPプロキシを経由した場合を除いて出力接続が許可されていないなら、BitTorrentを使用することは難しいでしょう。動作する可能性があるやり方は以下の通りです: desproxyプログラムは、プロキシサーバーを通して要求をトンネルさせると言うより、SOCKS 4/5サーバーとしての役割を果たします。そこでBitTorrentプログラムを「socksify」(ネットワーク呼び出しを横取りして、SOCKSサーバーへ転送する)するためにSocksCapを使用します。SocksCapに関する注意事項は下を参照して下さい。注意: この方法がちゃんと動作しているなら、FAQのこの部分を改良できるようにあなたのやり方とその結果を私に報告して下さい。お願いします。
インターネットにアクセスするためにSOCKSを使用したい場合はどうすれば良いのでしょうか?
SocksCapというプログラムを使用して下さい。これは全ての通常プログラムをsocksifyするために使用することができます。このプログラムで面倒なところは、SocksCapをコマンドラインから実行しなければならないところです。また、btdownloadguiのコマンドラインはtorrentファイル毎に違うものになります。例えばSocksCapのコマンドライン引数は次のようになります… btdownloadgui.exe --responsefile "c:\downloads\file.torrent"(ディレクトリパスはファイルによって異なります)。torrentを開きたい時は、"c:\downloads"(使用しているパス)に"file.torrent"として保存して、それからSocksCapのコマンドを実行して下さい。
BitTorrentが何かをアップロードしています。どのようなファイルを共有していて、何を送信しているのですか?
ご心配要りません。あなたはトレントをダウンロードするのと同時に、そのトレントのアップロードも行っているのです。あなたが既にダウンロードしたファイルの部品は、他のピアに向けてアップロードされます。これはBitTorrentプロトコルの正常な動作で、何の心配も要りません。BitTorrentには他のピア・ツー・ピアアプリケーションのような「共有ディレクトリ」設定はありません。もしあなたが他のピアに向けて特定のファイルを共有したいなら、まず始めに.torrentファイルを作成し、サーバーにアップロードして、それからファイルをシードしなければなりません。詳細な手順については新規トレントの作成の項を参照して下さい。
ダウンロードをキャンセルすればどうなりますか? また、どのようにしてダウンロードを再開しますか?
BitTorrentはダウンロードの停止とその再開を完全にサポートします。別に特別な操作を行う必要はありません。完了前にダウンロードをキャンセルした場合は、それまでにダウンロードした部品があなたのハードディスク内に残っています。転送を再開するには、もう一度同じtorrentをクリックしてファイルの保存先を聞かれた時に、前回と同じ場所を選択してやります。BitTorrentはファイルが存在することを確認して、既にダウンロードされた部品をチェックします。その後、最後に中止した場所からダウンロードが再開されます。またファイルサイズに関する項も併せてご参照下さい。
注意: 適切に再開するためには、一番最初に行ったのとまったく同じ選択をしなければなりません。ファイル1つだけから成るトレントに関しては、これは非常に簡単です: 単にファイルを選択するだけです。しかしトレントがフォルダや、複数のファイルから成る場合は少々複雑になります。再開するにはBitTorrentフォルダを含んだフォルダを選択しなければなりません。
フォルダ-形式のトレントを再開する例: まず、「SomeCoolBand」と呼ばれるトレントをダウンロードしていて、「Downloads」というフォルダを保存先として選択したと仮定します。したがってディレクトリ構造は「\Downloads\SomeCoolBand\file1」、「\Downloads\SomeCoolBand\file2」といった感じになります。この転送を再開するために重要な点は、保存先を聞かれた時に「\Downloads\SomeCoolBand」ではなく、「\Downloads」を選択しなければならないということです。これは直感的ではないかもしれませんが、いつも最初に行ったオリジナルのものと同じ選択をして下さい。最初に転送を開始した時は「SomeCoolBand」フォルダはなく、あなたは「\Downloads」を保存先に指定し、BitTorrentが勝手にSomeCoolBandフォルダを作成しただけなのです。したがって再開時にも最初と同じ選択をしてやる必要があるのです。
ほんの一部しかダウンロードしていないにも関わらず、ダウンロードされたファイルが巨大なのは何故ですか?
BitTorrentがダウンロードを開始する時、ダウンロード完了後のサイズと同じだけの領域が予め確保されます。ダウンロードの開始直後は画面上に進行バーが表示され、ハードディスクが忙しくカタカタ鳴るはずです。予めスペースを確保しておく理由は、ファイルを分割してダウンロードし、これらの部品をランダムにダウンロードするためです。例えるなら確保された領域はジグソーパズルの枠の役割をしていて、ダウンロードはそれにピースを1つ1つはめ込んでいく作業によく似ています。ファイルの最初から最後まで順にダウンロードするHTTPやFTPと違い、BitTorrentは分割された部品を順不同にダウンロードします。
ダウンロードの再開時の始めに何故ハードディスクが忙しく動作するのでしょうか?
torrentを開いた時に、既に存在しているファイル名やディレクトリをBitTorrentに与えた場合、有効なデータや使えないデータがどの位存在するかをチェックしなければなりません(torrentを最初に開始した時に、BTがファイル全体の容量を割り当てていることを思い出して下さい)。これを行うにはファイル全体の内容を読み込み、ファイルの部品のハッシュを生成しなければなりません。ハッシュとは小さなメッセージ要約や巨大なデータのダイジェストを作成するための暗号化関数のことです。BitTorrentはファイルの部品が正しいかどうかをSHAハッシュ関数を使用して決定します。
シード化とは何ですか? どのようにそれを行いますか? 何故ダウンロード完了後もクライアントを開いたままにしておくべきなのでしょうか?
まず始めに、もう一度BitTorrent用語についての説明を読んで下さい。シードとは完全なファイルを持っているクライアントのことです。シード化とはあなたが完全なファイルを持っている時の接続の手順です。これには2つのやり方があります:
...ダウンロード完了後もクライアントを開いたままにしておきます。一旦ファイル全体のダウンロードが終了すればシードとなり、クライアントが閉じられるまでBitTorrentは集団への接続を維持し、他のユーザーへデータを送信します。
...torrentリンク(またはローカル保存.torrentファイル)をクリックして、既に完了したダウンロードのファイル名を選択します。BitTorrentはファイル全体をチェックして、それが既に完了済みであることが判れば、トラッカーへの接続を維持してシードとして処理するようになります。
他のユーザーを助けることになるため、一般的にダウンロード終了後も長い間クライアントを開いたままにしておくことが奨励されます。例えばダウンロードとアップロードの割合が 1:1 になった時や、ダウンロード完了後24時間が経過した時に切断を許可するというガイドラインを持っているコミュニティも存在します。他のユーザーに貢献するために、あなたができることを、あなたができる限り行って下さい。
表示されるエラーメッセージの意味は?
接続に関する問題の解決法で一番良いのは、ただ待機することです。トラッカーはしばしば利用できなくなるか、または応答が非常に遅くなることがあります。その原因はトラッカーに高負荷がかかっていたり、トラッカーがDDoS攻撃を受けている等が考えられます。トレントが十分な速度を得るにはしばらくかかるため、あなたの忍耐が重要になります。このことを踏まえつつ、いくつかの一般的なエラーメッセージとその対処法に関する説明を以下で行います。
注意: トラッカーへの接続に問題があったときは赤色のエラーメッセージが表示されますが、この場合クライアントは接続作業を再試行し続けます。これは正常な動作です。この種類のエラーメッセージが表示されていたとしても、ダウンロードは通常通り正常に進行します。エラー時のタイムスタンプに注意して下さい。それが5〜10分以上古いものなら、これを無視しても構いません。試験クライアントの新しいバージョンでは、これらの状況に対処するために、5分経過したエラーメッセージを自動的に無視します。
Problem getting response info - [Errno 2] No such file or directory: "C:\\Documents and Sett..."
(訳: 応答情報の取得に問題があります - [エラー2] そのようなファイル・ディレクトリは存在しません: "C:\\Documents and Sett..." )		
ある理由でインターネットエクスプローラはtorrentファイルの「Temporary Internet Files」への適切な保存に失敗します。このエラーの解決法は、リンク上で右クリックしてメニューから対象をファイルに保存...を選択してtorrentファイルをディスクに保存します。その後クライアントを起動するために先程保存したtorrentファイルをダブルクリックして下さい。この問題が再度発生するようならIEのキャッシュをクリアして下さい。ファイル名に角括弧('['と']')があるtorrentでこの問題が発生するようです。
Too many args - 0 max.
(訳: 引数が多すぎます - 0 が最大です)
Tこのエラーはコマンドラインが間違っていることを表します。コマンドラインの変更の項を参照して下さい。また、BitTorrentへの引数に「--responsefile "%1"」が含まれていることを確かめて下さい。
A piece failed hash check, re-downloading it
(訳: 部品のハッシュチェックに失敗しました。再ダウンロードしています)
これはエラーメッセージというより、告知メッセージというべきものです。これを無視しても何の問題もありません。このメッセージは受信したファイルの部品が壊れていて、再度ダウンロードしていることを表します。このメッセージが表示される原因は、「ハッシュチェックをスキップする」オプションの使用が間違っていることが考えられます。
bad data from tracker -
(訳: トラッカーからのデータが破損しています)
これはトラッカーがオーバーロードしていたり、さもなければ不安定だったりしている時に発生する可能性があり、無視しても構いません。
Problem connecting to tracker - timeout exceeded
(訳: トラッカーへの接続に問題があります - 時間切れ)
Problem connecting to tracker - HTTP Error 503: Connect failed
(訳:トラッカーへの接続に問題があります - HTTP エラー 503: 接続失敗 )
Problem connecting to tracker - [Errno socket error] (10061, "Connection refused")
(訳: トラッカーへの接続に問題があります - [エラー番号 ソケットエラー] (10061, "接続拒否"))
Problem connecting to tracker - (111, 'Connection refused')
(訳: トラッカーへの接続に問題があります - (111, '接続拒否'))
これらはトラッカーへの接続に何らかの問題がある場合に表示されます。トラッカーサーバーは非常に重くなる傾向があり、時々接続に失敗することがあります。この問題に対する一番の解決策は、クライアントを開いたままで辛抱強く待機することです。このエラーが頻繁に発生する場合は、パラメータ "--http_timeout 120" を追加することによってHTTPリクエストのタイムアウト値を増加させてみて下さい。またコマンドラインの変更の項がこれを行う参考になるかもしれません。
Problem connecting to tracker - HTTP Error 400: Not Authorized (訳注: 401の間違いでは?)
(訳: トラッカーへの接続に問題があります - HTTPエラー 400: 認証失敗)
これは管理者がこのtorrent用にそのトラッカーを使用することを拒否していることを表しています。例えば、フォーラムやウェブサイト内で投稿されたtorrentだけをトラッキングするトラッカーもあります。通常これはそのtorrentが"古くなった"ことを意味します - トラッカーに関連づけられたウェブサイトを訪問してtorrentが更新されていないかどうか確認して下さい。
Problem connecting to tracker - HTTP Error 404: Not Found
(訳: トラッカーへの接続に問題があります - HTTPエラー 404: 該当するページが見つかりません)
torrentの新しいリンクを見つけるか、別のtorrentリンクを試して下さい。
Problem connecting to tracker - HTTP Error 407: Proxy Authentication Required
(訳: トラッカーへの接続に問題があります - HTTPエラー 407: プロキシ認証失敗)
トラッカーと接続するには、あなたのプロキシサーバー用のユーザー名とパスワードを設定する必要があります。詳細はこの項を参照して下さい。
ブルースクリーンエラーや突然の再起動、フリーズ等が発生します。何をすれば良いのでしょうか?
いくつかのネットワークカードとDSLモデムはドライバにバグがあります。共通した症状としてブルースクリーンエラー(DRIVER_IRQL_NOT_LESS_OR_EQUALエラー)や、突発的なOSの再起動が発生します。これには次のような悪因があります:
Linksys LNE100TX model 5、Linksys NC100、Skymaster SK1207E、 Planex FNW-9803-T、または"Asound"や"Fast"ブランドか、ノンブランドで販売されていたADMtek社製のAN983Bチップセットをベースとしたネットワークカード。これらにはいくつかのマザーボードのイーサネットコントローラにも内蔵されていることに注意して下さい: MSI (Microstar) MS-6378、DFI NS70-EL & AZ30-EL、USI PM-845、Fujitsu D1451。解決法はADMtekのHPからあなたのOS用のドライバをインストールすることです: Windows XP、Windows ME/2000、Windows 98。これらはチップセットメーカーから提供されるドライバであり、Microsoft公認のものです。Linksysの最新バージョンを含むカード用には、他のドライバの代わりにこれらのドライバを使用して下さい。
Netgear FA311 -  Netgearからこのバージョン(1.30)のドライバを試して下さい
Netgear FA312 - FA311と同じ問題があるように見えますが、代わりにこのバージョン(1.8)を試して下さい(このドライバはFA311とFA312の両方で動作します。したがってFA311よりも前のバージョンでは動作しないことに注意して下さい)。
Alcatel Speed Touch USB DSL modem - これらのドライバをインストールして下さい。
あなたが使用しているインターフェースカード(INC)かDSL/ケーブルモデムが上のリストになかった場合は、メーカーのウェブサイトを確認して最新のドライバを使用しているかどうかを必ずチェックするようにして下さい。
ダウンロードが異常に速くなって、その後インターネット接続が切断されます。どうしてですか?
この問題はまだ未確定ですが、私の考えではDSL/ケーブルモデムかルータのファームウェアにあるバグのせいではないかと推測します。メーリングリストの報告では、ダウンロード速度が低い時にはこの問題が発生せずに転送が完了するようです。そして何人かの人はこの状況に対処するために、非常に原始的な回避策を生み出しました。すなわち、ダウンロードが速すぎるようになると一旦転送を停止して、再試行するのです。
パケットがシステムを離れる時の速度だけしか制御できないため、ダウンロード速度を制限することはアップロード速度を制限するよりも難しくなります。パケットが到着する速度はシステムと系路上に存在する全てのルータやゲイトウェイまたはトラフィック生成器によって決定されます。しかしながらソフトウェアがダウンロード速度を制限するための方法がいくつか存在します -- もし入力される速度が速すぎるのなら、根本的にいくつかのパケットを中止して送り主のTCP/IPスタックへ引き返させます。 
これらの問題のために、私が確認しているダウンロード速度の制限方法を下に記載します:
WindowsではNetlimiterというプログラムが、個々のプログラムや接続のダウンロード・アップロード速度を制限することができると標榜しています。このプログラムはまだベータテストの段階です。そして私の第一印象はあまり良いとは言えないものでした: BitTorrentのアップロード速度の概算を頻繁に間違え、そのソケットラッパーは私のcygwinシステムのApacheとrsync-over-sshを壊し、インストーラが妙な動作をしました。最終的にこのソフトは「言論の自由」という意味での自由と「無料ビール」という意味での自由の、両方の意味合いのどちらでもフリー(自由)ソフトではありません。まったくお勧めできません。
Linux、*BSD、Solarisでは、ダイナミックリンクライブラリのプレロード機能を使用したユーザースペースのトラフィックを整形する、trickleというプログラムがあります。簡単なコマンドラインアプリケーションで、これにはルート特権も、カーネルの再コンパイルも必要としないという利点があります。使用例: trickle -u 20 -d 80 btdownloadgui.py --responsefile "%1"
Linuxではイングレスフィルタを設定するための、カーネルQoS機能を使用することができます。最新のメーリングリストの投稿にtc(traffic control...転送制御)コマンドを使用するスクリプトの例がありました。これを起動させるにはルートアクセスと、(netlinkソケットとQoSのために)カーネルの再コンパイルが必要になるということに注意して下さい。カーネルの構成についての情報はこのページ、イングレスキュー制限についてはこのページを参照して下さい。また、 the Linux Advanced Routing & Traffic Control HOWTOと同じくAdvanced Networking Overviewも参考になるでしょう。BSDのトラフィック制限のやり方が判っていて、そのためのリンクを提供してくれたなら、私はいつでもこの項を更新するつもりです。
Mac OS X (10.2.xのみ)では、Carrafixというアプリケーションが各ポートのアップロードとダウンロード速度の両方を制限するための機能があるということです。
最後になりますが、別の方法としてBitTorrentが作るポート数を制限するやり方があります。接続数は直接にはダウンロード速度と関わりがありませんが、多くの低速ピアと接続されていたり、1〜2人の高速ピアと接続されていたりすることもあります。このことから間接的にダウンロード速度と関わっているとも考えられます。ダウンロード速度に影響するコマンドラインパラメータは以下の通りです(詳細についてはWindowsのコマンドラインの変更を参照して下さい):
--min_peers n
追加トラッカーの問い合わせを中止する前に、BTクライアントが接続するピアの最小数を決定します。デフォルトは20です。
--max_initiate n
クライアントが新しいピア接続の初期化を止める最大数を決定します。デフォルトは40です。注意: 恐らくこれは出力方向の接続(例: 初期化済み接続)だけに影響します。言い換えれば、クライアントはここで指定した数を超えても新しい接続の受付を続けますが、どのような出力方向の接続も初期化しません。
--request_backlog n
キューを維持するためのダウンロード要求の数を決定します。デフォルトは5です。この値を低く設定すれば、総合的なダウンロードの効率と速度が減少します。
So, you might try  例えばあなたは --min_peers 5 --max_initiate 10 --request_backlog 3 をコマンドラインで指定して、突発的な切断や、その他の関連問題が発生するかどうかをチェックすることができます。
注意: 切断問題を改善するためにこれらの方法を使用して成功/失敗したなら、私にご報告下さい。個人的にはこの問題を経験したことがないため、どの方法が一番良いのかがわからないのです。
ダウンロード速度が出ません。どうすれば速くできますか?
BitTorrentで高速な接続を得るためのガイドラインを挙げておきます。
(速度が出るまで)時間がかかる! 辛抱強く待て これは速度に関連する問題に対する最も重要な提案です。低速なトラッカーと連絡を取るのに時間がかかることがあります。ダウンロード開始時には、あなたが他のピアに向けて共有するどのような部品も持っていないため得に遅くなります。最近トラッカーは頻繁にオーバーロードするようになり、タイムアウト関連のエラーが表示されることが多くなってきました。クライアントを開いたままにしておいて下さい、そうすれば最終的には接続されるようになります。
NATを使用したネットワークなら、BitTorrent用のポートがクライアントを実行しているマシンへフォワードされていることを確認して下さい。これは他のピアからの入力接続を受け付けることになります。さもなければ出力接続だけしか受け付けられません。詳細に関してはFAQ内のこの項を参照して下さい。
ソフトウェアファイアーウォールを使用しているなら、BitTorrentクライアントが適切なアクセス権を持っていることを確かめて下さい。
torrentが「生きて」いることを確かめて下さい。接続しているピアやシードの数を表示できるクライアントの試験ビルドを使用するか、(トラッカーのウェブサイトの統計情報を見たり、TorrentSpy等を使用して)torrentの状態をチェックして他のクライアントが接続していることを確かめて下さい。安定した速度を得るには、少なくとも数人は他のピアが接続していなければなりません。一般的にはより多くのピアがあればそれだけ転送速度が速くなります。
アップロード速度を制限すればダウンロード速度が向上する場合があります。これは出力帯域が入力帯域よりも遙かに小さいような、ケーブルやADSLといった非対称接続を使用している場合に特に効果があります。もしあなたのアップロードがとても高速でダウンロードが低速なら、これは恐らく上の状況に当てはまります。この状態が発生する原因は、受信される全てのパケットを小さな出力パケットを使って承認しなければならないという、TCP/IPの基本的な振る舞いから来ています。BitTorrentデータで出力リンクが飽和状態になっている場合、これらのTCP/IP ACKの待ち時間が増加して効率が悪くなるでしょう。
アップロード速度を制限できるクライアントを使用して、アップロード速度を実測した最大速度の80%程度に設定してみて下さい。このアップロード速度を低い値に制限することが魅力的なことだと思うかもしれません。非常に良好なtorrentではダウンロードに良い影響があるかもしれません。しかしながら一般的にピアが少ない状況では、リンクを飽和状態にしない程度(アップロード速度の80%程度の最適な値)で可能な限り高速なアップロード速度を提供すれば、それだけ高速なダウンロード速度を得ることができるでしょう。
Mac OS Xでアップロード速度を制限するには、Carrafixを試して下さい。このソフトではBitTorrentポート(6881〜)のそれぞれに上限を設定することができます。
BitTorrentが動作するために必要な出力接続があなたのネットワークで許可されていることを確認して下さい。いくつかのネットワーク(学校や職場等)はファイアーウォールされていて、全ての接続はプロキシサーバーを経由しなければなりません。別の場合ではよく使われるポートだけが利用可能になっていることもあります。起こりえる全てのシナリオを示すには余りに多くの状況が考えられますが、あなたが「生きて」いるtorrentをダウンロードしようとした時に、クライアントが接続しているピアやシードが0と表示されたまま変化しないなら、その時は恐らくこのケースに当てはまります。追加情報としてプロキシ設定に関する質問の項を参照して下さい。.
どうやって接続している人のリストを見るのですか?
コマンドプロンプト(ターミナル)から"netstat -an"というコマンドを入力して下さい。これはWindows、Linux/Unix、Mac OS Xで動作し、あなたのマシン上の全てのネットワーク接続のリストを表示します。通常、あなたが見なければならないのは状態が ESTABLISHED になっている接続です。また特別な場合を除いてはローカルアドレス「127.0.0.1」との接続はローカルのみの接続を表すために見る必要はありません。
Windowsではコマンドラインインターフェースの代わりに、これよりも遙かに有益な情報を表示してくれるGUIのツールがあります。TCPViewをダウンロードして下さい、これはフリーソフトです。このソフトはnetstatコマンドと同じような出力を表示しますが、それぞれの接続"自身"のプログラムのPID(プロセスID)とプログラム名のリストも同時に表示します。プログラムを起動したら状態がESTABLISHEDでない接続を表示しないようにするためShow Unconnected Endpointsボタンを押して下さい。Resolve AddressesコマンドはDNSの逆参照を行い、数値表現のIPアドレスの代わりに接続しているマシンのホスト名を表示します。TCPViewには任意の行を右クリックしてメニューからClose Connectionを選択することで特定の接続を閉じることができる機能があります。
netstatやTCPViewのどちらかを使用することで、どの接続が入力でどの接続が出力かということが理解できるようになります。ローカルアドレスの末尾が!:6881"から":6999"(またはあなたが設定したBitTorrent用ポート範囲の何れか)であればこれらは入力接続です。それ以外は恐らく出力接続であり、リモートアドレスの末尾は":6881"から":6999"になっているでしょう。
試験クライアントの最新のビルド(3.2.1b-2)では、Advancedボタンをクリックすれば現在のtorrent用に接続されているそれぞれのマシンについての詳細が表示されます。
転送が完了する前にファイルをプレビューできますか?
良い方法はまったくありません。何故なら、BitTorrentは順不同で部品をダウンロードするため、プレビューするために必要なファイルの部品(通常はファイルの先頭部分)が存在しているという保証がないからです。この問題を更に複雑にしているのは、アーカイブとしてパッケージされたトレントがあるという事実です。このような場合だと転送が完了するまではその内容を抽出するのはかなり難しいでしょう。
それでも定期的にファイルを表示させてみる作業を続けていれば、運が良ければプレビューできるかもしれません。まず始めにあなたがダウンロードしているファイルがアーカイブファイルでないことを確かめて下さい。拡張子がZIPやRAR(R00、R01...)のファイルはアーカイブファイルです。次にダウンロードを中止しなければなりません。何故ならBitTorrentはファイルが完全になるまで占有モードとしてファイルをロックするからです。中止しておけばそのファイルに関連づけられたアプリケーションで開くことができますが、もしおかしな振る舞いをしても驚かないで下さい。未完成のファイルを開いている訳ですから、アプリケーションの動作がおかしくなって当然なのです。ファイルを見てそのファイルがあなたが欲しいファイルだったら、ダウンロードを再開して下さい。 
拡張子.のファイルはどうやって開くのですか?
ここではBitTorrentで遭遇するかもしれない共通のファイルタイプの扱い方についてリスト形式で説明します。
ディレクトリ内に拡張子が.Rnn(nは任意の数...例: r00,r02,r03...)のファイルが沢山あるなら、それは複数に分割されたRAR圧縮ファイルだと考えられます。これはUsenetニュースグループで一般的に使用されている圧縮形式です。.RAR.RARファイルを開いて解凍するためには、WinRAR(Windows) や UnRarX(OS X.) を使用して下さい。どちらのプログラムも同じディレクトリ内にある分割された部品の全てを自動的にチェックして、圧縮前の内容を復元することができます。
BitTorrentのFAQとガイド
