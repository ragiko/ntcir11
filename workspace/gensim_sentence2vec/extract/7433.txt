このループは次のような手順で実行される。
条件を評価する。条件が偽ならば、ループを終了する。
真文を実行する。
条件の評価に戻る。
条件がはじめから偽の場合は、真文は一度も実行されないことになる。
C言語のwhile文は、初期化とカウンタ変数の更新を省略したfor文として書き換えることができる。したがって、C言語のwhile文はfor文を特殊化したものといえる。ただし、while文ではループの条件を省略できない点がfor文と異なる。
例文[編集]
これを実行すると、次のような出力結果が得られる。
x は 0 です。
x は 1 です。
…………
x は 98 です。
x は 99 です。
はじめ変数xの値は0であり、真文が1回実行されるたびに1が加えられる。真文が100回実行されるとxの値は100になり条件が成り立たなくなるため、このときこのループは終了する。
ループを終了するには、ループの条件を偽にするほかに真文においてbreak文を使う方法もある。ループの条件が常に真であり、真文にbreak文が含まれていない場合(またはbreak文が実行されない場合)、ループは無限ループとなる。また、真文が複数の文からなる場合、continue文を使うことで真文の実行を中止し、条件の評価から処理を再開することができる。
Pascalの場合[編集]
Pascalでは、前置判定としてwhile, do を、また後置判定として repeat, until を使用する。
前置判定
while文 - Wikipedia
