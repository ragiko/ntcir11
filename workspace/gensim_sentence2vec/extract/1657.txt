作成者: 怡土順一, 最終変更者: 怡土順一, 最終変更リビジョン: 342, 最終変更日時: 2007-10-14 23:39:34 +0900 (日, 14 10月 2007)
フィルタ
フィルタという単語は,非常に幅広い意味を持つ.
OpenCVのリファレンス マニュアルでは,
主に二次元マトリックス(フィルタ,カーネルなどと呼ばれる)と,
画像の処理対象領域の画素値との畳み込み演算を行うことによって実現される,
いわゆる空間フィルタ処理についての関数をフィルタ処理としている.
画像勾配を求める処理(微分フィルタ)もフィルタ処理の一部ではあるが,そ
れは別途解説されているので,そちらを参照すること.
#include <cv.h>
#include <highgui.h>
int
main (int argc, char **argv)
{
int i;
IplImage *src_img = 0, *dst_img[4];
// (1)画像を読み込む
if (argc >= 2)
src_img = cvLoadImage (argv[1], CV_LOAD_IMAGE_ANYDEPTH | CV_LOAD_IMAGE_ANYCOLOR);
if (src_img == 0)
exit (-1);
for (i = 0; i 
// (1)画像を読み込む
コマンド引数で指定されたファイル名の画像(入力画像)をオープンし,関数
cvLoadImage()で読み込む.2番目の引数にCV_LOAD_IMAGE_ANYDEPTH |
CV_LOAD_IMAGE_ANYCOLORを指定することで,元画像のデプス,チャンネルを変
更せずに読み込む.
// (2)手法を指定して画像を平滑化
関数cvSmooth()の3番目の引数で,
CV_BLUR(ブラーフィルタ),CV_GAUSSIAN(ガウシアンフィルタ),CV_MEDIAN(メディアンフィルタ),CV_BILATERAL(バイラテラルフィルタ)
の各手法を指定して平滑化を行う.
4番目以降の引数の意味は,手法毎に異なる.詳しくは,リファレンス マニュアルを参照すること.
// (3)処理された画像を実際に表示
各手法で平滑化された画像を実際に表示し,何かキーが押されるまで待つ.
実行結果例
下段の画像は,処理画像の一部を拡大したものである.
ただし,手法毎にパラメータを変えてあるので,単純に比較できる画像ではない.
opencv.jp - OpenCV: フィルタと色変換(Filters and Color Conversion)サンプルコード -
