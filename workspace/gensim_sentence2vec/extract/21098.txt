
特定のクエリをキャッシュに入れないようにするためにMySQLに指示することができる。これは、キャッシュの汚染を防止するのに有効。例えば、一日に一度しか実行しないようなクエリの場合、そのクエリをキャッシュに入れても意味はない。そのクエリをキャッシュに入れないようにすれば、一日に何度も繰り返すキャッシュのために容量を確保できる。
SELECT SQL_NO_CACHE * FROM mytable
query_cache_sizeについて
query_cache_size の値がゼロではない場合は、ストラクチャのアロケートにおよそ 40 KB を必要とするため、クエリ キャッシュのサイズを最低 40 KB でセットする必要がある。
正確なサイズは、システムのアーキテクチャによる。サイズが小さすぎると、警告がでる。
参照
http://dev.mysql.com/doc/refman/5.1/ja/query-cache-configuration.html
構文解析と分析の最適化
MySQLは、キャッシュに入っていないクエリに対して目的の処理を実行する前に、クエリを解析して構成要素に分解する。
クエリの構文が正しいかを確認し、以下の基本情報を収集する。
どのような種類のクエリか。SELECT、INSERT、UPDATE、DELETEのどれか。あるいはSETやGRANTなどの管理コマンドか。
どのようなテーブルが関係するか。エイリアスを使用するか。
どのようなWHERE句を使用するか。
他にヒントや修飾子が関係するか
要素分解した後、何を実行すべきかを判断する。そしてクエリオプティマイザにより、取得した情報を元に最も効率的なクエリの実行方法(調査すべきレコードの数を限定できる方法)を見つけ出す。
これは、ディスクI/Oに要する時間が、クエリの所要時間を支配する要因になることが多いためそうしている。
※インデックスが役に立つ理由も、この原理で説明できる。
MySQLは適切な判断を下すため、以下のような質問の答えを見つけ出そうとする。
行を迅速に見つけ出すために、適切な候補となるインデックスが存在するか
どのインデックスが最も適切か。複数のテーブルが関係する場合、各テーブルについて、どのインデックスが最も適切か
テーブルを結合している場合、どのテーブルがどのテーブルに依存するか
テーブルにとって、どの結合順序が最も適切か
MySQLはすべての選択肢を実際にテストせず、非常に迅速に判断を下す。
そうしないと実際にクエリを実行する時間よりも、実行方法を判断するのに時間がかかってしまうため。
MySQLがSELECTクエリをどのように扱うかを知るには、そのクエリに対するEXPLAINの出力を見るとよい。
EXPLAINによる調査方法
テーブル構造は、describeコマンドで表示できる。
describe Hoge;
MySQLの動作を調べるには、EXPLAINコマンドを使用する。
ここで得られた情報を元に、インデックスを追加したり、クエリを書き直すことにより、性能を大幅に改善できることがある。
EXPLAIN SELECT questionnaire_records where id=1;
すると、下記のようなデータが得られる。
+--+-----------+---------------------+-----+-------------+-------+-------+-----+----+-----+
|id|select_type|table                |type |possible_keys|key    |key_len|ref  |rows|Extra|
+--+-----------+---------------------+-----+-------------+-------+-------+-----+----+-----+
| 1|SIMPLE     |questionnaire_records|const|PRIMARY      |PRIMARY|      4|const|   1|     |
+--+-----------+---------------------+-----+-------------+-------+-------+-----+----+-----+
各項目の意味は以下。
カラム名
意味
MySQLパフォーマンスチューニングのためのクエリの基礎知識 - 久保清隆のブログ
