通常、回転をする場合入力点(x1,y1)を、原点(0,0)を中心としてA度回転させる場合の出力点の座標(x2,y2)は
x2 = x1 * cos(-A) - y1 * 
sin(-A) 
y2 = x1 * sin(-A) + y1 * cos(-A) 
で表されます。 
この式を使って画像を回転すると、画像の左上を中心とした回転となります。これを画像の中心(cx,cy)を回転の中心とするときの変換式は次のようになります。 
x2 = (x1-cx) * cos(-A) - 
(y1-cy) * sin(-A) + cx 
y2 = (x1-cx) * sin(-A) + (y1-cy) * cos(-A) + cy  
これで画像の中心を原点とした回転ができるようになりますが、これを実行してみると、下の図のように変換後の画像に穴があいてしまいます。 
これは、下図の左のように入力画像の位置から出力画像内の座標を計算しているために生じるものです。この現象を回避するには、入力画像の座標から出力座標を計算するのではなく、下図の右のように出力画像の座標に対応する入力画像の座標を逆計算してやればよいことが分かります。 
このときに用いる計算式は 
x1 = (x2-cx) * cos(A) - (y2-cy) 
* sin(A) + cx 
y1 = (x2-cx) * sin(A) + (y2-cy) * cos(A) + cy 
となり、実際の画像処理においてはこの式を用いて回転処理を行います。 以下このアルゴリズムを「基本アルゴリズム」と呼ぶこととします。
この処理結果を下図に示します。
C言語による画像回転処理について
