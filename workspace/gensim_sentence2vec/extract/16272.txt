
Windows Vista の仮想フォルダと検索
筆者: John Price MCPD、http://www.nxtgenug.net/
(英語)
目次
仮想フォルダ
検索
Windows Vista との統合
Windows Vista のリリースまで待つべきか
そして最後に
筆者について 
私がテクノロジやコンピュータと関わるようになった遠い昔から、DOS ベース PC を手に入れたばかりの友人や家族に、助けを求められた経験が数え切れないほどあります。そういうときの質問は、「作成したファイルが、どこにあるかわからない」というものがほとんどでした。
オペレーティング システムが進化して改良を重ねるにつれ、状況は少し良くなりました。それでも、「ファイルは置いた場所にあるはずだから、ファイルを探すには、その場所を覚えておく必要がある」ということを技術系以外のユーザーに説明するのは、今でも骨が折れます。
現在の検索システムを使用しても、ファイルの場所についてまったく手掛かりがなければ、ファイルを見つける作業には時間がかかります。 この問題に関して、Windows
Vista は大きく前進しています。
仮想フォルダ
Windows Vista では、各ファイルをそれぞれ特定のフォルダに振り分けてきちんと整理する苦労を強いられることはなくなり、一般的なファイル領域にファイルを保存しておくだけで、ユーザーが定義した仕様に合う種類のファイルを集めた「仮想フォルダ」に自動的にそのファイルが表示されます。
それでは、仮想フォルダとは何でしょうか。 これは Windows XP の「保存された検索」機能の拡張機能です。 私の知る限り、この機能を使ったことがある人は非常に少なく、この機能について聞いたことのある人はさらに少ないようです。
意味がわからない方は、XP で検索を実行し、終わったら [ファイル] メニューを使用して検索基準を保存してください。 この検索を次に実行するときは、このファイルをダブルクリックし、繰り返したい検索をクリックします。
以上、マイ ドキュメントの下にある、保存された検索の概念を説明しました。仮想フォルダは、この概念をさらに拡張して、いくつかの定義済みの検索を作成すると共に、ユーザー自身の検索も定義できるようにしたものです。
大きく進歩している点は、ユーザーの作業中にバックグラウンドで、仮想フォルダが動的に更新される点にあります。 特定の画像ファイルが検索されるまで待つ必要はもうありません。どの画像ファイルでも、画像の検索に自動的に追加されます。
標準的な仮想フォルダに加えて、Windows XP の保存された検索機能と同じように、ユーザー独自の検索フォルダを作成することもできます。この場合にも、ファイルを作成したり変更したりするたびに、これらの仮想フォルダが動的に更新されるというメリットがあります。
ファイルの整理と Windows Vista についての詳細は、次のリンクを参照してください。http://www.microsoft.com/windowsvista/features/foreveryone/searchorg.mspx
(英語)
Windows Vista のベータ版では、次のシステム仮想フォルダが組み込まれています。
アルバム
すべてのドキュメント
すべての音楽
すべての画像とビデオ
すべてのビデオ
アーチスト
撮影日付
お気に入りの音楽
ジャンル
キーワード
評価
最近
種類
ユーザー ファイル 
Windows Vista では、どのファイルがどの仮想フォルダに入っているかが、どのように判断されるのでしょうか。 この判断は、ファイルに含まれているメタデータを調べることによって行われます。
たとえば、音楽、ビデオ、および画像ファイルには、既定で大量のメタデータが含まれているのが普通ですが、Word、Excel などの文書には、ユーザーがこれらのアプリケーションの
[ファイル] > [プロパティ] を使用してメタデータを追加する作業に慣れている場合を除いて、既定でメタデータは含まれていません。 また、このような機能のないアプリケーションもあります。
これらのファイルを活用するために、仮想フォルダでは、エクスプローラ シェルから直接、ファイルにメタデータを追加できるようになっています。
検索
仮想ファイルによってファイルが簡単に探し出せるとはいえ、ユーザーは時として、仮想フォルダに認識されない拡張子やメタデータを付けて、思いもよらない場所にファイルを保存することがあります。
たとえば、だれかがメールで送ってきた文書を、エクスプローラ内のどこかにドラッグ アンド ドロップする場合があります。 何日か後に、その文書が必要になったのに見つからないと仮定します。
ファイル名の一部分は覚えているのですが、ファイルの種類や場所は覚えていません。 ここで検索が必要になります。
Windows Vista の新しい検索ツールを使用してみましょう。[スタート] ボタンをクリックするか、キーボードの Windows キーを押すと、予想どおり
[スタート] メニューが表示されます。ここまでは何も新しい点はありません。 入力を始めてください。 ユーザーが入力するにつれ、その入力内容に応じて、左側のペインに表示される検索結果が変化します。
検索結果が絞り込まれるまで、入力を続けます (図 1)。
図 1
検索では、最も可能性の高い検索結果が強調表示されるので、Return キーを押すと、その結果が自動的に選択されます。 検索結果に関連付けられたアプリケーションがある場合は
(.doc ファイルの場合は Word というように)、そのアプリケーションが読み込まれ、ファイルを使って作業できる状態になります。 これは、一見すると能率的でも操作性としてはスムーズさに欠けていた
XP の検索メカニズムからの大幅な進歩です。
完全な機能のある検索を使用したい場合は、それも可能です。 [スタート] メニューで [コンピュータの検索] をクリックすると、ダイアログが表示され、[フィルタの追加]
ボタンを使用してパラメータを指定し、検索をさらに絞り込むことができます (図 2)。 これは XP の検索ダイアログと似ていますが、それぞれの検索条件に論理演算子を追加できます。
したがって、*.doc ファイルであり「なおかつ」 Vista という単語を含むファイルでも、*.doc ファイル「または」 Vista という単語を含むファイルでも検索できます。
図 2
ここで、検索結果の表示に使用されているアイコンは、特定のファイルの種類を表す静的なアイコンではないことに注意してください。 これらのアイコンは、ファイルの実際の内容の小さなプレビューです。
これらの検索は、ユーザーが要求した時点で実行されます。 ただし XP と同様に、検索結果を返す時間を短縮するために、バックグラウンドで動作するように設計された、ファイルのインデックス作成サービスがあります
(図 3)。
図 3
このサービスは、たまにしか実行しない検索のパフォーマンスを上げるために、CPU をかなり消費するので、私の知る限り、多くのユーザーがこのサービスを無効にしています。
Windows Vista のインデックス作成サービスは、もっと効率的で、ディスク全体ではなくファイル システムの一部分だけを対象にインデックス作成を行うように指定することができます。
また、Windows Vista は可能な場合、コンピュータのアイドル時間を利用してインデックスを作成するので、インデックスを最新の状態に保つためのパフォーマンス
ペナルティが最小限で済むようになっています。
Windows Vista との統合
このように体系付けられた検索機能は、アプリケーション開発にも利用できます。 マイクロソフトでは、開発者がこの検索データベースを効率的にアクセスできる方法を用意しています。それは、開発者なら既に知っている、OLEDB
です。
OLEDB 接続文字列を使用して、簡単に検索エンジンに接続できます。 ベータ ビルドの場合、これは "provider=Search.CollatorDSO;Extended
Properties=Application=Windows;" です。 OLEDB 接続を開いた後は、標準の SQL SELECT ステートメントを使用して、ファイル
システム内のファイルを検索できます。 標準の SQL SELECT ステートメントと言いましたが、メカニズムの意味です。これらの SELECT には、次のような固有の形式があります。
SELECT <properties>
FROM [machinename].SYSTEMINDEX..SCOPE()
[WHERE <condition>]
[machinename] は必須ではありませんが、ネットワーク上の別のコンピュータを指定して、そのコンピュータのファイル システムを対象に検索を実行することができます
(リモート コンピュータが Windows Vista または Longhorn Server で動作していて、なおかつ必要な権限があることが前提です)。
ステートメントの <properties> の部分には、検索エンジンに要求するプロパティを指定できます。 読み取るプロパティを必ず指定しなければならない点に注意してください。
SELECT * は指定できません。 私はこれらのオプションの構文を初めて見たとき、複雑ではないけれども少し奇妙だと思いました。プロパティ名は二重引用符で囲むのに対し、WHERE
句で比較の対象にする値は一重引用符で囲み、しかも大文字と小文字の区別がありません。
Windows Vista ベータ版のシェル プロパティ システムには、広範囲に及ぶプロパティ記述方式があり、OS が本番段階になれば、さらに範囲が拡張される可能性があります。
また、ユーザー独自のプロパティを追加するためのメカニズムもあります。 プロパティ システムについてさらに詳しく知るには、http://windowssdk.msdn.microsoft.com/en-us/library/ms630276.aspx
(英語) を参照してください。
ファイルを探す目的で、使用する可能性が高いプロパティは、System.ItemNameDisplay、System.DateModified、および System.ApplicationName
です。
たとえば、
SELECT "System.ItemNameDisplay" WHERE "System.ItemNameDisplay"
LIKE Scroll% と指定すると、Scroll で始まる名前を持つすべてのファイルが返されます。
また、
SELECT "System.ItemNameDisplay" WHERE "System.DateModified"
>= 2006-10-29 と指定すると、2006 年 10 月 29 日以後に作成されたすべてのファイルが検索されます。
上記の例では、検索エンジンで使用可能なインデックス全体が検索の対象になります。 検索する場所を限定するには、SCOPE および DIRECTORY オプションを使用します。
SCOPE パラメータを指定すると、名前を指定したフォルダとすべてのサブフォルダが検索されます。DIRECTORY を指定すると、指定したフォルダだけが検索対象になります。
この場合も、キーワード DIRECTORY または SCOPE を二重引用符で囲み、その後ろで引用符の外に等号を入力し、一重引用符で囲んだディレクトリ名を指定します。
パスの各レベルを表すには、スラッシュ (/) を使用します。 パスの前にプレフィックス file: または mapi: を指定することもできます。 前者はディスク上のフォルダ構造を検索する場合、後者はメール
フォルダを検索する場合に使用します。
SELECT "System.ItemNameDisplay" WHERE "System.ItemNameDisplay"
LIKE Scroll% and "SCOPE" =file:c:/docs
Windows Vista のリリースまで待つべきか
開発者にとって良いニュースがあります。Windows Vista のリリースを待たなくても、その一部を使用できます。 マイクロソフトでは Windows Vista
の新しい検索機能を、他の Windows Vista テクノロジと同様、XP で使用できるようにしています。 これは Windows Desktop Search
3.0 と呼ばれ、メールへの高速アクセスを提供する目的で Outlook 2007 などのアプリケーションにも使用されている Windows サービスです。 この記事の執筆時点では、WDS
3.0 はプレビュー専用であり、開発の初期段階に過ぎない点に注意してください。しかし、XP Service Pack 2 のユーザーがアップグレード前に Windows
Vista の検索機能の操作性に触れ、Windows Vista の新しいテクノロジを利用したアプリケーションを XP で実行することができます。 ダウンロード用のリンクを含めたいところですが、現時点では
UI が含まれておらず、次のバージョンで (おそらく) 追加されるので、次のプレビューまで待つことをお勧めします。 それまでは、現在の Windows Desktop
Search (執筆時点では 2.6.5) を使用すれば、Windows Vista のエンジンは組み込まれていないとはいえ、XP の検索エクスペリエンスを大きく改善できます。
そして最後に
以上の観察結果はいずれも、Windows Vista の Beta 2 および RC1 に基づくものです。 Windows Vista が全世界に向けてリリースされるまでには、一部の機能が変更される可能性があります。
したがって、このガイドは福音書としてではなく 1 つの予測として、これから開発する新たなキラー アプリケーションを OS に統合した結果、従来以上に統一性のある優れたユーザー
エクスペリエンスをどのように提供できるようになるか、一端を理解するうえで目安にしてください。 詳しくは、http://www.microsoft.com/windows/desktopsearch/hp1.mspx
(英語) を参照してください。
筆者について
私は物心ついた頃から開発者として働いてきました。実際、初めての開発作業は 15 歳で、まだ学校に通っていた頃です。
美容院向けのシステム開発に 10 年取り組んだ後、4 年ほど各種プラットフォーム用のハードウェア設計の仕事をしました。 286 マザーボードの設計にも参加したことがあります。
その後、テクニカル アーキテクトとして POS 端末や、世界中の大手石油会社のバックオフィス システムの設計を担当しました。 その間、幸運にも南アフリカ、日本など
26 か国を訪問した経験があります。
.NET については発端から関わってきました。1.0 のベータ プログラムに始まり、その後のさまざまなプロジェクトに参加しています。私の専門は、デスクトップ用のメディア
デバイスと、CE デバイス用の組み込みモバイル アプリケーション、そしてメディア センター アプリケーションです。
私は http://www.nxtgenug.net/
(英語) ユーザー グループの設立メンバーの 1 人でもあります。 このグループは現在、バーミンガム、コベントリー、オックスフォードで定例会を開催しています。
このユーザー グループでの私の目標は、開発者に限らずすべての IT ピープルが、仕事や家庭生活に役立つような方法でテクノロジを活用できるようにすることです。 特定のテクノロジについての無味乾燥な事実なら、比較的容易に見つけ出せますが、そのテクノロジを使用すべきかどうか、いつ使用するかの判断は、はるかに難しくなります。私はそれを解決したいと思っています。
また、従来のデスクトップ アプリケーションや Web アプリケーションに限らず、新旧どちらのテクノロジも実用化し、未来に向けてクリアで生産的なビジョンに結び付けることも、私は希望しています。
Beta Experience - Windows Vista Virtual Folders and Search
