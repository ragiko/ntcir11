CSV形式テキストファイルを読み込んで、セル範囲に展開するような場合の方法です。
ここでは、配列変数とセル範囲の関係の説明なので、「静的配列」で説明します。
対象は、この章の始めに説明している題材です。面倒ですが、マクロ内で配列変数にあらかじめ値をセットしておいて、一気に「Sheet2」に転記させてみます。
Option Explicit
Sub TEST8()
Dim S2 As Worksheet
Dim A(1 To 3, 1 To 4) As String ' 3×4の2次元配列
Set S2 = Worksheets("Sheet2")
' 2次元配列に値をセット(1つずつ原始的に!)
A(1, 1) = "A1"
A(1, 2) = "B1"
A(1, 3) = "C1"
A(1, 4) = "D1"
A(2, 1) = "A2"
A(2, 2) = "B2"
A(2, 3) = "C2"
A(2, 4) = "D2"
A(3, 1) = "A3"
A(3, 2) = "B3"
A(3, 3) = "C3"
A(3, 4) = "D3"
' 配列を一気にセル範囲に転記
S2.Cells(1, 1).Resize(3, 4).Value = A
End Sub
この説明では、配列変数に値が入っていることが前提なので、値を入れる記述が長くなりますが、転記そのものは最後の1行だけです。
処理結果はこのようになりました。
上のサンプルでは、配列を解りやすいように、縦を1〜3、横を1〜4としています。
ですが、VBAのデフォルトでは、配列の要素番号はゼロから始まるので、次の書き方でもOKです。
Option Explicit
Sub TEST8_2()
Dim S2 As Worksheet
Dim A(2, 3) As String ' 3×4の2次元配列
Set S2 = Worksheets("Sheet2")
' 2次元配列に値をセット(1つずつ原始的に!)
A(0, 0) = "A1"
A(0, 1) = "B1"
A(0, 2) = "C1"
A(0, 3) = "D1"
A(1, 0) = "A2"
A(1, 1) = "B2"
A(1, 2) = "C2"
A(1, 3) = "D2"
A(2, 0) = "A3"
A(2, 1) = "B3"
A(2, 2) = "C3"
A(2, 3) = "D3"
' 配列を一気にセル範囲に転記
S2.Cells(1, 1).Resize(3, 4).Value = A
End Sub
VBA基本(配列変数からセル範囲へ転記)
