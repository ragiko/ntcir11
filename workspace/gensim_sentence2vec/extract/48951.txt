
このページでは、プログラミング技術Ⅳ(C言語入門+)の講義のサポートを主に行います。最終的にOpenGLをマスターしてもらいます
Introduction
The 1st & 2nd Class
The 3rd Class
The 4th Class
Introduction
講義:「プログラミング技術Ⅳ」
場所:KE-302(私がいるのが)
時限:3限
C言語の復習からやっていき、プログラミングの基礎を完璧に固めましょう.
The 1st & 2nd Class
初めての授業、なので動作確認から基本的なコードのおさらいが中心
演習1-2
文字列操作関数の使い方の復習。strcpyやstrcatなどを理解するとともに、char型配列の使い方を覚えているかの確認
#include <stdio.h>
#include <string.h>
int main(void){
// 性と名、結果の配列を用意(配列数に注意すること)
// 性と名を入力する
printf("Family name: "); 
・・・
// 文字列を連結すると同時にスラッシュを文字の最初と最後、結合点に挿入する
// strcpyとstrcatなどをうまく使用して作る
// 出力
printf("%s\n", 変数); 
return 0;
}
演習2-1
文字列の中から母音を探し出して、文字列の先頭に持ってきた形を作る演習課題.ヒントとしては、母音を格納する文字配列と子音を格納する文字配列を作り、それに格納していく。最後にくっつけて結果として表示すればよい
注意:ポインタ演算を使用すること。
#include <stdio.h>
#include $lt;string.h$gt;
int main(void){
// 入力など必要な文字列格納用配列を宣言
// ポインタを宣言+ポインタセット
// 文字列の入力
printf("Input a string: ");
scanf("%s",変数);
// 母音と子音を探し出してそれぞれの場合で処理を行わせる
for(入力文字列をすべて読み込むような条件){
if(入力文字列が母音をさがすための条件){
// 母音だった時の処理
}else{
// 子音だった時の処理
}
}
// 終端コード(文字列)を挿入
// 母音と子音をつなげて出力(ex. strcat+printf)
return 0;
}
演習2-2
二次元配列を扱ってデータのやり取りを行わせるプログラムです。通常の配列と同様に考えれば作成することができます。
工事中
The 4th Class
第4回目の演習では、構造体とポインタの使い方を学びます.
まずは、構造体の使い方を確認し、その次に構造体ポインタの使い方を確認しましょう
演習4-1
工事中
演習4-2
工事中
ProgramingⅣ | TAなページ
