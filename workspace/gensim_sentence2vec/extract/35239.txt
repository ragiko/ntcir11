
SAK 図書館 
|
VB |
SQL |
Perl |
PHP |
ASP |
JSP |
C |
PC |
HP |
FAQ |
フリーソフト |
VB テクニック編30 - 索引ファイル、インデックスファイル、テーブルサーチ
SAK 関数利用規程
・テクニック編で紹介する関数は、私こと Y.SAK の開発関数である。
・著作権明示部分の改編は認めない。
・個人、企業がこれらの関数を使用したり、一部を使用して新たなシステムや
プログラムを開発することは自由です。
・但し、これらの関数を一部でも使用しているソフトウェアをシェアウェア、
その他有償プロダクトとして配布・販売するには、私の許可が必要です。
(無償のフリーソフトウェアなら、自由に配布しても良い。)
・これらの関数を使用して発生した、いかなる形での損害も私こと Y.SAK は
賠償しません。
索引ファイルによるシーケンシャルアクセス(インデックスファイル)
・次のコードは、約 3.5MB の 10 万件のテストデータを作成する。
この例では、データの先頭がユニークキーになっている。
また、データは昇順に並んでいる。
dim i as long
open "data.csv" for output as #1 len = 32000
for i = 1 to 100000
print #1, chr(&h22) & format(i, "000000") & chr(&h22) & ",";
print #1, chr(&h22) & int(rnd(1) * 10000) + 100000 & chr(&h22) & ",";
print #1, chr(&h22) & int(rnd(1) * 10000) + 200000 & chr(&h22) & ",";
print #1, chr(&h22) & int(rnd(1) * 10000) + 300000 & chr(&h22)
next
close #1
-- 作成内容
"000001","107055","205334","305795"
"000002","102895","203019","307747"
"000003","100140","207607","308144"
...
"100000","104969","206731","308063"
・次のコードは、作成した 10 万件 data.csv のインデックスファイルを作成
する。索引は「キー」と「シークアドレス」の単純なものである。
この例では、100 件単位に索引データを作成している。
また、引用句を省略している。
この索引は、索引件数をファイルの先頭に持たせることにしてある。
(最後に binary モードで先頭に件数をセットしている。)
こうすれば、サーチ用の配列を無駄なく作成できる。
尚、元のデータがキーがユニークで昇順のため、シンプルに索引が作成でき
るが、重複レコードや並びが昇順、降順のように一定していなと、もう少し
工夫が必要である。(キーテーブルのソートや親子関係など。)
dim i as long
dim k1 as string
dim d1 as string
dim ct as long
dim rec as string
open "data.csv" for input as #1 len = 32000
open "index.dat" for output as #2 len = 32000
print #2, "0000000000"
i = -1
ct = -1
do until eof(1)
input #1, k1, d1, d1, d1
i = i + 1
if i mod 100 = 0 then
print #2, k1 & "," & seek(1)
ct = ct + 1
end if
loop
close #2
close #1
open "index.dat" for binary as #2 len = 10
rec = format(ct, "0000000000")
put #2, , rec
close #2
-- 作成内容
0000000999
000001,38
000101,3738
000201,7438
...
099901,3696338
・例えば、索引ファイルを使用せずに "099999" のデータを読むとすると、
ほぼ、10 万件すべてを読み飛ばさなければならない。
また、レコードが昇順や降順に並んでいなければ、アンマッチ時に常に全件
リードとなる。
この手の単純検索で大量のレコードを扱う場合は、少なくともデータの並び
は一定していないとうまくない。
dim sch as string
dim k1 as string
dim d1 as string
dim d2 as string
dim d3 as string
dim fnd as boolean
dim shtm as double  '** 不要
'** サーチキー指定
sch = "099999"
'** テーブルサーチ
shtm = timer  '** 不要
open "data.csv" for input as #1 len = 32000
do until eof(1)
input #1, k1, d1, d2, d3
if k1 = sch then
fnd = true
exit do
end if
if k1 > sch then
fnd = false
exit do
end if
loop
close #1
shtm = timer - shtm  '** 不要
'** サーチエラー
if fnd = false then
msgbox "見つからない。"
end
end if
'** サーチ結果
print shtm  '** 不要
print k1
print d1
print d2
print d3
-- 結果
0.359 秒  sch = "099999"  (うちの PC は、むちゃ高速なので注意!!)
0.000 秒  sch = "000009"  (測定不能)
** ファイルの後半のデータほど、どんどん検索が遅くなる理屈である。
・次のコードは、作成したインデックスファイルを利用している。
従って、平均的に 100 倍の論理的速さになる。
この手のデータ要素であれば、SQL データベースより高速と思う。
しかし、データの並びがランダムであったり、親子関係を持つ必要のある時、
データの修正があるときには、非常に複雑な検索や更新ロジックが必要とな
る。昔は、マシンランゲージでその手の関数を自作していたものだが、
今は、SQL が楽で良い。
・本式のコードでは、毎回キーテーブル読み込みを行うようなことはしない。
初期化時に行うこと、関数化するとこ、エラー処理などが必要である。
dim sch as string
dim k1 as string
dim d1 as string
dim d2 as string
dim d3 as string
dim fnd as boolean
dim shtm as double  '** 不要
dim rec as string
dim schmax as long
dim i as long
'** キーテーブル読み込み
open "index.dat" for input as #1 len = 32000
line input #1, rec
schmax = rec
redim schkey(schmax) as string
redim schadr(schmax) as string
i = -1
do until eof(1)
i = i + 1
input #1, schkey(i), schadr(i)
loop
close #1
'** サーチキー指定
sch = "099999"
'** キーテーブルサーチ
shtm = timer  '** 不要
for i = 0 to schmax
if schkey(i) > sch then exit for
next
i = i - 1
if i  sch then
fnd = false
exit do
end if
loop
close #1
shtm = timer - shtm  '** 不要
'** サーチエラー
if fnd = false then
msgbox "見つからない。"
end
end if
'** サーチ結果
print shtm  '** 不要
print k1
print d1
print d2
print d3
-- 結果
0.000 秒  sch = "099999"  (測定不能)
0.000 秒  sch = "000009"  (測定不能)
** ファイルのどこのデータも平均的に高速検索できる。
ISF インデックスシーケンシャルファイル
・その昔、CSP/F5 の ISF に惚れて、PC 用に自作したことがある。
通常のシーケンシャルアクセスとキーによる昇順、降順のリードが可能で
あった。逆読みは当時 RDM でしか不可能だっため、我ながら良く作ったと
思う。既にマシンコードを捨ててしまっていので細かなコードはないが、
理屈だけ公開しておく。
・キーファイルの持ち方が、多様なアクセスを実現する。
私は、
キー
レコードポインタ
ひとつ前のレコードポインタ
ひとつ後のレコードポインタ
排他プロック
と言う持ち方をした。
シーケンシャルによる逆読みでは、ひとつ前のレコードポインタをたどって
いけば良い。
ランダムアクセスは、いかに目的のキーを少ない手順で見つけるかにある。
先の例のようなキーテーブルをなめるように読み方ではダメである。
具体的には、乱数と親子関係を利用して、目的のレコードを探す。
当時 16bits 5MHz 30000 件でも非常に有効なレスポンスが得られた。
なんだが捨ててしまったのが惜しいと感じるこの頃である。
(なんたって、もう細部のアルゴリズムが思い出せない。) (^^;
・データファイルは、データプロックが可変長である場合、非常にキーファ
イルの更新がやっかいになる。
私は、固定長でデザインしていた。
データプロックが固定長であれば、追加、修正、削除のキーファイルに
対する更新手数が三つで済む。
・現在の PC の CPU パワーとメモリ搭載量を考えると、複雑なロジックより
も単純なもので、十分実用になることも多い。
10 万件なめ読み 0.359 秒の性能には正直驚いた。
昔から、人が待てるのは、2 〜 3 秒とよく聞く。
平均的な PC パワーで、その程度のレスポンスが得られるもっともシンプル
なコードが一番良いのかもしれない。
VB テクニック編資料
2001.06.24 VB テクニック編1 - Windows API、OS 判定、ユーザ取得、初期化ファイル
2001.06.24 VB テクニック編2 - Windows API、ウィンドウハンドル取得、ウィンドウ制御
2001.06.24 VB テクニック編3 - コマンドパラメタ取得、パス切り出し、半角変換
2001.06.24 VB テクニック編4 - 数値変換、文字列変換、バイト操作、まるめ計算
2001.06.24 VB テクニック編5 - カレンダー計算、通算日、月末日、うるう年、曜日
2001.06.24 VB テクニック編6 - CSV ファイル項目数取得、クイックソート昇順・降順
2001.06.24 VB テクニック編7 - コモンダイアログ、編集入力、コントロール制御、メニュー
2001.07.12 VB テクニック編8 - Excel 起動、Word 起動、メール送信、メール受信
VB テクニック編 - メール送信関数 SndMail 仕様、設定
2001.07.12 VB テクニック編9 - 空白除去、文字変換、フォルダ名、パス分解、ファイル日付
2001.07.12 VB テクニック編10 - グラフ表示、グリッド、インターネット、外部出力 RDO, ADO
2001.07.12 VB テクニック編11 - フォーカス、コンボボックス、チェックボックス、その他
2001.07.20 VB テクニック編12 - CSV テキストファイル形式仕様、ハンドリングサンプル
2002.04.15 VB テクニック編13 - バッチ実行、EXE バッチ実行、関連付け実行、文字列置換
2001.08.22 VB テクニック編14 - 動的コントロール追加、クリスタルレポート印刷
2001.08.24 VB テクニック編15 - タイマーイベント、リストボックス選択、データコンポ複数列
2001.09.01 VB テクニック編16 - Excel XLS シート読み込み、XLS シート書き込み
2001.09.21 VB テクニック編17 - プリンタ一覧取得、プログレスバー、リストビュー
2001.09.24 VB テクニック編18 - CSV テキストファイルインポート
2001.09.26 VB テクニック編19 - Excel シートインポート、Excel シートエクスポート
2001.10.01 VB テクニック編20 - 数値チェック、文字チェック、日付チェック、時間チェック
2001.10.03 VB テクニック編21 - RDO、ADO、oo4o 列見出し取得
2001.11.03 VB テクニック編22 - ファイル検索、ディレクトリ検索、データグリッド(DataGrid)
2001.10.25 VB テクニック編23 - LHA 圧縮解凍 unlha32.dll
2001.12.06 VB テクニック編24 - 任意文字カウント、文字列反転、スクロールバー
2001.12.08 VB テクニック編25 - oo4o CSV エクスポート、oo4o CSV インポート
2001.12.08 VB テクニック編26 - oo4o Excel エクスポート、oo4o Excel インポート
2001.12.08 VB テクニック編27 - EBCDIC・JEF  CSV S-JIS コードコンバート
2002.02.20 VB テクニック編28 - データベースレコードの特別な排他制御
2002.03.10 VB テクニック編29 - CSV ファイル入出力 簡単版、汎用版、無敵版
2002.03.10 VB テクニック編30 - 索引ファイル、インデックスファイル、テーブルサーチ
2002.03.16 VB テクニック編31 - サブクラスコントロール、フックプロシジャ、メッセージ処理
2002.04.08 VB テクニック編32 - ファイル分割・統合、バイナリファイル I/O
2002.04.09 VB テクニック編33 - シーケンシャルマッチング、シーケンシャルマージ処理
2002.06.12 VB テクニック編34 - テキストファイル行数計算、文字数計算、クリップボード
2002.05.21 VB テクニック編35 - メッセージ送受信処理、RegisterWindowMessage
2002.06.24 VB テクニック編36 - テキストファイル内文字列検索、ファイル内文字列置き換え
2002.07.03 VB テクニック編37 - 二重起動禁止、常に手前に表示、SetWindowPos
2003.05.01 VB テクニック編38 - PC 情報取得、OS 種別、ユーザ名、ホスト名、IP アドレス
2003.06.01 VB テクニック編39 - Windows 終了、ExitWindowsEx、EWX_POWEROFF
VB 入門編資料
2001.09.24 VB 入門編1 - プログラミング入門、言語環境、言語構造、フリーソフト開発
2001.09.24 VB 入門編2 - 変数とは、変数タイプ、変数宣言、定数宣言、アスキーコード
2001.09.24 VB 入門編3 - 演算子、比較演算子、論理演算子、is 関数
2001.09.24 VB 入門編4 - 注釈、数値リテラル、文字リテラル、トークン、構文、特殊文字
2001.09.24 VB 入門編5 - 制御構造、判定、判断、分岐、ループ、if、select case、for、do
2001.09.24 VB 入門編6 - 関数構造、function、sub、組み込み標準関数、エラートラップ
2001.10.27 VB 入門編7 - NULL 概念、chr(0)、&H0、\0、IsNull
VB 基礎編資料
2000.10.07 VB 基礎編 (その一) 数値計算、変数タイプ、演算子 dim、enum、vbCrLf
2000.10.07 VB 基礎編 (その二) 変数宣言、グローバル、ローカル redim、const、type
2000.10.07 VB 基礎編 (その三) 制御構造(判定、ループ) if、select case、for、do、while
VB 基礎編 - 【補足】条件式 and、or
2000.10.07 VB 基礎編 (その四) 標準ファイル I/O open、eof、print、curdir、name、kill
ファイルシステムオブジェクト
2000.10.07 VB 基礎編 (その五) 関数構造(sub、function) private、public、ByVal、ByRef
2000.10.07 VB 基礎編 (その六) 文字列操作 chr、str、trim、left、mid、len、instr、format
2000.10.07 VB 基礎編 (その七) 数値関数 int、FormatNumber、FormatCurrency
2000.10.24 VB 基礎編 (その八) 日付時間関数 DateSerial、DateDiff、DateAdd、DateValue
2000.10.24 VB 基礎編 (その九) その他関数 declare、IsNull、hex、CDec、split、Choose
2003.05.07 VB.NET 編1 - 言語仕様変更点、変数タイプ、関数構造、廃止された言語要素
VB ビジュアル編資料
2000.10.08 VB ビジュアル編 (その一) フォーム form_load、form_unload、show、hide
2000.10.08 VB ビジュアル編 (その二) ラベル label、caption、refresh、alignment
2000.10.08 VB ビジュアル編 (その三) テキストボックス tabindex、text_change、keypress
2000.10.08 VB ビジュアル編 (その四) コマンドボタン command_click、default、enabled
2000.10.08 VB ビジュアル編 (その五) コンボボックス combo_change、additem、sorted
2000.10.08 VB ビジュアル編 (その六) リストボックス list、FileListBox、additem、sorted
2000.10.08 VB ビジュアル編 (その七) メッセージボックス MsgBox、InputBox
2000.10.08 VB ビジュアル編 (その八) その他関数 sendkeys、setfocus、IMEStatus
2002.11.08 VB ビジュアル編 (その九) ユーザコントロール(OCX) 作成、ActiveX ウェブ
|
VB |
SQL |
Perl |
PHP |
ASP |
JSP |
C |
PC |
HP |
FAQ |
フリーソフト |
Copyright (C) 1999-2015 Y.SAK
VB テクニック編30 - 索引ファイル、インデックスファイル、テーブルサーチ - SAK Streets
