概要
Verdi3™自動デバッグ・システムは、複雑で馴染みのないデザインの動作の理解、困難かつ時間のかかるデバッグ・プロセスの自動化、多様かつ複雑な設計環境の統一を支援する、強力なテクノロジを備えたデジタル設計をデバッグするための高度なオープン・プラットフォームです。
Verdiデータシート
VC Apps Video
デバッグ時間を削減
Verdi3システムによって、一般的にデバッグ時間を50%以上削減できるため、設計者はデザインの品質向上に専念できます。 次のようなユニークなテクノロジが大幅なデバッグ時間短縮を可能にしています。
独自のビヘイビア解析テクノロジによる自動トレース
柔軟性に優れた高性能なデザイン・ビュー内で、関連するロジックを抽出、切り分け、表示
設計、アサーション、テストベンチ間の動作と相互関係を明示
図1: Verdi3システム独自のビヘイビア解析テクノロジによって、
デバッグの手間のかかる多くの作業を自動化
統合されたデバッグ・システム
Verdi3自動デバッグ・システムには、デバッグ・システムに必要なあらゆるテクノロジや機能が組み込まれています。 また、Verdi3システムは高度なデバッグ機能を備え、広範な言語や手法をサポートしています。
主な機能
Verdi3システムは以下に示す基本的なデバッグ機能を備えています。
時系列でアクティビティを表示および解析できる高機能な波形ビューア
Fast Signal Database(FSDB)ファイル間の不一致箇所を特定する高性能な波形比較エンジン
ソースコードと階層ブラウザ間の連携を容易にするソースコード・ブラウザ
馴染み深いシンボルを用いてロジックと接続関係を表示できるフレキシブルな回路図とブロック図
ステートマシンの動作を把握できる直観的な状態遷移図
高度な機能 
Verdi3システムには、以下のような高度なデバッグ機能もあります。
高性能なビヘイビア解析テクノロジを用いて、多数のクロックサイクルにわたって信号をすばやくトレースできる信号アクティビティの自動トレース
時間と構造を組み合わせて表示し、因果関係を即座に把握できるTemporal Flow View
柔軟なトランザクションとメッセージダンプのサポート機能を備え、高い抽象度でデザインのデバッグと解析を可能にするトランザクションベース・デバッグ
アサーションの組み込みサポートにより、アサーションエラーから関連する設計アクティビティにすばやく移行できるアサーションベース・デバッグ
SystemVerilogテストベンチ・デバッグには、以下の機能が備わっています。
SystemVerilogテストベンチ(SVTB)とUniversal Verification  Methodology(UVM)などのライブラリの完全なソースコードのサポートにより、テストベンチ・コードの再利用性と相互運用性を確保 
宣言ベースの階層ブラウジングおよびナビゲーション、クラスの継承ならびに関連性の把握、トレース機能などをサポートし、テストベンチ・コードをわかりやすくする専用ビュー 
ポストシミュレーション検証環境におけるテストベンチの動作の全体像を示す高度な可視化テクノロジを備えた、組み込みのメッセージ・ロギング機能とUVMトランザクションダンプ機能
フル機能のインタラクティブなシミュレーション・コントロールが、複雑なテストベンチ・コードを踏まえながらより詳細な解析を可能に
UVM考慮のデバッグビューにより、リソース、ファクトリー、フェーズ、シークエンスなどUVMの様々な局面からの検証結果検討が可能
トランザクション・レベルのデバッグビューは拡張されたFSDBに基づき、新規トランザクションと関連データのダンプをサポート
図2: 組み込みのUVMインテリジェント・ビューアを使ったUVM考慮のデバッグ
言語とメソドロジ 
Verdi3システムは、以下の言語およびメソドロジをサポートしています。
Verilog、VHDL、SystemVerilogで記述されたデザイン・コンポーネント
SVTB、UVM、OVM、VMMを用い、自動化されたテストベンチ環境
SystemVerilogアサーション(SVA)を用いたアサーション
最適化されたオープン・アーキテクチャと統一されたメソドロジ
Verdi3自動デバッグ・システムは、検証およびデバッグ・メソドロジを最大限に活かせるように設計されています。 Verdi3シ  ステムはオープンなDesign Knowledge   Architectureをベースに構築されています。コンパイラは、効率的なデバッグを行うために最適化されたデータベースに重要な情報を抽出します。     これにより、複数の検証ツール、設計/検証言語、抽象度など多岐に渡るデバッグ領域においてシームレスな一貫した操作が可能となり、デバッグ・プロセスが  統一化されます。   このような統一性によって、作業習得に割く時間を削減し、異なるツールや言語を使用した新しいプロジェクトへの速やかな移行を促します。また、他のツール  やメソドロジが進化した場合でも、Verdi3システムへの投資を活かすことができます。
Design Knowledge Architectureは以下の要素で構成されています。
HDLコード、テストベンチ、アサーション内の設計知識を抽出する知識エンジン・コンパイラ
デバッグとデザインの理解を容易にするための重要な設計知識を保持する知識データベース(KDB)
時間/値シーケンスを生成するシミュレータ、エミュレータ、およびフォーマルツールからの結果を保持するFast Signal Database(FSDB)
データベースとコマンドベースのコントロールメカニズムの両方に対してオープンなアクセスを可能にし、Verdi3システムと他の検証ツールや設計環境を容易に統合するアプリケーション・プログラミング・インターフェイス(API)
第三世代のデバッグ・プラットフォーム 
Verdi3プラットフォームは、デバッグを最大限に効率化するため、パーソナリゼーション、カスタマイズ、相互運用性という3つ  のキーワードに代表されるコアテクノロジを基に構築されています。   大規模かつ複雑な設計のデバッグを速やかに行い、エンジニアが利用している手法に合わせてデバッグ環境をカスタマイズし、独自のプログラムやサードパー  ティのプログラムを自身のデバッグ・フローに直接、統合することが可能です。 インフラストラクチャの高速化、小型化、効率化: 
マルチスレッド・データベースにより性能が45%以上向上
コンパクトなフォーマットによりファイルサイズを30%以上削減
シミュレーション時のパラレルダンプにより生産性が30%向上
パーソナリゼーションに適した柔軟なグラフィカル・ユーザー・インターフェイス:
ソースファイル、ビデオ、ユーザー定義ドキュメントに迅速にアクセス可能
デバッグ目的に応じたウィンドウ・レイアウトを設計者が自由に変更可能
デバッグ目的に応じたワークモード選択 
コマンド、設定、ドキュメントを検索するスポットライト機能
カスタマイズフローに対応したVC Apps とのシームレスな統合:
充実したVC Appsプログラムにより、ユーザー・フローに必要なVerdi3の導入をカスタマイズ
メニュー/ツールバーのカスタマイズ機能を利用し、Verdi3のユーザー・インターフェイスでVC Appsの機能を有効化
VC Appsに対応したサードパーティ・ツール/スクリプトをデバッグ環境から直接起動
図3: Verdi3 は総合的なデバッグソリューションを提供
図4: Verdiをカスタマイズする際のプラットフォーム、VC Apps
相互運用性とカスタマイズ 
Verdi3プラットフォームのオープン・アーキテクチャと相互運用性を活かし、他の市販の検証ツールや内製の検証ツール等とも容  易に統合できるため、既存の投資が無駄になりません。Verdi3と統合されるパートナーの数は年々増え続け、一般的に使用されている以下のような広範な市販ツールを標準サポートします。 
シミュレータ
エミュレータおよびアクセラレータ
モデルチェッカおよびその他のフォーマル解析エンジン
データ・マイニングや特定の操作を行うアプリケーションなど、設計知識インフラストラクチャを基盤として利用するカスタム自動化プログラムを使用することで、Verdi3の能力をさらに高めることができます。 VC Appsとのシームレスな統合により、オープン・ソース・スクリプト/ユーティリティを迅速に作成し、フロー上で確実に動作するVerdi3ソフトウェアと統合するために必要なあらゆるものを提供します。
パーソナリゼーションに対応したグラフィカル・ユーザー・インターフェイス 
Verdi3プラットフォームは、QTベースのGUIを備え、以下のように柔軟な活用方法に対応します。
以下のような情報およびデバッグ・モードにアクセスするためのウェルカムページ 
リリースノート、アプリケーション・ノート、コマンド・リファレンス・ドキュメント
ハードウェア・デバッグ、テストベンチ・デバッグ、パワーを考慮したデバッグ、プロパティ・デバッグなど、異なるデバッグ作業を行うためのワークモード
デバッグ作業の復元/続行のためのスクリーンショットおよびテキストメモを含めて保存されたセッション
主要機能の使用法を示すトレーニング・ビデオ
ドキュメントやWebページを共有するためのカスタマイズ可能なユーザー・リンク
デバッグ環境のレイアウトをパーソナライズするウィンドウ管理システム 
すべてのコンポーネントはメインウィンドウ上でDock/Undockが可能
プルダウンメニュー、マニュアル、ユーザー設定の検索を行い、迅速かつ効率的なナビゲーションをサポートするスポットライト検索
さまざまな抽象度にわたるデバッグと解析
Verdi3プラットフォームにより、システムレベルからゲートレベルまでのメソドロジフローのどこにおいても、シームレスにデ  バッグを行うことが可能です。 さらに、nAnalyzer Design Implementation Analysisモジュールは、クロック、クロックツリー、タイミングに関連する困難な設計エラーの解析を同一環境上で可能にし、インプリメンテーション  レベルにおける検証と解析をサポートします。
パワーを考慮したデバッグ・モジュール
Verdi3のパワーを考慮したデバッグ・モジュールは、パワー・インテントの理解を促し、パワーに起因するエラーの原因を可視化  し、トレースし、解析するという作業を自動化します。 さらに、独自の自動化テクノロジにより、UPF/CPFに定義されたパワー・インテントの可視化、HDL設計におけるパワー・インテントの影響の把握、意 図しないデザイン動作が、ファンクションロジックに起因するのか、パワー関連の問題に起因するのかを特定するデバッグの自動化をサポートし、低消費電力 SoC設計の検証を容易にします。
パワーを考慮したデザイン・インテントのデバッグ
Verdi3のパワーを考慮したデバッグ・モジュールは、パワー・インテントの理解を促し、パワーに起因するエラーの原因を可視化し、トレースし、解析するという作業を自動化します。 さらに、以下のような自動化テクノロジにより、低消費電力SoC設計の検証を容易にします。
UPF/CPFに定義されたパワー・インテントの可視化
HDL設計におけるパワー・インテントの影響の把握
意図しないデザイン動作が、ファンクションロジックに起因するのか、パワー関連エラーに起因するのかを特定するデバッグの自動化
図5: ユーザはVerdi3 環境のレイアウトとデバッグモードをパーソナライズできる
図6: パワーデザイン・インテントを考慮した完全なデバッグビュー
ローパワーデバッグの課題
ローパワー設計の条件は、既にさまざまな問題を抱える検証工程をさらに複雑にしています。   RTLデザインは、機能やタイミングを表すことができますが、パワー・ステートを表すことはできません。   ゲートレベルデザインにはあらゆる情報が含まれていますが、検証に過大な手間がかかります。 パワー条件が変更された場合、IPの再利用は不可能です。   設計や検証メソドロジ全体に対してパワー・インテントを記述できる一貫したフォーマットに対する要求は、以下のような新たな課題を生み出しました。
検証フローに対する新しいPDML言語(UPF/CPF)の登場
HDL設計でパワー仕様を把握できる、パワーを考慮した設計環境の必要性
HDLデバッグとパワーを考慮したデバッグ・ツール間でのギャップの発生
パワー・インテントを理解する 
Verdi3のパワー考慮デバッグ・モジュールは、パワーを考慮しながら完全にデザインを理解するため、パワー・インテントをRTLデザインデータに関連付けた高度な表示機能を提供します。 主な機能は以下のとおりです。 
UPF、CPFソースコードのフルサポートにより、パワーデザイン・データをFSDBにインポートし、コンパイルすることが可能
使いやすいPower Managerブラウザにより、以下のことが可能 
パワー・ドメイン、パワー・ネットワーク、パワー・ステート/モードを可視化
すべてのデザイン・ビュー(nTrace、nSchema、nWave)でパワー・インテントをアノテート表示
各パワー・ドメインに対して、パワー関連の制約(パワースイッチ・ルール、リテンション、アイソレーション、レベルシフタ・ルール)を特定
PDMLとあらゆるデザイン・ビューとを、ドラッグ・アンド・ドロップでクロス・プローブし、パワー関連の問題原因を特定
パワーを考慮したデバッグの自動化 
Verdi3システムの自動HDLデバッグ機能を使用して、HDLデザインとパワー・ドメインを考慮しながらパワーに関連するデザイン動作の根本原因をトレースすることができます。 主な機能は以下のとおりです。 
オリジナルのソースコード上で、異なるパワー・ドメインにわたってパワー・インテントにドライブされた信号パスを自動展開
Power Managerとあらゆるデザイン・ビュー間のドライバ/ロード信号の自動トレース
HDLコードとCPF/UPFコード間でシームレスにトレースを行うための、Power Manageやその他のデザイン・ビュー上でのダイナミック・パワー・モードのアクティブ・アノテーション
セーブ/リストア信号とともにリテンション・レジスタのような電力回路を表示し、コントロール信号の自動トレースが行えるテンポラル・フロー・ビュー
任意のシミュレーション時刻における任意の信号の現在のパワー・ステートを自動的に特定するパワー・ステートモニタ
アイソレーション・ルールや、電源のオン、オフといったパワー・インテント・ルールによって生じた値の特殊な視覚的表示
パワー・ドメインごとにパワー・インテントに影響される信号と、そのインスタンス(ドライバ/ロード)のレポート
選択信号のX、およびそのドライバと関連するパワー・ステートの自動表示
パワー検証ギャップの克服
Verdi3のパワー考慮デバッグ・モジュールは、パワー・フォーマットやHDLの自動デバッグを行うという革新技術を統合した万  能なプラットフォームを提供することにより、パワーの検証ギャップを克服します。   HDL設計とUPF/CPFコードの双方で複雑なパワー・ビヘイビアを簡単に可視化、トレース、解析することができ、エンジニアは検証工程の早い段階でパ  ワー問題を解決し、貴重な検証期間を短縮することができます。
nAnalyzerインプリメンテーション解析モジュール
nAnalyzer™インプリメンテーション解析モジュールは、通常、合成やそれに関連したRTL記述をテープアウト可能なゲートレベルネットリストに変  換する作業で発生する重大な設計インプリメンテーションの問題を把握し、デバッグすることができる単一システムを提供します。   フロー全体を通じて、このような変換はタイミング収束、消費電力、クロック手法に影響を与えます。   このような分野の有害な影響を検出し、解決するためには、従来のシミュレーションフローとは別に特殊なツールと技術を使用して設計を解析しなくてはなりま  せん。 nAnalyzerソリューションは、以下の機能を使用してこのような解析ステップを増やし、実現しています。 
強力なクロックツリーとクロックドメイン抽出/解析エンジンを使用したクロック関連ロジックで、問題の探査、解析、特定を実行
ネットリストの解析、Standard Delay File(SDF)情報、シミュレーション結果によって、プロセスの速い段階で潜在的なタイミング、電力、ホットスポット問題を特定および分離
nAnalyzerソリューションと統合したサードパーティのクロック、タイミング、パワー解析ツールの結果を表示、理解、探査
Verdi3自動デバッグ・システムに搭載された強力な追跡機能と探査機能を使用して、組み込み機能またはサードパーティ機能で特定した問題をデバッグおよび分離
図7: デザインの諸問題を単一の包括的な環境で解析、デバッグ
クロックツリーとクロックドメイン解析
今日の複雑な設計には、特殊で洗練されたクロック技術が必要になります。   クロック領域が複数の場合、異なる領域間で交わされるデータを同期させる必要があります。   低消費電力を実現するには特別なクロックゲーティング技術が必要です。   サードパーティIPを統合した場合、IPインターフェイスでクロックに関連する予期せぬ問題が生じます。   こうした要因によってクロック回路がさらに複雑化し、実装エラーや不適正な動作を引き起こしやすくなります。   nAnalyzerソリューションには、クロックに関連する共通の問題を包括的に探索し、デバッグできる高性能な解析エンジンが組み込まれています。
ロック解析機能:
クロックツリー、クロックドメイン、クロックドメイン間のクロスパスをRTLまたはゲートレベル記述から抽出
テキストフォームで解析結果を表示、または直観的なVerdi3スケマティックで結果を表示および探査
クロックソースを特定するためにSDC情報をインポートし、さらに解析を制約
クロックツリー合成(CTS)スクリプトが正確か、不完全な制約がないかを事前にチェック可能
SDCスクリプトやCTSスクリプトをインポートおよびエクスポートし、CTSプロセスを実行
抽出されたクロックツリーとノンクロックピンに接続した外部クロック等、共通の問題を特定
ユーザー定義の同期化手法で適切なクロスドメインの同期化を検証
レベル遅延、スキュー、スラック時間といったタイミング詳細を抽出および表示するために、SDF情報およびスタティック・タイミング解析の結果をインポート
タイミング解析とパワー解析
タイミング解析とパワー解析の領域で、包括的な解析や検証を行う専用ツールはありますが、このようなツールとは別にタイミングや電力の問題をインタラク  ティブに探索することが役に立つ場合もあります。 場合によっては、包括的な解析を行うために必要なデータを入手できないことがあります。   また、専用ツールで解析を実行すると時間がかかる可能性がありますが、迅速に概算結果が得られればいい場合もあります。   nAnalyzerソリューションは、タイミングとパワー両方の領域でこのような要求を満たす解析機能を提供します。
タイミング解析機能
共通のスタティック・タイミング解析(STA)ツールからレポートをインポート
クリティカルパスの詳細をテキストフォームで表示、または直観的なVerdi3スケマティックで表示および探査
SDF情報をインポートし、回路図ビューに遅延情報をアノテート
インポートした遅延情報に基づいて最長/最短のパスを計算し、表示
図8: クロックツリー合成フローにおいてnAnalizerを使うことにより、CTS結果の理解と改善が可能
パワー解析機能
シミュレーション結果を解析し、スイッチング動作が最も多いエリアを特定
スイッチング動作を信号、モジュール、時間、期間によって分類および探索
Verdi3の高性能なトレースおよび可視化機能を使って関連するロジックを探索
サードパーティ・ツールとの相互運用性
イミング、パワー、クロック手法に関連した問題を解析し、解決するためには、多くの場合、この分野に特化した最高水準のアプリケーションが必要になります。 nAnalyzerソリューションは、使い慣れたVerdi3環境で解析結果をインポート、表示、探査することにより、これらの専用ツールの操作性を向上させます。
組み込みソフトウェアのデバッグ
Verdi3 HW SW DebugはVerdi3自動デバッグシステムと共に使うことができ、複数ウインドウにてSoC設計のハードウェアとソフトウェアのデバッグビューを包括的に提供します。Verdi3の統合されたデバッグ環境を使えば、ハードウェア技術者とソフトウェア技術者が同時に、ハードウェア・デバッグビューおよびソフトウェア・デバッグビューにてデザインを確認することができます。これは、C/C++やアセンブリーコード、メモリー、レジスター、ブレークポイント・ウインドウを含みます。詳細はVerdi3 HW SW Debugデータシートをご参照ください。
Verdi
