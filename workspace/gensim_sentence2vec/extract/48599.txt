絶対値関数を用いて最大値関数を表す
最大値関数とは, 次の関数のことです(ここでは実数のみ扱います).
この関数, 3つの(実質2つの)場合分けになっていますが, 実は絶対値関数を用いると一つの式で書くことができます.
数直線上ではとの中点から, との距離の半分を足す, と言った具合です.では, 3つの最大値関数はどうなるでしょう.
最大値関数は畳み込んで定義することができますので, 次のようになります.
なんだか対称式じゃないし, あまり綺麗じゃありません. 無理して対称式にすることはできますが, 項が増えて汚いです.
符号関数を用いて最大値関数を表す
次のような関数を考えます.
これはの方が大きい時に限って, の効果を発揮するような関数です. はここではと定義しましょう. の効果を発揮する関数と足し合わせると,
つまり, いかなる条件でも
が成立することが分かりました. これが, 最大値関数の符号関数を用いた表現です. この表現, 実は先程の絶対値の表現と全く同じものです. が成立するからです. しかし敢えて符号関数を用いることは, 3つの最大値への足がかりとなります.3つの最大値を考えましょう. 先程と同様, の効果を発揮する関数を考えます.
こういう関数を, に関しても考えて足せばいいだけです.
この式は, とその巡回の時は成立しますが, の時は成立しません.
2変数の時はでも成立したけど, 今回はそうは行きませんでした. とは言え, そういう特殊な場合を除いて対照的な式で書けたのは, 良いことです. なぜなら, 次の一般的な式を得ることができるからです. (添字はで巡回させます)
ここでもやはり, 「同じものはない」という仮定を置いています. よくよく調べると, ある補正項を用いて, 次のように書けることが分かりました.
ここでとは, 同着で最大値となる個数のことです. 例えば{1, 2, 2}なら, {2, 2, 2}ならとなります. 美しい式ですね.
行列式を用いて最大値関数を表す
驚くべきことに, 符号関数表現は行列式に書きなおすことができます. 逆に下の行列式を展開したらさっきの符号関数による表現になります.
或いは, 次の式も成り立ちます.
3つの最大値も次のように書くことができます.
非常に美しいです. 鳥肌が立ちそうです. 同じものがあったら成り立たないけど, この美しさのもとでそんなものは何でもないです. この行列式を展開したら符号関数の2乗が出てくるので, 同じものはないという仮定のもとでそれを1とすると, さっきの符号関数による式と一致します. 例えばが一番大きいとすると, 行列のその行はとなって, その1の連続が一番下の行とうまく消えるんですね.この式からの類推で, 2変数の最初の方の行列の真ん中の列にを掛けたくなる気持ちは物凄くよく分かりますが, なんか余計な符号関数が全体にかかって綺麗じゃありません.
4つ, 更に一般の個数の最大値も同じように行列式で表せるか, という疑問が出てきますが, これについては僕は分かりません. 4つの場合についてはプログラムで探索したのですが, あらゆる条件に於いて一つの行列式で表せる, みたいなそういうことは無いと思われます. 大小関係で言うと24通りありますが, そのうちの幾通りかで成立するかという勝負になり, 最高で20通りで成立する式があるんです. おそらく「置換」に関する云々かんぬんだと思います. (あやふや無責任
最大値関数と符号関数と行列式の美しい関係 - プログラムモグモグ
