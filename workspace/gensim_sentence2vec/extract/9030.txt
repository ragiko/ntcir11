旧来のDHTMLの手法では、JavaScriptから操作できるHTML要素には限りがありましたが、DOMでは、HTML上のありとあらゆる要素を自由自在に読み取ったり、書き換えることができるようになります。本連載では、おもにDOM Level 1で規定されている手法を使い、JavaScriptでどのようにHTML上の要素へアクセスするのか、そして、それをどうやって書き換えるのかを詳しく解説します。これにより、JavaScriptからHTML要素を手に取るように操れるようになります。 
前回「HTMLタグ名や属性値からの参照をマスターしよう」では、HTML文書から特定のタグ要素を参照する2つの方法を学びましたが、DOMにはまだほかにも要素を参照するインターフェイスが規定されています。そしてもう1つ重要なことは、HTMLにはタグ要素が存在しない場合もあるということです。JavaScriptエラーとなり、その場で処理が終了しないためにすべきこととは何でしょうか。
本連載は、ソフトバンククリエイティブ刊行の『標準DOMスクリプティング』のうち「第2章 DOMの基本」を、同社の許可を得て転載するものです。
本書は、DOM(Document Object Model)とJavaScriptの関係を分かりやすく解説しています。さらに、JavaScriptからDOMを介して、いかにしてHTMLやXMLの操作ができるのかを紹介しています。またこれらのことを学びながら、クロスブラウザ対策の重要性も理解できるようになると思います。
なお、 Webでの連載として転載するに当たり、若干表現を変更している点があります(例えば「本書は」としている部分は「本連載は」としていることや図版などの省略など)。その点ご了承ください。
【注文ページへ】
HTML文書から特定のタグ要素を参照する2つの方法を学んできましたが、DOMには、まだ他にも要素を参照するインタフェースが規定されています。それは、ある特定の要素からの相対位置で参照するインタフェースです。相対位置とは、基準となる要素から見て、親要素なのか子要素なのか、もしくは同列の要素なのかを意味します。具体例を見ていきましょう。
DOMの基本を学ぼう(3):ノード参照時におけるエラーハンドリング手法を学ぼう (1/2) - @IT
