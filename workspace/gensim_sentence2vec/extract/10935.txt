Hadoopとは何かを解説し、実際にHadoopを使って大規模データを対象にしたテキストマイニングを行います。テキストマイニングを行うサンプルプログラムの作成を通じて、Hadoopの使い方や、どのように活用できるのかを解説します
Passive-Aggressiveとロジスティック回帰で精度向上
前回の「実践! 「MapReduceでテキストマイニング」徹底解説」では、「青空文庫」の作品から学習を行い、テキストデータから著者の寿命を推定するMapReduceプログラムを作成しました。
今回は、前回のプログラムを少し変更するだけで、精度が上がる「Passive-Aggressive」というアルゴリズムを実装します。また、テキスト分類のアルゴリズムとして、「ロジスティック回帰」を実装していきます。ロジスティック回帰という名前が付いていますが、今までのように寿命の値を直接推定する回帰問題ではなく、寿命を10〜14歳、15〜19歳、20〜24歳などにカテゴリに分けて、どのカテゴリに属するか推定するテキスト分類問題として扱います。
今回のサンプルプログラムを使って、テキストから作者の寿命を推定するWebページを作ってみました(筆者個人のページとして運用しています)。
今回の記事のサンプルコードは、こちらからダウンロードできます。
なお、マークが付いた数式が実装に使用する数式です。それ以外は、「なぜマークの数式を実装すればいいのか」という解説です。途中の解説がよく分からなかった場合は、の数式さえ実装できればいいと思って、読み飛ばしても構いません。MapReduceのプログラムを見て、マークの数式をどのように実装しているか理解できればいいと思います。
寿命がどれぐらい予測できるか検証
本題に入る前に、今回の記事で紹介したアルゴリズムを使ってどれぐらい寿命が推定できるのか検証してみます。
平均絶対誤差
寿命がどれぐらい推定できているか、検証してみました。
グラフの縦軸は、寿命の推定結果と、正しい寿命との差の絶対値の平均を表しています(これを「平均絶対誤差」といいます)。「データ(青空文庫の作品)を5分割して、4つで学習させて、1つでテストを行う」というのを5回繰り返しました。
ロジスティック回帰では、正しい寿命と予測の差の平均が6.2歳なので、それなりに推定できていると思います。
「存れ」「獣」がマイナス、「福井」「ユンケル」がプラス
では、どのような言葉が寿命に影響しているのでしょうか。Passive-Aggressiveでの推定で寿命に影響している単語を調べてみました。まず、マイナスに影響している単語です。
単語 
重み 
ひとつ
テキストマイニングで始める実践Hadoop活用(最終回):Hadoopによるテキストマイニングの精度を上げる2つのアルゴリズム (1/3) - @IT
