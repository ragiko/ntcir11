ソフトウェアのテストは、作成したソフトウェアがユーザの意図した通りに動作するかどうかを確認するために行います。
テストには、単体テスト、結合テスト、システムテスト、運用テストの4段階があります。
テストの粒度が変わるため、確認の対象が若干変わりますが、基本的には先述の内容を保障するものです。
用語の意味です。
テストケース
確認項目を確認するためのユーザの操作内容やデータの状態のパターンです。
このパターンによって、確認できる確認項目が変わります。
確認項目
画面、帳票、データの項目等、実際に確認する内容です。
データの状態等による条件分岐がある場合には、条件毎に設定します。
(期待する結果が異なる場合、別の確認項目として導出します)
テストケースと確認項目は、以下のように決定します。
・ユーザが行う操作内容
例)削除ボタンを押す等。
・入力値によって結果が変わるかどうか
入力値によって期待する結果が異なる場合は、ケースを分けること。
例)一覧からデータを選択した状態で削除ボタンを押す。
一覧でデータを選択していない状態で削除ボタンを押す。 等
※複数の条件によって結果が変わる場合には全ての条件を洗い出し、テストケースとして設定します。
《確認項目》
テスト工程(単体、結合、システム、運用テスト)の段階によって、確認項目は変わります。
1.単体テスト
・原則、確認項目は1ステップ毎に設定します。
(DBへの接続/切断、ファイルを開く/閉じる、値の設定 等)
2.結合テスト
・各機能を連携した結果を確認します。
(ある機能の処理結果を別の機能で処理した結果、意図した結果になるかどうかを確認します)
・確認項目は、ある機能の処理結果を別の機能で処理した結果毎に設定します。
例)xx画面で保存した内容を画面で表示できること
xx機能で処理した結果を機能でエラーが発生することなく処理できること 等
3.システムテスト
・実際にユーザに操作してもらい、動作が正しいか確認します。
・操作のシナリオ(手順、データのシチュエーション等)で確認します。
4.運用テスト
・実際に稼動している生のデータを使って動作が正しいか確認します。
・システムテストと同時に行われることもあります。
※システムテストと運用テストはユーザの視点からのテストです。
そのため、画面、帳票、データ上の全項目について確認します。
《検証物件》
・期待した結果が得られたかどうかを確認するための物件を決めます。
検証物件には、以下のようなものがあります。(以下は一例です。)
1.実行前後の画面
2.出力した帳票
3.実行前後のデータベースの内容
4.ファイルの内容
既存のファイル内容を変更する場合は、実行前後のファイルの内容が必要です。
【補足事項】
・テストケースによっては、複数の確認項目を含むことがあります。
・ブラックボックステストの場合、テストケース(パターン)から導出し、テストケース毎に確認項目を導出すると良いでしょう。
・ホワイトボックステストの場合、確認項目を先に導出し、全ての確認項目を網羅するようにテストケースを設定すると良いでしょう。
※最近、確認項目に「xxxの内容が正しいこと」と記述したテスト仕様書をよく見かけます。
この確認項目は誤りです。確認項目に具体性がないため、仕様を理解しているメンバーにしか正しい検証ができません。
もし、このような確認項目を設定するのであれば、どの項目にどのような値が設定されるかを補足する必要があります。
テスト工程の工数を減らすために確認項目を省略しても良いことはありません。
工数を減らしたいのであれば、確認項目をきちんと設定して確認する内容が確実に分かるようにしましょう。
全ては時の中に… : 【テスト技法】テストケースと確認項目の導出
