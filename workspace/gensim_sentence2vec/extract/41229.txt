ダイクストラ法(最短経路問題)
ダイクストラ法 (Dijkstra's Algorithm) は最短経路問題を効率的に解くグラフ理論におけるアルゴリズムです。
スタートノードからゴールノードまでの最短距離とその経路を求めることができます。
アルゴリズム
以下のグラフを例にダイクストラのアルゴリズムを解説します。
円がノード,線がエッジで,sがスタートノード,gがゴールノードを表しています。
エッジの近くに書かれている数字はそのエッジを通るのに必要なコスト(たいてい距離または時間)です。
ここではエッジに向きが存在しない(=どちらからでも通れる)無向グラフだとして扱っていますが,
ダイクストラ法の場合はそれほど無向グラフと有向グラフを区別して考える必要はありません。
ダイクストラ法はDP(動的計画法)的なアルゴリズムです。
つまり,「手近で明らかなことから順次確定していき,その確定した情報をもとにさらに遠くまで確定していく」方法で,
DPと同じ精神を持っています。
上の図で明らかに分かることはというと,まずスタートノード自身への最短距離(最小コスト)は 0 です。
全く移動しないで済むので,これは明らかに最適解です*1。
そこまでの最短距離が求まったノード(最適解が確定したノード)を次のように赤色で表してみることにしましょう。
最短距離はノードの近くに赤色で併記しています。
次に,今のところスタートノードだけが確定しているので,そのスタートノードから辿れるところをチェックします。
ここでは,スタートノードから辿れる経路は3つ存在し,それぞれの距離は次のように 5, 4, 2 となっています
(以降,今のところ判明している最短距離とその経路を青色で示します)。
さて,次に明らかなこと(=確定できそうなノード)を探しましょう。
今のところ,未確定ノードへの最短距離は 5, 4, 2 の3つしかありませんから,
もし負のコストを持つパスが存在しなければ「左下の距離2のノード」に 2 よりも少ない最短経路が見つかることはありません*1。
従って,「左下の距離2のノード」への最短距離は2で,このノードの最適解を確定させることができます。
ダイクストラ法(最短経路問題)
