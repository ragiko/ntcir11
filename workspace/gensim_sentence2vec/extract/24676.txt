
【特許名】ビタビ復号方法およびビタビ復号化装置製造方法
【要約】ビタビ復号でトレースバックを複数回行なう際に、一定処理時間内の復号データ数(復号候補)を増やす。  複数の復号候補を再帰法により検索し、トレースバックによりさかのぼる各状態では、許容メトリック差とその状態での尤度差とを比較し(ステップ13)、尤度差が許容メトリック差以下の場合には、その時刻と状態と分岐フラグと、さらに、残りメトリック値の4パラメータを1情報としてスタックメモリに記憶する(ステップ14)。再帰法により復号する際に、次のトレースバックでは1つ前のトレースバックにより通過したパスの内、共通の部分の復号結果をコピーして用い、異なる部分パスは、スタックメモリに記憶された時刻等から新たに分岐し、その分岐点におけるパスセレクト信号のみを反転させてトレースバックを行ない、残りの部分パスの復号データを得る。
【目的】ビタビ復号でトレースバックを複数回行なう際に、一定処理時間内の復号データ数(復号候補)を増やす。
【構成】複数の復号候補を再帰法により検索し、トレースバックによりさかのぼる各状態では、許容メトリック差とその状態での尤度差とを比較し(ステップ13)、尤度差が許容メトリック差以下の場合には、その時刻と状態と分岐フラグと、さらに、残りメトリック値の4パラメータを1情報としてスタックメモリに記憶する(ステップ14)。再帰法により復号する際に、次のトレースバックでは1つ前のトレースバックにより通過したパスの内、共通の部分の復号結果をコピーして用い、異なる部分パスは、スタックメモリに記憶された時刻等から新たに分岐し、その分岐点におけるパスセレクト信号のみを反転させてトレースバックを行ない、残りの部分パスの復号データを得る。
【背景技術】0002ビタビ復号とは、畳み込み符号の復号方法の一つである。以下、従来のビタビ復号について説明する。図7で示されるような畳み込み符号器で生成される高速長K=3、符号化率R=1/2の畳み込み符号Cを具体例にして説明する。0003図7に示したシフトレジスタF1、F2によって符号器の状態Sはつぎの4つの状態、すなわち、  S0=(0,0),  S1=(1,0),  S2=(0,1),  S3=(1,1)                                  (1)のいずれかの状態をとる。0004最初に状態S0にあった符号器を時々刻々、すなわち情報信号が入力される度に各状態を遷移していく模様を表現したものがトレリス線図である。符号のCのトレリス線図を図8に示す。なおここでは入力情報信号系列長はJ?K+1であり、さらにK?1個の0が続くものとする。0005トレリス線図の枝状の部分をブランチ、2個以上のブランチの連なりを部分パスと称する。図8に示したトレリス線図において、点線のブランチは入力信号が0であることを示し、実線は、入力信号が1であることをそれぞれ示すものとする。さらにブランチ部分に符号器の出力a,b,c,dを示す。ただし、  a=(0,0),b=(1,0),d=(1,1)       (2)とし、左側の成分がCi(1)を、また右側の成分がCi(2)を表すものとする。0006時刻t=t0における状態S0(t=t0)からt=t1における状態S0(t=t1)に至るブランチの連なりをパスという。このパスは畳み込み符号のCの符号語に対するパスである。部分パスとの混同を避ける必要がある場合には符号語パスとよぶことにする。0007図9に符号Cのトレリス線図における部分パスを示す。この部分パスに対応する符号語の部分集合を便宜上、  Cs1=(00  00  11),  Cs2=(11  10  00)                   (3)とする。ビタビ復号ではパスCs1とCs2の尤度を比較して、例えば、Cs1の尤度の方がCs2の尤度よりも大きければCs2を棄却する。このときパスCs2を部分パスとして含むすべての符号語パスが送信符号語の候補から棄却されたことになる。Cs1のように棄却されずに残った部分パスを生き残りパスという。0008図8のトレリス線図を見ると、各状態には図9に示したような分岐状態を同一とする2本の部分パスが存在することがわかる。したがって通常のビタビ復号では、符号語の両端の状態を除いた定常状態においては、各時刻において常に2K-1個の生き残りパスが存在することがわかる。時刻tJ-K+2以降は生き残りパスは1/2ずつ減少し、時刻tjにおいては、たった1個の生き残りパスとなる。そしてこの生き残りパスが、トレースバックにより復号され、最尤復号データを得る。0009これに対し、本願出願人が先に提案した特願平5?67061号明細書に記載のビタビ復号方法では、尤度に差がない場合にも一方の部分パスのみを生き残りパスとし、他方を棄却してしまうため、誤りの多い伝送路でのデータ伝送の際などには、生き残り符号語パスが正しい復号語にはならない可能性が高くなるという問題点を解決するため、ACS(Add Compare Select)演算において各状態で生き残りパスの選択をする際に、最も尤度(メトリック)の高いパスを一つだけ選択して記憶する(パスセレクト信号の記憶)だけではなく、最も尤度の高いパスとその他のパスとの尤度差も合わせて記憶しておき、トレースバックにより復号データを求める際に、最尤復号パスだけでなく、最尤パスのトレースバック区間での尤度(トレースバックによりデータ復号する区間での尤度)との間で、あらかじめ設定したしきい値(許容メトリック差)以下の尤度となる複数のパスについても、それぞれトレースバックを行ない、複数回のトレースバックから複数の復号候補を得るマルチトレースバックを行なっている。0010このマルチトレースバックの処理は、以下のようにして行なわれる。各トレースバックでは、各時刻(tn)毎に以下の処理(i)?(iv)を行なう。0011(i)時刻tnにおける許容差を求める。tnにおける許容差は、本トレースバック開始からtn+1までのパス中に、本トレースバック以前の(vi)の処理によって逆転させた選択パスが含まれていた場合、逆転させた両パスのメトリック差(複数含まれていた場合はそれらの合計)を、与えられている許容パスメトリック差が減算することにより求める。0012(ii)時刻tnでパスが状態Siを通過する場合、ACSで求めた［時刻tn,状態Si］でのメトリック差が上記許容差以内であれば、そのときの状態とメトリックの差を記憶する。ただし、［時刻tn,状態Si］の選択パスが(vi)によって逆転していた場合は記憶しない。0013(iii)ACSで求めた［時刻tn,状態Si］での選択パスをさかのぼり、時刻時刻tn-1でパスが通過する状態を求める(通常のトレースバック処理)。0014(iv)時刻tnでの復号データを求める(通常のトレースバック処理)。各トレースバック終了時毎に以下の処理を行なう。0015(v)復号データを出力する(通常のトレースバック処理)。(vi)(ii)において記憶したもののうち、時刻が最も早い(t0に最も近い)ものが［時刻tm,状態Sj］であった場合、次の2処理を行なう。0016?ACSで求めた［時刻tm,状態Sj］でのパスセレクト信号を逆転    させる。0017?以前の処理によって、時刻t0?tm-1のいずれかの状態に逆転パス  が存在した場合、それら全てを元に戻す。上記を繰り返し、(vi)において逆転すべきパスがなかった場合に終了する。
【技術分野】5J065符号誤り検出?訂正5K029直流方式デジタル伝送
【請求項】
※以下の情報は公開日時点(1995年10月31日)のものです。
請求項1
ACS(Add Compare Select)演算において各状態で生き残りパスの選択をする際に、最も尤度の高いパスを一つだけ選択してそのパスセレクト信号を記憶するだけでなく、最も尤度の高いパスとその他のパスとの尤度差も合わせて記憶しておき、トレースバックにより復号データを求める際に、最尤度復号パスだけでなく、最尤パスのトレースバック区間での尤度との間で、あらかじめ設定したしきい値である許容メトリック差以下の尤度となるパスについて、それぞれトレースバックを行なって複数の復号パス候補を得るマルチトレースバックを行なうとともに、前記マルチトレースバックを行なう際に、複数の候補を再帰法により検索し、このときトレースバックによりさかのぼる各状態において、許容メトリック差とその状態で記憶しておいた尤度差とを比較し、尤度差が許容メトリック差以下の場合には、複数のブランチを選択できる状態であるとして、その状態の時刻と状態とどのブランチを選択してトレースバックを行なっているかを示す分岐フラグと、さらに許容メトリック差から尤度差を引いた値とをスタックメモリに記憶しておき、再帰法により復号する際に、次のトレースバックでは、1つ前のトレースバックにより通過したパスの復号データの内、共通の部分パスの復号結果をコピーして用い、異なる部分パスは、スタックメモリに記憶された時刻および状態から新たに分岐し、その分岐点におけるパスセレクト信号のみを反転させてトレースバックを行なうことにより、残りの部分パスの復号データを得ることを特徴とするビタビ復号方法。
請求項2
1つ前のトレースバックにより通過したパスの復号データの内、その共通部分の復号結果をコピーまたはメモリ転送して用い、異なる部分は、分岐点におけるパスセレクト信号のみを反転させてトレースバックを行なう際、トレースバックを行なうブランチ数またはパスの長さをスタックメモリに記憶してある時刻から求め、そのブランチ数の累積値があらかじめ設定した制限値以下であれば、トレースバックを行ない、制限値を越えるときはトレースバックを行なわずに復号処理を終了することを特徴とする請求項1記載のビタビ復号方法。
請求項3
受信データ列から各部分パスの尤度を計算するメトリック計算手段と、各時刻の各状態に遷移する複数のパスのメトリックを比較する手段と、メトリックの最も高いパスを選択してその信号を記憶するだけでなく、他のパスとのメトリック差をも同時に記憶するパスセレクト記憶手段と、パスメトリックの記憶?更新を行なうパスメトリック記憶手段と、前記パスセレクト記憶手段の情報を基に、請求項1または2記載のマルチトレースバックを行なうマルチトレースバック手段と、マルチトレースバックに必要な情報を記憶するスタックメモリとを備えたビタビ復号化装置。
【解決課題】0018しかしながら、上記先行発明におけるマルチトレースバックの処理アルゴリズムでは、各トレースバックでは、最終時刻から最初の時刻t0までの全時刻に渡り、毎回復号データの計算を行なう必要があり、また、時刻および状態の記憶する条件も複雑であるため、処理時間が多くかかり、このため、ハードウェア化において限られた処理時間内でマルチトレースバックを行なう際には、与えられた許容メトリック差以内の復号候補が多数存在している場合でも、トレースバックの回数(復号データ数)により処理時間を制限され、十分な回数のトレースバックが行なえず、そのために一部の復号候補しか得られないという問題があった。
0019本発明は、このような先行発明の問題を解決するものであり、より効率的で優れたビタビ復号方法およびその装置を提供することを目的とするものである。
【解決手段】0020本発明は、上記目的を達成するために、複数の復号候補を再帰法により検索し、このときトレースバックによりさかのぼる各状態では、許容メトリック差とその状態で記憶しておいた尤度差とを比較し、尤度差が許容メトリック差以下の場合には、その状態は複数のブランチを選択できる状態であるとして、その時刻と状態と、またどのブランチを選択してトレースバックを行なっているかを示す分岐フラグと、さらに、許容メトリック差から尤度差を引いた値(残りメトリック値)の4つのパラメータを1つの情報としてスタックメモリに記憶しておき、再帰法により復号する際に、次のトレースバックでは、1つ前のトレースバックにより通過したパスの内、共通の部分パスの復号結果をコピー(メモリ転送)して用い、異なる部分パスは、スタックメモリに記憶した時刻および状態で新たに分岐し、その分岐点におけるパスセレクト信号のみを反転させてトレースバックを行なうことにより、残りの部分パスの復号データを得るようにしたものである。
0021また、限られた処理時間内でマルチトレースバックを行なう際には、従来のようにトレースバックの回数(復号データ数)により処理時間を制限する方法に代わり、新たに分岐してトレースバックを行なう部分パスのブランチ数(パスの長さ)を、スタックメモリに記憶してある時刻から求めて、その累積値があらかじめ設定した制限値以下であれば、トレースバックを行なって復号データを出力し、一方、制限値を越えるときは、トレースバックを行なわずに復号処理を終了することにより処理時間を制限するようにしたものである。
0022したがって、本発明によれば、限られた処理時間内でより多くの復号データ候補を求めることができ、より効率的かつ優れた誤り訂正復号を行なうことができる。
0023図1は本発明の一実施例におけるビタビ復号化装置の構成を示すものである。図1において、1はビタビ復号化装置、2はメトリック計算回路、3はACS回路、4はパスセレクト記憶回路、5はパスメトリック記憶回路、6はマルチトレースバック回路、7はスタックメモリである。
0024ビタビ復号化装置1では、受信データ列からメトリック計算回路2において、各部分パス(ブランチ)の尤度(メトリック)を計算する。次に、ACS回路3において、各時刻の各状態に遷移する複数のパスのメトリックを比較して、パスセレクト記憶回路4に、メトリックの最も高いパスを選択してそのパスセレクト信号を記憶するだけでなく、他のパスとのメトリック差をも同時に記憶する。また、通常のビタビ復号と同様に、パスメトリック記憶回路5において、パスメトリックの記憶?更新も行なうものとする。そして、パスセレクト記憶回路4の情報を基に、マルチトレースバック回路6およびスタックメモリ7によって、トレースバックを行なう。この場合、与えられる許容メトリック差によっては、生き残りパスがただ1個となるとは限らず、図2に示すように、一般には複数回のトレースバックにより、複数個のパスが生き残る。
0025図2の場合は、00260027の6個のパスが生き残りパスとして、マルチトレースバック回路6において、これら複数パスをトレースバックして複数の復号データを得る。
0028図3および図4は、本実施例におけるマルチトレースバック回路6の処理アルゴリズムの一例を示す。この例では、図8のトレリス線図のように1状態から2本のパスが出ている場合を示している。
0029まず、ステップ10の初期化処理において、スタックメモリ、スタックメモリアドレス、許容メトリック差、トレースバック(TB)ブランチ数カウンタ、TBカウンタ、および状態の初期化を行なう。そして、時刻tnを初期化し(ステップ11)、以後トレースバック処理を行なう。その状態におけるパスセレクト信号およびメトリック差をパスセレクト記憶回路4から読み出し(ステップ12)、許容セレクト差と比較し(ステップ13)、メトリック差が許容メトリック差以下であれば、スタックメモリ7に記憶し(ステップ14)、アドレスの更新を行なう(ステップ15)。このときのスタックメモリ7に記憶される1情報(4パラメータ)の1例を図5に示す。
0030そして、1時刻前の状態の計算(ステップ16)と、復号データの計算?格納(ステップ17)をした上で、時刻の変更(ステップ18)をして、さらにさかのぼるかの判断(ステップ19)を行なう。ここで1回のトレースバックが終了したと判断されると、スタックメモリ7に情報が記憶されているかを見て(ステップ20)、ない場合は終了し(ステップ29)、また、ある場合は最上位アドレス(最後に記憶したアドレス)の1情報の分岐フラグを判断し(ステップ21)、1であれば最上位アドレスの1情報を消去、アドレスを1減らして(ステップ30)、再びステップ20へ戻る。一方、分岐フラグが0の場合は、その1情報のその他のパラメータを読み出し、残りメトリック値を許容メトリック差として(ステップ22)、分岐フラグは0から1に変換した上で、その更新された1情報を再びスタックメモリ7に記憶しておく(ステップ23)。
0031そして、トレースバック(TB)されるブランチ数の累積値を計算し(ステップ24)、制限数以下であれば、TBカウンタを増やし(ステップ26)、分岐点までの復号データは1つ前の復号データからコピーし(ステップ27)、さらにその分岐点の状態におけるパスセレクト信号を反転された(ステップ28)上で、ステップ16に戻ってトレースバックを行なう。一方、制限数を越える場合は、処理直が足りないと判断して、復号処理を終了(ステップ29)する。
0032上記した処理アルゴリズムの例では、TBブランチ数により処理時間の制限を与えているが、処理時間ではなく復号データ数で制限したいときは、ステップ26で復号データ数をモニタしているので、予め設定された復号データ数になったら処理を終了することで、容易に制限できることは明らかである。
0033図3および図4の処理アルゴリズムによって、マルチトレースバックを行なうときのスタックメモリ7の変化の一例を図6に示す。この図は、トレースバックするパスが(a)から(e)に移って行くときのスタックメモリ7の変化を示している。ここでは、許容メトリック差を5とし、黒点の状態において、メトリック差(図中で+xで表示、数字のあるパス方が尤度が低いとする)の累計が許容メトリック差以下であるとして、スタックメモリ7に記憶されている。
0034例えば(a)のパスでは、時刻N?2においてのみ、尤度の低い方を選択しているので、時刻N?2のスタックメモリの分岐フラグが1になっている。トレースバックが時刻N?7において、(b)のパスの方に分岐した場合は、時刻N?7で尤度の低いパスを選択しているので、その時刻の選択フラグが1になる。(c)の方に分岐する場合は、時刻N?7の情報は一旦消去され、時刻N?6の選択フラグが1になり、時刻N?7で新たに記憶されている。この情報は(d)の方のTBが行なう際には、分岐フラグが1になるのは上記のアルゴリズムから明らかである。
【発明効果】0035本発明は、上記実施例から明らかなように、マルチトレースバックを行なう際に、複数の候補を再帰法により検索し、このときトレースバックによりさかのぼる各状態において、許容メトリック差とその状態で記憶しておいた尤度差とを比較し、尤度差が許容メトリック差以下の場合には、複数のブランチを選択できる状態であるとして、その状態の時刻と状態とどのブランチを選択してトレースバックを行なっているかを示す分岐フラグと、許容メトリック差から尤度差を引いた値とをスタックメモリに記憶しておき、再帰法により復号する際に、次のトレースバックでは、1つ前のトレースバックにより通過したパスの復号データの内、共通の部分パスの復号結果をコピーして用い、異なる部分パスは、スタックメモリに記憶された時刻および状態等から新たに分岐し、その分岐点におけるパスセレクト信号のみを反転させてトレーはバックを行なうことにより、残りの部分パスの復号データを得るようにしたので、ビタビ復号において複数のパスを生き残りとし複数の復号データ候補を求める際に、処理時間を縮小できるという効果を有する。
【図面簡単説明】0036図1 本発明の一実施例におけるビタビ復号化装置のブロック図図2 本実施例における複数の生き残りパスの一例を示す模式図図3 本実施例におけるマルチトレースバックの処理アルゴリズムの一例を示すフロー図図4 同処理アルゴリズムの続きを示すフロー図図5 本実施例におけるマルチトレースバック処理におけるスタックメモリへの格納の一例を示す模式図図6 本実施例におけるマルチトレースバック処理におけるスタックメモリの変化の一例を示す模式図図7 従来例における誤り訂正符号化回路の一例を示すブロック図図8 従来例におけるトレリス線図の一例を示す模式図図9 従来例における再合流する2本の部分パスの一例を示す模式図
【出願人】松下電器産業株式会社
【発明者】宮  和行
【出願日】1994年4月15日(20年3ヶ月経過)
【出願番号】1994-077099
【公開日】1995年10月31日(18年9ヶ月経過)
【公開番号】1995-288478
【登録日】2001年9月28日(12年10ヶ月経過)
【登録番号】3235333
【特許期限】2006年9月28日
【状態】特許権利破棄(最終処分)
ビタビ復号方法およびビタビ復号化装置製造方法
