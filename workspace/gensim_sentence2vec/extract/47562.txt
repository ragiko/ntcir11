統合言語クエリ (LINQ: Language-Integrated Query) は .NET Framework Version 3.0 で導入されました。LINQ は、タイプ セーフな方法で任意の System.Collections.IEnumerable または System.Collections.Generic.IEnumerable<T> データ ソースを照会する、統一されたモデルです。  LINQ to Objects とは、List<T> や配列などのメモリ内コレクションに対して実行される LINQ クエリの名前です。  この記事では、LINQ の基礎を理解していることを前提としています。  詳細については、「統合言語クエリ (LINQ: Language-Integrated Query)」を参照してください。  Parallel LINQ (PLINQ) は、LINQ パターンの並列実装です。  PLINQ クエリは、あらゆる意味において、並列ではない LINQ to Objects クエリに似ています。  PLINQ クエリは、LINQ の順次クエリと同様、メモリ内の IEnumerable または IEnumerable<T> データ ソースで実行され、遅延実行が存在するので、クエリが列挙されるまでは実行されません。  主な相違点は、PLINQ は、システムのすべてのプロセッサを十分に活用しようとする点です。  そのために、データ ソースをセグメントにパーティション分割し、複数のプロセッサで個々のワーカー スレッドの各セグメントに対してクエリを並行実行します。  多くの場合、並行実行によって、クエリは非常に高速に処理されます。  一部の種類のクエリについては、データ ソースに AsParallel クエリ操作を追加して並行実行することで、レガシ コードよりも大幅なパフォーマンスの向上を PLINQ で実現できます。  ただし、並列処理にはある程度の複雑さが伴うため、すべてのクエリ操作が PLINQ でより速く実行されるわけではありません。  実際、一部のクエリについては、並列化によって処理速度が遅くなります。  そのため、順序付けなどの問題が並列クエリに与える影響を理解しておく必要があります。  詳細については、「PLINQ での高速化について」を参照してください。  
PLINQ の概要
