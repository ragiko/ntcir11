先週2月15日に静岡市で第1回目の「実践コンピュータビジョン」読書会がおこなわれました。
初回、は章のタイトルも「基本的な画像処理」ということでした。本の入り口ではありましたが、ずっと興味を持ちつつも触れる機会が無かった分野の内容でかなりおもしろかったです。
この本の第一章は、画像をNumpy(Pythonの数値計算モジュール)の配列に読み込んで、配列としていろいろ画像を処理しましょう、と概ねそのような内容で、Numpyの配列の記法がわかっていれば、画像関係の知識に乏しくても、画像処理できそうな予感を待たせてくれます。
ということで、本来フィルターモジュールを使って簡単に処理できる画像のぼかしやアンシャープマスクですが、第一章を復習しようということで、配列を直接操作して画像にフィルターをかける簡単なスクリプトを書いてみることにしました。
画像のフィルター処理の参考にしたのはこちらのサイト。
1    # coding: utf-8 
2     
3    import numpy as np 
4    from PIL import Image 
5    from scipy.misc import imsave 
6     
7    def image_filter(path, opt): 
8        im = np.array(Image.open(path).convert('L')) 
9     
10       if opt == 1: 
11           #x方向微分フィルタ 
12           f = np.array([[1, 0, -1],[1, 0, -1],[1, 0, -1]]) 
13       elif opt == 2: 
14           #8近傍先鋭化フィルタ 
15           f = np.array([[-1, -1, -1],[1, 9, -1],[-1, -1, -1]]) 
16       elif opt == 3: 
17           #4近傍先鋭化フィルタ 
18           f = np.array([[0, 1, 0],[-1, 5, -1],[0, -1, 0]]) 
19       elif opt == 4: 
20           #平滑化フィルタ 
21           f = np.array([[0.1, 0.1, 0.1],[0.1, 0.1, 0.1],[0.1, 0.1, 0.1]]) 
22       else: 
23           #グレースケール化したイメージを返す 
24           return im 
25    
26       #要素数(列数) 
27       a = len(im[0]) 
28       #行数 
29       b = len(im) 
30       im_convert = np.zeros([a, b]) 
31    
32       for i in range(b-1): 
33           for j in range(a-1): 
34               if i == 0: 
35                   im_convert[i,j] = 0 
36               elif j == 0: 
37                   im_convert[i,j] = 0 
38               else: 
39                   f1 = im[i-1][j-1]*f[0,0] 
40                   f2 = im[i-1][j]*f[0,1] 
41                   f3 = im[i-1][j+1]*f[0,2] 
42                   f4 = im[i][j-1]*f[1,0] 
43                   f5 = im[i][j]*f[1,1] 
44                   f6 = im[i][j+1]*f[1,2] 
45                   f7 = im[i+1][j-1]*f[2,0] 
46                   f8 = im[i+1][j]*f[2,1] 
47                   f9 = im[i+1][j]*f[2,2] 
48                   im_convert[i,j] = int(f1+f2+f3+f4+f5+f6+f7+f8+f9) 
49    
50       return im_convert 
51    
52   convert_img = Image.fromarray(image_filter('dog.jpg', 1)) 
53   imsave('dog_bw.jpg', convert_img) 
54   convert_img.show()
単純に3x3の配列の形をしたフィルターを元画像に重ね、重なった値同士をかけて、その和を新しい配列の値(フィルタの中心の値)としています。配列はImage.fromarray()でImageオブジェクトに再度変換しています。もう少しスマートな書き方あるだろうなとおもいつつ、とりあえず簡単な配列の計算だけでそれらしい画像フィルターができました。
コンピュータによる画像処理というと、身構えてしまう部分があるのですが、こうやって具体的な配列の処理になると何となく理解できそうな気がしてきます(これから難しくなるかもしれませんが)。
ということで、「実践コンピュータビジョン」読書会、次回は3/22です。次回も楽しい読書会になると思いますよ。  
iPhotographer
