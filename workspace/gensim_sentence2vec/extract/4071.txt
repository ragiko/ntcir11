
まず、元の入力パターンから認識のために必要な本質的な情報を選んで取り出し
ます。これを特徴抽出といい、取り出された情報を特徴といいます。
次に、特徴を用いて入力パターンを分類して出力します。
特徴抽出・特徴空間・特徴ベクトル
一般的に、分類のための特徴は複数抽出されます。
これはよほど簡単な問題でない限り、
複数の特徴がないと正確に分類できないからです。
このような複数の特徴を1つにまとめてベクトルとして表現することができます。
これを特徴ベクトルといいます。
当然ですが、特徴ベクトルの次元数は特徴の数と一致します。
ここでは簡単化のために2次元の特徴ベクトルを考えてみましょう。
非常に簡単な例として動物の分類を考えてみます。
ネコとトラを分類するにはどうしたら良いでしょうか。
どちらもネコ科の動物で、性質などに共通点がありますが、
決定的な相異点として、大きさが明らかに違います。
そこで体長と体重に注目してみましょう。
この「体長」と「体重」がパターン認識のための特徴になります。
普通に考えられるネコとトラの体長と体重を測定して図にすると
図2のようになるでしょう。
青いがネコ、赤い×がトラを表します。
このように色々な入力パターンの特徴を計測して取り出すことを
特徴抽出といいます。
この図に分布している点が2次元の特徴ベクトルです。
また、特徴ベクトルが分布している2次元平面を特徴空間といいます。
今回は2次元の例ですが、特徴が3つ以上になっても同じで、N次元の特徴空間や
特徴ベクトルを考えることができます。
決定境界
次に考えるべきことはネコとトラの境界線を決めることです。
今回の例の場合は、図3のように一本の直線を引けば2つの種類を分けることが
できそうです。
もちろん、直線の引き方は無限にあります。あるいは直線以外の方法で分けることも
できるでしょう。
どのような直線が最適な境界線なのかは難しい問題ですので、ここでは深入りしません。
とりあえず、適当に直線を1本引いてみましょう。
このように2つの種類の特徴ベクトルを分ける直線を決定境界といいます。
特徴ベクトルが「決定境界のどちら側にあるか」によって分類が行なわれます。
未知パターンの分類
決定境界が決まれば、未知のパターンが入力されたときに、
そのパターンがどちらの種類なのか分けることができます。
図4に例を示します。中央やや下に「+」の印で示したパターンが入力されたとします。
このパターンがネコなのかトラなのか分からないとしたら、どのように判断したら
良いでしょうか。
答えは簡単です。決定境界のどちら側にあるか調べれば良いのです。
図4の場合、決定境界からみて「ネコ側」にあります。
つまり、「この入力パターンはネコである」と判断することができます。
パターン認識で最も重要なのは、このような未知パターンの分類です。
これを高い精度で分類できるものが優秀なパターン認識システムであるということが
できます。なお、未知パターンの分類のことを汎化といいます。
今回の例では、決定境界を適当に設定しました。
しかし、汎化性能を向上させるためには、最適な決定境界を定めることが
極めて重要であることが分かるでしょう。
特徴選択
今回の例では、体長と体重という2つの特徴に基づいて分類を行ないました。
ネコとトラの場合はうまく分類することができましたが、
他の動物の場合にはどうなるでしょうか。
同じようにネコ科の動物であるトラとライオンの分類の例を図5に示します。
どちらもほぼ同じような大きさですから、体長や体重という特徴ではうまく
分類できないことが分かります。
つまり、パターン認識では特徴の選び方が重要であるということがいえます。
有効ではない特徴を使っていては、どれだけ頑張っても高い精度の分類を
行なうことはできません。
この例の場合では、「シマ模様の有無」や「たてがみ(オスの場合のみ)」
のような情報を3つ目の特徴として用いる必要があるでしょう。
まとめ
ここまでの説明で、パターン認識というもののイメージがつかめてきたと思います。
今回の例は非常に単純なものでしたが、現実の問題はずっと複雑です。
そのため、より高度な手法が必要になります。
しかし、基本的な考え方はここで説明したものとだいたい同じです。
現実に使われる手法での最大のポイントは「どのように決定境界を決めるか」です。
これに関しては色々な方法が提案されています。
ここでは説明しませんが、卒研の中で少しずつ勉強していくと良いでしょう。
また、ここでは具体的な応用例については示しませんでしたが、
私の研究室に来てもらえば、これまでに行なってきた研究での実例をお見せします。
興味のある人はぜひ来て下さい。
このページについてのご質問・ご意見等は
松井和宏(matsui@cs.ce.nihon-u.ac.jp)
までお願いします。
Pattern Recognition
