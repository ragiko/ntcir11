
1.1.1.2  OCIクライアント・セッションNLSおよびキャラクタ・セットのステータス情報
この新機能は、クライアント・セッションのNLSとキャラクタ・セット情報を、V$SESSION_CONNECT_INFOおよびGV$SESSION_CONNECT_INFOビューに追加するものです。
この拡張により、DBAは、全クライアントのクライアント側セッションのキャラクタ・セット情報にアクセスできるようになります。この情報は、トラブルシューティングの際に役立ちます。
1.1.1.3  プリコンパイラ: Pro*C/C++およびPro*COBOLによる配列INSERTおよび配列SELECT構文のサポート追加
Oracle Database 11gのこのリリースでは、Pro*C/C++およびPro*COBOLで、IBM DB2の配列INSERTおよび配列SELECT構文がサポート対象に追加されました。
IBM DB2に対して配列INSERTおよび配列SELECT構文がサポートされたことは、IBM DB2インストールをOracleに移行する場合に役立ちます。
1.1.1.4  プリコンパイラ: Pro*C/C++およびPro*COBOLにおける動的SQL文のキャッシュ
アプリケーション開発者がPro*C/C++およびPro*COBOLアプリケーションをプリコンパイルする際に、新しく文キャッシュ・オプションを使用できるようになりました。
この機能を使用すると、プリコンパイルされるプログラム内で文をキャッシュできるようになり、パフォーマンスが向上する可能性があります。再利用時における動的文の解析のオーバーヘッドをなくすことで、パフォーマンスが向上します。
1.1.1.5  プリコンパイラ: Pro*C/C++およびPro*COBOLにおける固定実行計画
この新機能では、アウトライン機能を使用して、Pro*C/C++およびPro*COBOLアプリケーションの実行計画を固定します。
アウトライン機能を使用すると、モジュールの統合時および異なる環境へのデプロイ時に、アプリケーションのパフォーマンスが影響されません。
1.1.1.6  プリコンパイラ: Pro*COBOLのB領域の長さの柔軟性
Pro*COBOLアプリケーションのB領域の長さを、8列以上253列以下にできます。
形式がANSIに設定されている場合、Pro*COBOLプログラムのB領域の長さは72列に制限されていました。COBOLコンパイラでは、B領域の長さは最大253列までサポートされるようになりました。これにより、プログラマは72列より長い行を柔軟に入力できます。
1.1.1.7  プリコンパイラ: Pro*C/C++およびPro*COBOLにおけるINSERTの暗黙的バッファ
新しいデータを定期的に挿入する必要があるいくつかのアプリケーションでは、ループ内で単独のINSERT文が使用されます。プリコンパイラは、コマンドライン引数による問合せを受けると、挿入される行をバッファします。これによりネットワークのラウンドトリップが低減されます。
INSERTを暗黙的にバッファするこの手法により、パフォーマンスが、プリコンパイラの配列インタフェースを使用した場合と同程度に向上するという利点があります。
Oracle Database 11g新機能
