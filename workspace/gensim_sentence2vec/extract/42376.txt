解説
本来当たり判定は格闘ゲームとかにも応用できて共通で書こうとも思いました。
ですが、当たり判定といったらシューティングゲームというくらいに重要性が高いのでここで書きたいと思います.
この当たり判定はシューティングゲームにおいて最重要とされる話題です。
今回説明する内容は毎週金曜日にある C3 ゼミで発表した内容です。
尚、今回説明する当たり判定は数学が結構出てきます。気を引き締めましょう。
二点間距離を用いた方法
多分誰もが最初に考え付くのがこの方法ではないでしょうか?
二点間距離と円の半径を用いて当たり判定を実装します。
自分も最初この方法を使いました。
敵の弾の座標を(X1,Y1),弾の半径をR1、自機を(X0,Y0)、自機の半径をR0とします。
半径R1、R0の和が距離に等しいときにちょうど円同士が触れ合い、和が距離以下のときにHITするということです。
bool IsHit()
{
//===============================================================
//C言語の場合はsqrt(float)が平方根の関数となります。
//ですが、C言語には二乗、三乗をする関数はありません。
//これは誰でも簡単に実装できて,分割統治法とか応用できやすいからでしょうか?
//==============================================================
if(平方根(X座標の距離)~2+(Y座標の距離)^2) < 敵の弾の半径+自機の半径
{
return true;
}
return false;
}
以上のように平方根を使って実装が出来ます。
ですが、平方根というのは実はすごい重い処理です。
これを何とかしないといけません。
そこで、対策なんですけど両辺を二乗しちゃいましょう。
当たり判定 - ゲームプログラミングWiki
