
一般に、正規表現で受け入れられる入力には、制約のある入力と制約のない入力の 2 種類があります。
制約のある入力とは、あらかじめ定義された形式に従っている、既知のソースまたは信頼できるソースからのテキストです。  制約のない入力とは、あらかじめ定義された形式や予想される形式に従っていない可能性のある、不確実なソース (Web ユーザーなど) からのテキストです。  
正規表現パターンは、有効な入力に一致するように記述されるのが一般的です。
開発者はまず、対象となるテキストを調査して、そのテキストに一致する正規表現パターンを記述します。  記述が完了すると、そのパターンを複数の有効な入力項目でテストして、修正や改善が必要かどうかを確認します。  想定されるすべての有効な入力に一致するようになったら、そのパターンは運用環境で使用する準備が整ったと見なされ、リリースされるアプリケーションに含めることができます。  こうして作成された正規表現パターンは、制約のある入力との照合には適していますが、  制約のない入力との照合に適しているとは言えません。  
制約のない入力と照合する正規表現は、次の 3 種類のテキストを効率的に処理できなければなりません。
正規表現パターンに一致するテキスト。
正規表現パターンに一致しないテキスト。
正規表現パターンにほぼ一致するテキスト。
制約のある入力を処理するために記述された正規表現で特に問題となるのは、最後の種類のテキストです。
その正規表現が広範なバックトラッキングにも依存している場合、一見何の問題もないように見えるテキストの処理に極端に長い時間 (場合によっては何時間も何日も) が費やされる可能性があります。  
.NET Framework での正規表現に関するベスト プラクティス
