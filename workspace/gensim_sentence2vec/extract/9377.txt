
Windows グラフィックスを使用して効果的にプログラムを作成するには、関連する 2 つの概念について理解しておく必要があります。
DPI (Dot Per Inch : 1 インチあたりのドット数)
DIP (Device Independet Pixel : デバイス非依存ピクセル)
まず DPI の説明から始めますが、その前に文字体裁について少し触れておく必要があります。文字体裁では、活字のサイズを "ポイント" という単位で表します。1 ポイントは 1 インチの 1/72 に相当します。 
1 ポイント = 1/72 インチ
注: これはデスクトップ パブリッシングにおけるポイントの定義を示しています。正確なポイントの基準は年々変化してきました。
たとえば、12 ポイントのフォントは 1/6 (12/72) インチのテキスト行内に収まるようにデザインされています。これはもちろん、対象のフォントに含まれる文字の高さが、すべて正確に 1/6 インチであるということではありません。実際には、文字によって高さが 1/6 を超える場合もあります。たとえば、多くのフォントでは、文字 Å の高さがフォントの名目上の高さを超えています。このフォントを正しく表示するには、テキスト間に適度な余白が必要になります。この余白を "行間" と呼びます。
次の図は、72 ポイントのフォントを示しています。テキストの周囲の実線は、1 インチの高さの境界枠を表します。破線は "ベースライン" と呼ばれます。フォントの文字のほとんどは、一番下がベースラインと接するようにデザインされています。フォントの高さには、ベースラインより上の部分 ("アセント") とベースラインより下の部分 ("ディセント") が含まれます。ここで示したフォントの場合、アセントは 56 ポイント、ディセントは 16 ポイントです。
72 ポイントのフォントの図
ただし、コンピューター ディスプレイになると、テキスト サイズの基準は明確とは言えません。これは、ピクセルのサイズが常に同じとは限らないためです。ピクセルのサイズには 2 つの要素が影響します。ディスプレイの解像度とモニターの物理サイズです。そのため、物理的なインチ数とピクセル数の間には一定の相関性がなく、物理的なインチ数は基準の役割を果たしません。代わりに、フォントのサイズは "論理" 単位で表されます。72 ポイント フォントは 1 論理インチの高さと定義されています。論理インチ数はピクセル数に変換されます。Windows で長年使用している変換規則では、1 論理インチが 96 ピクセルと等しくなります。このスケール因子を使用すると、72 ポイントのフォントは 96 ピクセルの高さにレンダリングされます。12 ポイント フォントは 16 ピクセルの高さに相当します。
12 ポイント = 12/72 論理インチ = 1/6 論理インチ = 96/6 ピクセル = 16 ピクセル
このスケール因子は、96 DPI (1 インチあたりのドット数) で表されます。"ドット" は印刷について使用される用語で、紙に印刷される物理的なインクの点を意味します。コンピューター ディスプレイの場合、論理インチあたり 96 ピクセルという方がより正確ですが、DPI という用語で定着しています。
実際のピクセル サイズは変化するため、あるモニター上で判読可能なテキストが、別のモニターでは小さすぎることがあります。また、ユーザーにはさまざまな好みがあり、人によっては大きなテキストが好まれます。こうした理由から、Windows ではユーザーが DPI 設定を変更できるようになっています。たとえば、ユーザーがディスプレイを 144 DPI に設定すると、72 ポイント フォントは 144 ピクセルの高さになります。標準の DPI 設定は、100% (96 DPI)、125% (120 DPI)、および 150% (144 DPI) です。ユーザーがカスタム設定を適用することもできます。Windows 7 からは、ユーザーごとにDPI 
を設定できます。
DWM によるスケール
プログラムが DPI をサポートしない場合、高 DPI 設定では、次のような不具合が発生することがあります。
UI 要素の一部が表示されない
レイアウトが崩れる
ビットマップとアイコンがおかしくなる
マウスの座標が正しく認識されない (ヒット テスト、ドラッグ アンド ドロップなどに影響)
古いプログラムが高 DPI 設定でも確実に動作するように、DWM は便利な代替手段を備えています。プログラムに DPI 対応であることが宣言されていないと、DWM は UI 全体をスケールして、DPI 設定と一致させます。たとえば 144 DPI の場合は、テキスト、グラフィックス、コントロール、およびウィンドウのサイズを含め、UI が 150% に拡大されます。プログラムによって 500 × 500 のウィンドウが作成された場合、実際のウィンドウは 750 × 750 ピクセルで表示され、ウィンドウ内の要素も適宜スケールされます。 
この動作により、高 DPI 設定でも古いプログラムは "とりあえず動作" します。ただし、このスケールはウィンドウが描画された後で適用されるため、多少表示が不鮮明になることは避けられません。
DPI 対応のアプリケーション
DWM によるスケールを避けるには、プログラム自体で DPI 対応であることを宣言します。これにより、DWM は DPI スケールを自動的に実行しなくなります。新しく作成するアプリケーションは、DPI 対応として設計することをお勧めします。これは、DPI 対応にすることにより、DPI 設定が高くなるほど、UI の外観が向上するためです。
プログラムが DPI 対応であることを宣言するには、そのプログラムのアプリケーション マニフェストを使用します。"マニフェスト" は簡単に言うと、DLL やアプリケーションについて説明した XML ファイルです。マニフェストは実行可能ファイルに埋め込まれるのが一般的ですが、別のファイルとして提供することも可能です。マニフェストには、DLL の依存関係、要求された特権レベル、およびそのプログラムが想定している Windows のバージョンといった情報が含まれます。
プログラムが DPI 対応であることを宣言するには、次の情報をマニフェストに記述します。
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0" xmlns:asmv3="urn:schemas-microsoft-com:asm.v3" >
<asmv3:application>
<asmv3:windowsSettings xmlns="http://schemas.microsoft.com/SMI/2005/WindowsSettings">
<dpiAware>true</dpiAware>
</asmv3:windowsSettings>
</asmv3:application>
</assembly>
ここではマニフェストの一部のみを示していますが、マニフェストのその他の部分は、Visual Studio のリンカーによって自動的に生成されます。マニフェストの一部を作成中のプロジェクトに追加するには、Visual Studio で次の手順を実行します。
[プロジェクト] メニューの [プロパティ] をクリックします。
左側のペインで [構成プロパティ]、[マニフェスト ツール] を順に展開し、[入力と出力] をクリックします。
[追加のマニフェスト ファイル] テキスト ボックスにマニフェスト ファイル名を入力し、[OK] をクリックします。
プログラムが DPI 対応であることを宣言すると、DWM によるアプリケーション ウィンドウのスケールが実行されなくなります。そのため、500 × 500 のウィンドウを作成した場合、このウィンドウは 500 × 500 ピクセルで表示され、ユーザーの DPI 設定には影響されません。
GDI と DPI
GDI による描画はピクセル数で表されます。つまり、プログラムに DPI 対応であることが宣言されている場合、GDI を使用して 200 × 100 の長方形を描画すると、画面上には幅が 200 ピクセルで高さが 100 ピクセルの長方形が表示されます。ただし、GDI のフォント サイズは現在の DPI 設定に応じてスケールされます。つまり、72 ポイントのフォントを作成した場合、そのフォントのサイズは 96 DPI では 96 ピクセルになりますが、144 DPI では 144 ピクセルになります。GDI を使用して、144 DPI でレンダリングした 72 ポイント フォントを以下に示します。
GDI での DPI フォントのスケールを示す図
アプリケーションが DPI 対応で、描画に GDI を使用する場合、描画する座標はすべて、DPI と一致するようにスケールします。
Direct2D と DPI
Direct2D は DPI 設定と一致するように、自動でスケールを実行します。Direct2D では、座標が DIP (デバイス非依存ピクセル) という単位で表されます。DIP は "論理" インチの 1/96 と定義されています。Direct2D ではすべての描画処理を DIP 数で指定した後、現在の DPI 設定に合わせてスケールを実行します。
DPI 設定DIP サイズ
DPI と DIP (デバイス非依存ピクセル) (Windows)
