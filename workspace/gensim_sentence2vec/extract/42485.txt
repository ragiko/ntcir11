ドメイン開発で参考にするもの¶
基本的には既存のドメインを参考にして改造して作っていくことになるでしょう。作りたい言語に近い特性を持つ言語を選びましょう。例えば、クラスとモジュールがあればPythonやRuby、関数型言語(アリティがある)ならErlang、といった具合です。本当に近いものが見つかれば、90%終わったも同然です。
ロールとディレクティブの作成¶
まずはディレクティブを作成します。ユーザの学習コストを下げるために、Pythonドメインと同じにできるところは同じにしましょう。ディレクティブは「引数のタイプ」と、「階層上の位置」の種類だけ作ります。
例えば、Rubyの場合、クラスメソッドとアトリビュートはクラスのメンバーにしかなりません。グローバル変数はグローバルに属します。定数とメソッドはクラスのメンバーにもできるし、モジュールのメンバーにもなります。関数はモジュールに属しますよね。言語を知っていると、メソッドとクラスメソッドと関数を同じディレクティブにしたくなるところですが、ぐっとこらえましょう。
とはいえ、共通化できるところも多いので、Rubyの場合は次のようなクラス階層になっています。多くのコードがRubyObjectにあります。これは説明を書くためのディレクティブです。RubyModuleとRubyCurrentModuleはPythonドメインに準拠しています。インデックスでモジュール名をクリックしたときにはRubyModuleディレクティブの場所にジャンプします。RubyCurrentModuleはアンカーは作成しないが、そのディレクティブから先に置かれたクラスなどを特定のモジュールに属させたい場合に利用します。どちらも、説明を書くディレクティブではなく、フラグのようなディレクティブなので、多機能なObjectDescriptionではなく、Directiveを直接利用します。
ドメインの処理の流れ &mdash; Python製ドキュメンテーションビルダー、Sphinxの日本ユーザ会
