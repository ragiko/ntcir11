
パソコン活用研究シリコンバレー(C、C++、の活用研究)
低水準入出力関数 
=======================================================================================
ファイル入出力関数でファイル入出力関数として、まずfopen, fclose, putc, fputc, getc, fgetc
などの説明
をしましたが、これらはOS(処理系)に依存しない高水準入出力関数と呼ばれるものでした。
他方で、OS(処理系)に依存する低水準入出力関数が存在します。高水準入出力関数で記述できるもの
は、高水準入出力関数で記述しておくべきだと思いますので、あえて低水準入出力関数を使うケースは
少ないと思います。が、低水準入出力関数について知っておいて損はない(?)ので、一応まとめてみました。
=======================================================================================
1 ファイルのオープン/クローズ
ファイルのオープン/クローズには、open, closeを使います。(高水準ではfopen, fclose でしたね)
まず、低水準入出力関数の特徴について簡単に説明します。よくわからなければ、読み飛ばして
下さい。さしあたり、使い方さえわかれば問題ないので、わからなくて困ることはないでしょう。
高水準関数のfopen, の場合には関数の戻り値はファイル構造体へのポインタでしたが、低水準
関数のopen, の戻り値はファイルハンドルです。ファイルハンドルはOSがファイルを管理するため
の識別番号のようなものです。ファイルハンドルにはあらかじめ値が設定されているものがあり、
MS-DOSの場合は標準入力(デフォルトではキーボード)が0、標準出力(デフォルトではディスプ
レイ)が1、標準エラー出力が2になっています。従ってユーザーがopenしたファイルには3以降の
ファイルハンドルが割り振られます。(場合によっては、標準補助入出力に3、標準プリンタ出力に4
があらかじめ設定される仕様のこともあります。その場合ユーザーのopenしたファイルには5以降の
ファイルハンドルが割り振られます。)
このように、低水準入出力関数はOSが使用するファイルハンドルをファイル操作のために直接使用
するため、OS依存の関数となっています。このため他の処理系とは互換性がなく、移植性が低い
関数です。
MS-DOS用のコンパイラの場合、低水準入出力関数の機能は、INT21のシステムコールとほぼ同機能
です。(Turbo CにはMS-DOSのシステムコール0x3Dを直接呼び出す_open という関数も用意され
ています。)
最初にファイルを開くための関数openについて説明します。ファイルの読み書きを可能にするため
には、openでファイルを開かなければなりません。openすると、ファイルの識別番号であるファイルハ
ンドルが戻り値として返ってきます。以下ファイルの読み込み、書き込み他の操作の時には、この
ファイルハンドルでどのファイルへの操作かを指定してやることになります。
以下にLSICの場合のopenの書式を記載します。コンパイラにより若干仕様の異なることがあります
ので、お使いのコンパイラの仕様書を確認して下さい。
【書式】 #include <fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<io.h>
int open(filename, flag [, mode]);
char *filename;
int flag;
int mode
返り値 成功の場合はファイルハンドル、失敗(エラー)の場合は-1が返る 
filename
はオープンするファイル名(パスを含む)
flag, modeは以下のものを指定します。
<フラグ>
以下のフラグの論理輪を記述します。
O_RDONLY 読み出しのみ可
O_WRONLY 書き込みのみ可
O_RDWR 読み書き共に可
O_BINARY バイナリモードでオープンします
O_APPEND このフラグがセットされていると、書き込みを実行する直前にファイル
ポインタはファイルの最後にシークします
O_CREAT 新規ファイル作成をします。すでにファイルが存在する場合、何もしません。
ファイルが存在しない場合には新たなファイルを作成します。
O_TRUNC 新規ファイルを作成します。ファイルがすでに存在する場合、既存ファイル
長は0 に切りつめられます(すなわち空になる)。
O_EXCL  O_EXCL がO_CREATと共に指定されている場合、すでにファイルが存在し
ているときにはopen()は失敗します
<モード>
modeはO_CREATを指定して新たなファイルを作成するときに必要となり、ファイルの
保護モードを指定します。<sys/stat.h>で定義されている定数を使って次のように
指定します。
S_IWRITE 書き込み可
S_IREAD 読み出し可(リードオンリーファイルを作ります)
S_IREAD | S_IWRITE 読み書き可
ただし、MS-DOS ではライトオンリーのファイルは作成できませんので、
S_IWRITEと
S_IREAD | S_IWRITEとは同じ意味となり、いずれもリードライト可能なファイルになり
ます。
例えば、data.binというバイナリーファイルをバイナリーモードでオープンする時は、
int fd;
fd = open("data.bin", O_RDWR | O_BINARY);
のように記述します。
テキストモードでオープンすると、改行復帰の制御コード(&H0D,
&H0A)、終端コード(&H1A)を制御コード
として処理します。
ちなみに高水準入出力関数fopenの戻り値は、ファイル構造体へのポインタですが、ファイル構造体
のメンバーのひとつとして、ファイルハンドル(=ファイルディスクリプタ)があります。すなわち、高水準
入出力関数も、ファイル構造体を通してファイルハンドルを参照しているわけです。
FILE構造体については、FILE構造体を参照して下さい。
次はファイルをクローズする関数closeです。
close()はファイルハンドルfdで示されるファイルをクローズし,そのハンドルを他の
ファイルに使用できるように解放します。
ファイル入出力関数
