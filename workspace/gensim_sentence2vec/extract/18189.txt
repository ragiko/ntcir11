自分の記憶を整理する為のメモ。
Python って、メソッドの引数の渡し方はなかなか特殊ですよね。
名前付引数とか、デフォルト値とか、ほかの言語から引っ越してきた人にとっては、なかなか新鮮な感じ。
(最近の言語はみんなこんな感じなのだろうけど)
tuple とか dict でも、引数を渡せたりもします。
すなわち、可変長引数、ってことになるのかな?
なんだけど、その使い方をうまく覚えてなかったので再復習。
 
まず、tuple で渡したいとき。
こんな感じ。
function(*tuple) 見たいな感じで渡せばいい。
`*` を忘れると、第一引数に tuple が投げられるだけなので、へんなことになります。
def function(*args) のように受け取れば、与えられた引数が args に tuple として入ってきます。
 
次は、dict で渡してみる場合。
たぶんこっちのほうが使いそう?
とまあ、名前付引数って便利ですねー。
dict で渡したり、受け取りたいときは `*` を2個くっつけてあげます。
こっちも、何もつけないで渡すと普通の dict として渡されます。
 
これらを組み合わせたり、いろいろやると、面白いことがいろいろできる。
test1() は、明示的に名前が指定されている引数は代入して、残りを kwargs に入れるサンプル。
id は、ちゃんと id に入ってくれます。
test2() は、tuple と dict の組み合わせ。
test3() は、引数のデフォルト値と組み合わせて、必要なものだけを設定するようなサンプル。
test4() は、Error を出す為のサンプルになっていますw
 
興味深いのは下のほうにコメントアウトしている、実行するとエラーになる行です。
test4(*testt, **testd)
まずはこっちから。これやるとエラーになります。
test4() は (id, *args, **kwargs) と設定されています。
kwargs の中 id の名前がつけられた辞書が存在するとエラーが出ます。
TypeError: test4() got multiple values for keyword argument 'id'
すなわち、tuple で渡された名前なしの *args か、id の名前がつけられた **kwargs のどちらをとればいいかわからなくて、Python が混乱してる状態です。
思わぬときにふとやってしまいそうなエラーなので、個人的には要注意。
 
で、test1() のエラーのほうも同じです。
引数に明示的に id が指定されているにもかかわらず、**kwargs で渡す dict のなかに id の名前がついた辞書があると、これまた Python が混乱して同じエラーが出ます。
気をつけましょう。
 
というわけで、終わり。知ってると便利そうです。
今作ってるプログラムで、これを使おうかなと思ったけど、んー...
すっきりさせたいのに、引数の部分とか、その引数を処理する部分がまったくすっきりしてない状態なので...
いや、Twitter API の仕様がちょっとおかしいだけだが...
Python のメソッド可変長引数とか。 - trial and error
