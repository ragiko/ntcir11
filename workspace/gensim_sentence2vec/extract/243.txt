XML (Extensible Markup Language) は、構造化されたデータを記述する方法を提供します。主にデータの表示形式を制御する HTML タグとは異なり、XML タグはデータ自体の構造とデータ型を定義するために使用されます。  XML は、タグのセットを使用してデータの要素を記述します。各要素にカプセル化されるデータには、単純なものもあれば、複雑なものもあります。XML タグのセットは無制限に定義できます。たとえば、価格、税、納入先住所、請求先住所など、注文書に含まれる各種のデータを宣言する XML タグを定義できます。XML タグは、1 つの組織全体または複数の組織間にわたって採用されているため、あらゆる種類の異なるデータ ストアからのデータを簡単に交換して操作できます。 XML は、単純でプラットフォームに依存しない、広く普及している標準です。HTML と比較した XML の利点は、ユーザー インターフェイスが構造化データから分離されることです。このようにデータを表示形式から分離することで、さまざまなソースからのデータを統合できます。顧客情報、注文書、調査結果、支払い情報、医療記録、カタログ データなどを XML に変換できます。 XML と HTML XML と HTML の関係について注意する必要のあるいくつかの重要な点を以下に示します。
XML は HTML に代わる言語ではありません。実際、XML は HTML を補足するものと考えることができます。XML と HTML は異なる目的を持っています。HTML はデータを表示するためにデザインされ、データの外観に重点を置いています。XML はデータを記述するためにデザインされ、データの内容に重点を置いています。 HTML と同様に、XML は何もしません。XML タグを使用して注文書などの構造を記述することはできますが、XML タグには、その注文書を送信したり、処理したり、データが入力されているかどうかを確認したりするコードは含まれていません。XML 形式のデータに対してこれらの操作を実際に行うには、そのためのコードを別に記述する必要があります。 HTML とは異なり、XML タグはスキーマまたはドキュメントの作成者によって定義され、無制限です。HTML タグは定義済みであり、HTML を記述するときには、現在の HTML 標準でサポートされているタグだけを使用できます。   XML の使用 XML を使用すると、きわめて柔軟な方法でデータを渡すことができます。XML を使用して渡すことができるデータの例を次に示します。
通常のドキュメント 構造化レコード (予約の記録や注文書など) データを移動するインターネットおよびイントラネットの Web アプリケーション データを含むオブジェクト (永続的な形式のオブジェクトや ActiveX コントロールなど) データ レコード (クエリの結果セットなど) Web サイトに関するメタコンテンツ (CDF (Channel Definition Format) など) グラフィカル表示 (アプリケーションのユーザー インターフェイスなど) Web 上の情報とユーザー間のリンク XML と共に記述される C# コード (詳細については、「XML ドキュメント」を参照) 使用可能な XML Web サービスを見つけるための探索ドキュメント (詳細については、「XML Web サービス探索」を参照)  情報を格納する場合に XML がほかの形式よりも有利な点を次に示します。
XML 形式はテキスト ベースであるため、読みやすく、記述しやすく、多くの場合はデバッグも簡単です。 XML ドキュメントは、HTTP プロトコルやいくつかのブラウザなど、HTML に対して既に構築されているインフラストラクチャを多く使用します。HTTP により、XML はファイアウォールを越えて転送できます。 XML 解析は適切に定義されて広く実装されているため、さまざまな環境で XML ドキュメントから情報を取得できます。 アプリケーションは、XML パーサーを使用して構造の検証とデータ型のチェック (スキーマ使用時) を行うことができます。 XML は Unicode に基づいて構築されているため、国際対応のドキュメントの作成が簡単になります。  ただし、XML がすべての場合に適切なわけではありません。XML ドキュメントは、バイナリ形式よりも冗長になる傾向があります。また、使用するネットワーク帯域幅やストレージ領域も大きく、圧縮する場合には余分のプロセッサ時間を必要とします。XML 解析は、高度に最適化されたバイナリ形式の解析よりも低速で、多くのメモリを使用します。しかし、アプリケーションを注意深くデザインすることにより、これらの問題のいくつかは回避できます。 XML ドキュメントの検証 XML ドキュメントに含まれているデータおよび構造が適切かどうかを検証するには、XML ドキュメントに XML スキーマを関連付ける必要があります。XML スキーマは、XML ドキュメントを形成するために、要素や属性をどのように構造化するかを定義する規則です。スキーマは組織間で共有できるため、共有データの転送や処理が単純になります。詳細については、「XML スキーマの概要」を参照してください。 XML データの表示 XML データを表示するには、いくつかの方法があります。 データ連結機構も用意されていて、これをスタイル シートと共に使用することにより、XML データをビジュアルな表示用に調整したり、対話機能を追加したりできます。 XML を表示する方法のいくつかを次に示します。
XSLT (Extensible Style Sheet Language) カスケード スタイル シート (CSS: Cascading Style Sheets) Microsoft Internet Explorer  詳細については、MSDN Online の XML Developer Center (http://www.microsoft.com/japan/developer/xml/default.asp) を参照してください。 XML リソース HTML について十分な知識がある場合は、XML ドキュメントが妥当で、整形式かどうかに注意するだけで、XML ドキュメントの作成を習得できます。XML の詳細については、XML の SDK および MSDN Online の XML Developer Center (http://www.microsoft.com/japan/developer/xml/default.asp) を参照してください。 詳細については、World Wide Web Consortium (W3C) の「Specification for XML」(http://www.w3.org/XML/ (英語)) を参照してください。 参照 XML スキーマとデータ | XML スキーマと XML デザイナ | XML の要素、属性、および型 | Visual Studio の XML | XML ドキュメント | データセットの概要 | ADO.NET におけるデータ アクセスの概要
XML テクノロジの背景説明
