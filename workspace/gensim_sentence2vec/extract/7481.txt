本連載では、Oracleデータベースのパフォーマンス・チューニングの中から、特にSQLのチューニングに注目して、実践レベルの手法を解説する。読者はOracleデータベースのアーキテクチャを理解し、運用管理の実務経験を積んでいることが望ましい。対象とするバージョンは現状で広く使われているOracle9iの機能を基本とするが、Oracle 10gで有効な情報も随時紹介していく。(編集局)
連載目次
前編に引き続き、SQLチューニングを行うために必要な基礎知識として、アクセスするデータ・ブロック数に大きな影響を与える結合方法の種類と、オプティマイザの実行計画の決定に影響を与える統計情報、ヒントについて説明していきます。
結合方法の種類
正規化されたデータベースでは、必要なデータを得るために複数の表からデータを取得、ひも付ける(結合する)処理が数多く発生します。表を結合する方法にはいくつかの種類があり、それぞれの結合方法の特徴を理解することは、SQLチューニングを実施する際の重要なポイントとなります。レコードへのアクセス方法と同様に、不適切な結合方法が選択された場合には、アクセスするデータ・ブロック数が増加し、大きくパフォーマンスが劣化してしまう可能性があります。
ここでは代表的な結合方法である、「ネステッド・ループ結合」「ソート/マージ結合」「ハッシュ結合」について説明します。
ネステッド・ループ結合
ネステッド・ループ結合は、図1のように実行されます。
結合処理の基準となる外部表(図1ではDEPARTMENT表)を決定し、外部表から得られた結合条件列のデータを基に索引スキャンが行われる表を内部表(図1ではEMPLOYEE表)とする。
外部表のレコードごとに内部表にアクセスし、結合条件を満たすか検査する。
結合条件を満たすレコードを結合して結果を返す。
ネステッド・ループ結合は、表の一部分を結合する場合に有効な結合方法で、内部表の結合条件列に索引が作成されており、その索引を使用することでデータに効率的にアクセスできる場合に使用します。
ルールベース・アプローチでは、結合条件列に対する索引が片方の表にしか存在しない場合は、索引が存在する表が内部表となり、双方に索引が存在する場合には、FROM句の指定順番が後ろの表(図1ではDEPARTMENT表)が外部表となります。コストベース・アプローチの場合には、コスト注1に基づいて外部表が決定されます。
どちらの表を外部表とするかによって、アクセスするデータ・ブロック数は大きく異なってきますので、結合順序が重要なポイントとなります。ネステッド・ループ結合を効率化するためには、結合を試みるレコード数がより少ない方を外部表、レコード数に大差がない場合には、結合条件列の索引スキャンがより効率的な方を内部表とする必要があります。
Oracle SQLチューニング講座(3):SQLチューニングの必須知識を総ざらい(後編) (1/3) - @IT
