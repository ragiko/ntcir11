[InDesign][CS4][regex]正規表現の文字クラスまとめ
先日、Yuji@勉強部屋さんと電話で話していて、文字クラスの理解が正規表現の「一里塚」だなぁ、と感じました。InDesignで初めて正規表現に接する方も多く、戸惑われている人もいらっしゃると思います。
文字クラスは正規表現の中でもちょっと特別な存在です。文字クラス内だけで使えるメタ文字や、位置によって意味が変わるメタ文字もあります。文字クラスについては、日頃使い慣れた人でも間違えやすい部分もあり、結構奥が深いのでおさらいの意味も込めてまとめておきます。
文字クラスの基本			ここで言う「文字クラス」は、「POSIXブラケット表現」とも呼ばれます。違うサイトや書籍などで、これらの用語が混在することがありますが、ほぼ同じと考えて差し支えありません*1。
文字クラスは任意の1文字にマッチする「文字集合」を表現できます。
簡単な例から見てみましょう。たとえば「お母さん」と「お父さん」のどちらにもマッチさせたい時、
お[父母]さん
と書くことができます。「お[父母兄姉]さん」と書けば、「お兄さん」にも「お姉さん」にもマッチするようになります。
つまり、[ ]で囲われた文字のどれかにマッチするような表現ができるわけです。
HTMLで<H1>から<H5>の見出しを探したいなら「<H[12345]>」とすればOKです。
否定文字クラス
否定文字クラスは、示された文字以外を表します。つまり、そこにマッチさせたくない文字を列挙します。書き方は
[^マッチさせない文字]
となります。ブラケットの最初に「^」キャレットを書くんですね。たとえば、価格でない数字列は数字の後に「円」が付かないと予想して、「[0123456789,.]+[^円]」と表現できます。「1984年」や「3.141592…」にはマッチしますが、「198円」や「2,980円」にはマッチしません。
【注意】否定文字クラスを使うと、改行文字にもマッチする
否定文字クラスは、「全文字」に対して指定文字の補集合ですから、(明示的に改行文字を指定しない限り)改行文字にもマッチします。一般的に「.」(ピリオド:任意の1文字)が改行を含まない経験則から、否定文字クラスも改行を含まないと思い込んでしまいがちです。たとえば、「(?s)」シングルラインモードで「(?s)[^。]+。」と書いて「ひとつづきの文」にマッチするでしょうか? こんな感じになります。
たしかに、InDesignでは明示的にシングルラインモードにする必要があります(説明のためにやや無理がある^^)が、通常のエディタなどではこうしたマッチになってしまうのが普通です。否定文字クラスを使うときには、明示的に
[^。\r]+。
と、改行を含むように習慣付けましょう。
#InDesign内の正規表現では改行文字を「\r」で表しますが、アプリケーションによっては「\n」で表すものが多いようです。
文字クラスの中のメタ文字
文字クラスでは、文字クラスの中でしか使えないメタ文字があります。先に説明した否定文字クラスの「^」も、否定を表すメタ文字です。ただし、「^」を最初(「[」の直後)に書いた時だけ、メタ文字になります。			もうひとつ、文字クラス内でのみ使える重要なメタ文字は「-」(ハイフン)です。これは通常、文字コード範囲を表します。たとえば、大文字のアルファベットを表したければ「[A-Z]」と表現できます。漢字を表したければ「[一-龠]」になります。*2【注意】ここでお気づきになる方もいらっしゃるかもしれません。この文字範囲は文字コードに依存します。InDesignではUnicodeを使用しますので、漢字の範囲が「[一-龠]」になるわけです。書籍によっては(なんの説明もなく)「[亜-煕]」を漢字だと説明しているものがありますが、これはShift-JISの並びです。アプリケーションがどの文字コードを使っているかによって文字範囲は変わります。
実はこの「-」は文字と文字の間に挟まれた時だけ文字コード範囲を表します。つまり、「[0-9-]」と書いた時、「0から9までの数字とハイフン」にマッチします。文字に挟まれたハイフンはメタ文字としてコード範囲を表しますが、文字クラスの最初または最後に書かれたハイフンは、ハイフン文字そのものを表します。
【Note】文字クラスの中では「通常の文字」(リテラル)として扱われる文字
文字クラスの中で「.」を書いた時、通常の「任意の1文字」という意味ではなくなります。文字クラスの中で「.」は、「.」文字そのものです。ほかにも、「$」「?」「+」「(」などもそれぞれの文字そのものを表します。文字クラスの中だけの例外処理です。
逆に「]」(閉じブラケット)は「\]」と書かなければなりません。
【Note】ハイフンやピリオドを明示的にエスケープして見やすくする
正規表現的には「[0-9.-]」と書けば、「数字とピリオドとハイフン」にマッチします。でも見た目が分かりにくいですよね。こういう時は
[0-9\.\-]
と明示的に「\.」「\-」と書いて、これがピリオドやハイフンそのもだと見た目に分かりやすくするとよいでしょう。
これは、メタ文字以外の文字の直前にある「\」(バックスラッシュ)は無効と見なされるからです。たとえば「\あ」と書けば、「あ」そのものを表したのと同じです。多用する方法ではありませんが、前述のような「わかりやすさ」を表現できます。
【Note】文字リテラルではなく、コードポイントで文字範囲を指定する。
これはあまり多用する記法ではないのですが、文字コードを使ってコード範囲を表現します。たとえば、フォントによって文字を持たない範囲を含めたりすることができます。また、InDesign CS3ではカタカナにマッチしないバカバグがあって、こうした時の逃げ道にも利用できます。カタカナの範囲を指定したければ
[\x{30a1}-\x{30fe}]
と表現します。これは、Unicodeで30a1〜30feを指定したのと同じことになります。
文字クラスの略記法*3
文字を表す正規表現の多くは文字クラスの略記法です。たとえば、「\d」は「[0-9]」と同じ意味になります。極端に言うなら、「.」ピリオドは「[^\r\n]」改行以外の文字すべてと書き換えることができます。主な略記法を下記に示します。
略記法意味文字クラス記法備考
正規表現の文字クラスまとめ - 名もないテクノ手
