
Visual Basic 中学校 >
初級講座 
>  
第29回 2つ目のフォーム
いよいよフォームを1つしか使わないプログラムから脱出です。複数のフォームをうまく制御して高度なアプリケーションを作りましょう。今回はその第一歩です。
この回の要約
・Form2を表示させるには次のようにする。
Dim f As New Form2
f.Owner = Me
f.Show
・ShowDialogメソッドでForm2を表示すると、Form2が閉じるまでForm1を操作できない。
・ShowDialogメソッドの戻り値はForm2のDialoResultプロパティの値。
・呼び出し時にOwnerプロパティをセットしておけば、Form2側ではOwnerプロパティを使ってForm1にアクセスすることができる。
・Application.OpenFormsプロパティを使うとすべての開いているフォームにアクセスできる。
・OwnedFormsプロパティを使うとすべての子フォームにアクセスできる。
2007/01/27改訂:改定前のバージョンはこちら 
(ただし一部画像は改変されているか失われています)
1.フォームの追加
今まで入門講座・初級講座等ではフォームを1つだけ使うプログラムを説明してきました。市販の本や、多くのWebサイトでもほとんどの場合フォームを1つしか使わない例が紹介されています。
これは説明を簡単にするための当然の措置なのですが、実際のアプリケーションの多くは2つ以上の画面からできていますからフォームだけので完成するプログラムというのはそれほど多くありません。
今回はまさにこの複数のフォームの使い方を中心に説明します。
さて、フォームを追加するだけなら実はとても簡単です。VBでプロジェクトを作成する際に「Windows 
アプリケーション」を選択すれば、はじめからフォームが1つある空のプログラムが作成されます。このとき、ソリューションエクスプローラは次のようになっています。この例ではプロジェクト名を「FormTest」
にしています。
ソリューションエクスプローラが表示されていない場合は[表示]メニューから[ソリューションエクスプローラ]を選択することで表示させることができます。通常は画面の右上の方に表示されています。
標準的な設定のソリューションエクスプローラでは、現在プロジェクトにどのようなファイルが含まれているかが表示されています。VB2005の場合は初期状態では代表的な項目だけが表示されています。今回のテーマである「フォーム」に関してはすぐわかるようにForm1.vbが本体です。
ここで、もう1つフォームを追加してみます。
FormTestプロジェクトの上で右クリックして、[追加] - [Windows フォームの追加]をクリックします。
画像3:新しいフォームを追加する
そうすると新しい項目の追加画面が表示されるので新しいフォームの名前を入力して[開く]をクリックします。ここではデフォルトのまま「Form2.vb」という名前を付けることにします。
画像4:新しい項目の追加ダイアログ
そうすると、次の画像のようにプロジェクトに追加されたForm2.vbがソリューションエクスプローラに表示されます。
画像5:Form2が追加されたソリューションエクスプローラ
このようにフォームを追加するのは実に簡単です。この調子でいくつもフォームを追加していくことができます。
2.フォームのデザイン
では、Form1とForm2をデザインして簡単なサンプルアプリケーションを作ってみましょう。
まず、ソリューションエクスプローラでForm1を選択して、Form1のデザイナを表示させてください。
画像6
デザイナを表示させるには、上の画像の右側のボタンをクリックするかソリューションエクスプローラ上でForm1をダブルクリックします。
念のために言葉の説明をしておきますが、フォームのデザイナとは普段からボタンとかテキストボックスをフォームにぺたぺた貼り付けていくあのおなじみの画面のことです。フォームが1つであればデザイナを特に区別する必要がないのですが、今回はフォームが2つなのでデザイナに注意してください。Form1をデザインしているつもりが、よく見たらForm2だったということがないようにしなければなりません。
さて、デザイナが開いたらForm1にラベルとボタンを1つずつ貼り付けてください。ボタンが押されたらForm2を呼び出すようにします。
ボタンのクリックイベントに次の通り書き込んでください。
VB 2つ目のフォーム - Show, ShowDialog, DialogResult, Ownerなど
