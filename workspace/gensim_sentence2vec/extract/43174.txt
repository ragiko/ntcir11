
SAK 図書館 
|
VB |
SQL |
Perl |
PHP |
ASP |
JSP |
C |
PC |
HP |
FAQ |
フリーソフト |
SQL チューニング編2 - SQL 実行計画解析、EXPLAIN、表走査、索引走査
Oracle 固有の部分があるかもしれません。SQL-Server、MDB では注意のこと。
実行計画解析
・SQL の実行計画がどのようになっているか調査することができる。
まず、調査スキーマに plan_table を作成する。
これは、調査スキーマで一度だけ実行すればよい。
(データベース最適化、データベースチューニング、テーブル最適化)
@j:\orawin95\rdbms80\admin\utlxplan.sql
・utlxplan.sql では、次の plan_table が作成される。
create table plan_table (
statement_id     varchar2(30),
timestamp        date,
remarks          varchar2(80),
operation        varchar2(30),
options          varchar2(30),
object_node      varchar2(128),
object_owner     varchar2(30),
object_name      varchar2(30),
object_instance  numeric,
object_type      varchar2(30),
optimizer        varchar2(255),
search_columns   number,
id               numeric,
parent_id        numeric,
position         numeric,
cost             numeric,
cardinality      numeric,
bytes            numeric,
other_tag        varchar2(255),
partition_start  varchar2(255),
partition_stop   varchar2(255),
partition_id     numeric,
other            long
);
・plan_table を削除するには、次のようにする。
drop table plan_table;
・実行計画を採取するには、次のように目的の SQL 文を発行する。
truncate table plan_table;
explain plan for
select * from sak.受注m where 受注番号 like '00%' order by 受注番号
;
・実行計画を問い合わせ表示するには、次のようにする。
select operation || ' options= ' || options || ' object= '  || object_name
|| ' position= ' || position || ' cost= ' || cost from plan_table;
・結果は、次のように表示される。
【SELECT STATEMENT options=  object=  position=  cost=
【TABLE ACCESS options= BY INDEX ROWID object= 受注M position= 1 cost=
【INDEX options= RANGE SCAN object= SYS_C00866 position= 1 cost=
・例えば、次の SQL を発行したとする。
where が中間一致になっているため、
INDEX options= FULL SCAN
となる。
これでは索引の意味がない。
truncate table plan_table;
explain plan for
select * from sak.受注m where 受注番号 like '_0%' order by 受注番号
;
select operation || ' options= ' || options || ' object= '  || object_name
|| ' position= ' || position || ' cost= ' || cost from plan_table;
【SELECT STATEMENT options=  object=  position=  cost=
【TABLE ACCESS options= BY INDEX ROWID object= 受注M position= 1 cost=
【INDEX options= FULL SCAN object= SYS_C00866 position= 1 cost=
・例えば、次の SQL を発行したとする。
受注sv には索引がないため、
TABLE ACCESS options= FULL
になる。
受注m に対して、同じ SQL を発行したときは、索引があるので、
TABLE ACCESS options= BY INDEX ROWID
INDEX options= RANGE SCAN
となっていた。
truncate table plan_table;
explain plan for
select * from sak.受注sv where 受注番号 like '0%' order by 受注番号
;
select operation || ' options= ' || options || ' object= '  || object_name
|| ' position= ' || position || ' cost= ' || cost from plan_table;
【SELECT STATEMENT options=  object=  position=  cost=
【SORT options= ORDER BY object=  position= 1 cost=
【TABLE ACCESS options= FULL object= 受注SV position= 1 cost=
・例えば、次の SQL を発行したとする。
where が索引の一致になっているため、
INDEX options= UNIQUE SCAN
となる。
truncate table plan_table;
explain plan for
select * from sak.受注m where 受注番号 = '000001-001'
;
select operation || ' options= ' || options || ' object= '  || object_name
|| ' position= ' || position || ' cost= ' || cost from plan_table;
【SELECT STATEMENT options=  object=  position=  cost=
【TABLE ACCESS options= BY INDEX ROWID object= 受注M position= 1 cost=
【INDEX options= UNIQUE SCAN object= SYS_C00866 position= 1 cost=
・例えば、次の SQL を発行したとする。
where で索引を加工してしまっているので、
TABLE ACCESS options= FULL
になり、索引がまったく使用されていない。
truncate table plan_table;
explain plan for
select * from sak.受注m where substr(受注番号, 1, 6) = '000001' order by 受注番号
;
select operation || ' options= ' || options || ' object= '  || object_name
|| ' position= ' || position || ' cost= ' || cost from plan_table;
【SELECT STATEMENT options=  object=  position=  cost=
【TABLE ACCESS options= FULL object= 受注M position= 1 cost=
・上と同じ結果を得るのであれば、次の SQL を発行した方が良い。
where で like の前方一致を索引に対して使用しているので、
INDEX options= RANGE SCAN
となる。
truncate table plan_table;
explain plan for
select * from sak.受注m where 受注番号 like '000001%' order by 受注番号
;
select operation || ' options= ' || options || ' object= '  || object_name
|| ' position= ' || position || ' cost= ' || cost from plan_table;
【SELECT STATEMENT options=  object=  position=  cost=
【TABLE ACCESS options= BY INDEX ROWID object= 受注M position= 1 cost=
【INDEX options= RANGE SCAN object= SYS_C00866 position= 1 cost=
・not や is null の where 句も全表走査になりやすい。
not is null は > '' で代替え可能な場合もある。
少なくとも RANGE SCAN になるように工夫した方が良い。
options の種類
・TABLE ACCESS options= BY USER ROWID
- rowid により走査している
・TABLE ACCESS options= FULL
- 全表走査している
・INDEX options= UNIQUE SCAN
- 索引に対して等価検索している
・INDEX options= RANGE SCAN
- 索引に対して範囲検索している
SQL チューニング編資料
2001.08.01 SQL チューニング編1 - チューニングの方向、プログラムチューニング
2001.08.01 SQL チューニング編2 - SQL 実行計画解析、EXPLAIN、表走査、索引走査
2001.08.01 SQL チューニング編3 - SQL 実行計画解析、EXPLAIN、ヒントオプション
2001.08.01 SQL チューニング編4 - SQL 実行計画解析、ANALYZE、コストベース
SQL 基礎実地編資料
2001.11.20 SQL 基礎実地編 (その一) テーブル作成、項目タイプ、キー作成、順序作成
SQL クラスタ - クラスタ索引、ハッシュクラスタ、データベースリンク
2001.06.20 SQL 基礎実地編 (その二) テーブル削除、クリア、定義変更、名前変更、権限
2001.06.20 SQL 基礎実地編 (その三) ビュー作成、結合ビュー作成、ビュー削除
2001.06.20 SQL 基礎実地編 (その四) 問い合わせ、レコード参照、クエリ
SQL 表結合(join) - 単純結合、等価結合、非等価結合、外部結合、再帰結合
SQL 問い合わせ - スカラー副問い合わせ、cursor、row_number、over、with
SQL 問い合わせ - 分析ファンクション、over、partition by、range、dense_rank
SQL 問い合わせ - rollup、cube、grouping sets、having、using、cross、natural
2001.06.20 SQL 基礎実地編 (その五) 問い合わせ、抽出、ソート(並べ換え)
2001.06.20 SQL 基礎実地編 (その六) 問い合わせ、集計、重複レコード、集合、複合
2001.07.12 SQL 基礎実地編 (その七) 問い合わせ、関数、四捨五入、文字操作他
SQL 数値関数 - 余り、四捨五入、切り捨て、切り上げ、数値フォーマット他
SQL 文字関数 - 連結、空白削除、置換、切出、検索、長さ、数値変換他
SQL 日付関数 - システム日付、日付の差、日付の加算、次の曜日、月末日
SQL 日付計算、曜日計算、月末日計算、時間計算、期間計算、日付抽出
SQL 特殊関数 - 等価判断、最大判断、最小判断、ヌル変換
2001.06.20 SQL 基礎実地編 (その八) 問い合わせ、スキーマリスト、テーブル構造他
2001.06.20 SQL 基礎実地編 (その九) テーブルコピー、レコード追加、修正、削除
SQL マージ - MERGE、using、matched、not matched (Oracle9i 以降)
2001.06.20 SQL 基礎実地編 (その十) ストアドファンクション、PL/SQL、動的 SQL
SQL パッケージ - ストアドパッケージ、データベーストリガー
SQL 基礎編資料
2000.10.14 SQL 基礎編 (その一) テーブル操作 create table、alter table、drop table
SQL 基礎編 - 【補足】複合キー alter table、primary key
2000.10.14 SQL 基礎編 (その二) ビュー操作 create view、select、drop view
2000.10.14 SQL 基礎編 (その三) データ操作 insert、update、delete、commit、rollback
2000.10.14 SQL 基礎編 (その四) データ照会 select、where、group by、order by
2000.11.18 SQL 基礎編 (その五) キーワード char、varchar2、number、long、raw
2000.11.18 SQL 基礎編 (その六) テーブル創成 create table、select、union、rename
2000.11.18 SQL 基礎編 (その七) レコード操作 insert、update、where、having、distinct
2000.11.18 SQL 基礎編 (その八) ユーザ関数 create or replace function
2000.11.18 SQL 基礎編 (その九) PL/SQL declare、begin、DBMS_SQL、dbms_output
2001.11.20 SQL 基礎編 (その十) SQL*Plus コマンド - describe、variable、execute、spool
Oracle PL/SQL 編資料
2001.08.24 Oracle PL/SQL 編1 - 注釈、識別子、引用句、変数、演算子、比較演算子
2001.08.24 Oracle PL/SQL 編2 - 制御構造、条件式、判断、多重判定、ループ、例外処理
2001.08.26 Oracle PL/SQL 編3 - コレクション、table、varray、宣言、コレクションメソッド
2001.08.26 Oracle PL/SQL 編4 - SQL 文、動的 SQL、select、insert、update、delete
2001.08.26 Oracle PL/SQL 編5 - カーソル、カーソル for ループ、例外識別子、例外処理
2002.07.12 Oracle PL/SQL 編6 - ストアドパッケージ package 、データベーストリガー
2002.07.03 Oracle PL/SQL 編7 - 標準ファイル I/O utl_file.fopen、utl_file.put_line
Oracle PL/SQL utl_file.fopen、get_line、put、new_line、put_line、putf、fflush
2002.07.01 Oracle PL/SQL 編8 - SMTP メール送信 utl_smtp、utl_raw.cast_to_raw
2002.07.01 Oracle PL/SQL 編9 - 動的 SQL、EXECUTE IMMEDIATE、using、into、returning
2002.07.01 Oracle PL/SQL 編10 - 暗号化、dbms_obfuscation_toolkit、desencrypt
2002.07.01 Oracle PL/SQL 編11 - 乱数、dbms_random、initialize、seed、random
2002.07.01 Oracle PL/SQL 編12 - BASE64 エンコード、utl_encode、base64_encode
2002.07.01 Oracle PL/SQL 編13 - テーブル構造表示、項目検索表示、user_tab_columns
2002.07.01 Oracle PL/SQL 編14 - 全テーブル構造リストファイル出力、utl_file.put_line
2002.07.03 Oracle PL/SQL 編15 - ユーザオブジェクト一覧 CSV 出力、HTML 出力
2002.07.04 Oracle PL/SQL 編16 - デバッグメッセージ表示、dbms_output.put_line
2002.07.04 Oracle PL/SQL 編17 - テーブル構造取得ストアド、CreatePLSQLDynaset、ASP
2002.07.12 Oracle PL/SQL 編18 - パッケージサブプログラムオーバーロード、package
2002.07.15 Oracle PL/SQL 編19 - ウェブアクセス、UTL_HTTP、UTL_URL、UTL_INADDR
2002.08.12 Oracle PL/SQL 編20 - レコード件数一覧表示、cursor、execute immediate
PostgreSQL 編、JAVA Servlet、JSP 編資料
2002.10.21 PostgreSQL 編1 - UNIX コマンド、Cygwin 2.05b、Cygwin B20(bash 2.02)
2002.10.21 PostgreSQL 編2 - Cygwin B20、.bashrc、IPC パッチ、PostgreSQL インストール
PostgreSQL 7.2.3(postgresql-7.2.3.tar.gz)、JDBC pgjdbc2.jar インストール
2002.10.21 PostgreSQL 編3 - ipc-daemon 起動、PostgreSQL 起動、psql 起動、ipgsql
2002.10.21 PostgreSQL 編4 - テーブル作成、制約、項目タイプ、キー作成、順序作成
2002.11.01 PostgreSQL 編5 - テーブルクリア、テーブル定義変更、整合性制約定義、権限
2002.11.01 PostgreSQL 編6 - ビュー作成、結合ビュー作成、ビュー削除、create view
2002.11.01 PostgreSQL 編7 - 問い合わせ、レコード参照、クエリ、select、like、count
2002.11.01 PostgreSQL 編8 - 表結合(join)、単純結合、等価結合、外部結合、再帰結合
2002.11.05 PostgreSQL 編9 - スカラー副問い合わせ、件数指定、OFFSET、LIMIT、HAVING
2002.11.05 PostgreSQL 編10 - 問い合わせ、抽出、ソート、where、like、order by、desc
2002.11.05 PostgreSQL 編11 - 問い合わせ、集計、平均、最大、最小、重複、集合、複合
2002.11.05 PostgreSQL 編12 - 数値関数、余り、四捨五入、切り捨て、切り上げ、数値書式
2002.11.05 PostgreSQL 編13 - 文字関数、連結、空白削除、置換、切出、検索、長さ、数値
2002.11.05 PostgreSQL 編14 - 日付関数、システム日付、切捨、日付差、日付加算、書式
2002.11.05 PostgreSQL 編15 - 特殊関数、多重判定、ヌル判定、ヌル比較、case、nullif
2002.11.05 PostgreSQL 編16 - 日付計算、曜日、月末日、時間計算、期間計算、日付抽出
2002.11.05 PostgreSQL 編17 - 問い合わせ、テーブルリスト、ユーザリスト、テーブル構造
2002.11.05 PostgreSQL 編18 - テーブルコピー、レコード追加、修正、削除、表切り捨て
2002.11.05 PostgreSQL 編19 - ストアドファンクション、function、PL/pgSQL、トリガー
2002.11.05 PostgreSQL 編20 - VB ストアド呼び出し、トリガー、トランザクションロールバック
2002.11.06 PostgreSQL 編21 - PL/pgSQL、構文書式、制御構造、メッセージ、動的 SQL
2002.11.06 PostgreSQL 編22 - PL/pgSQL、カーソル for ループ、カーソル制御、FETCH
2003.05.01 PostgreSQL 編23 - PL/pgSQL、テーブルレコード件数一覧表示
2003.05.01 PostgreSQL 編24 - PL/pgSQL、テーブル構造一覧表示、標準、動的SQL、LIKE
2002.10.22 PostgreSQL + VB ADO 編1 - ODBC ドライバ、レコード更新、レコード参照
2002.10.22 PostgreSQL + ASP ADO 編1 - ODBC ドライバ、レコード更新、レコード参照
2002.10.22 PostgreSQL + Web 編1 - Apache、CGI Perl、PHP、MySQL インストール、設定
2002.10.22 PostgreSQL + PHP 編1 - 接続 pg_connect、レコード参照 pg_fetch_array
2002.10.24 PostgreSQL + Web 編2 - JAVA Servlet、JSP、J2SDK、Tomcat、JDBC 環境
2002.10.24 PostgreSQL + Servlet、JSP 編1 - war 作成、JDBC 配置、Servlet, JSP テスト
2002.10.24 PostgreSQL + Servlet、JSP 編2 - Servlet JDBC アクセス、getConnection
2002.10.24 PostgreSQL + Servlet、JSP 編3 - JSP JDBC アクセス、executeQuery
2002.10.25 Oracle9i + Servlet、JSP 編1 - Servlet JDBC アクセス、getConnection
2002.10.25 Oracle9i + Servlet、JSP 編2 - JSP JDBC アクセス、executeQuery
2002.11.01 PostgreSQL + Web 編3 - Apache、Tomcat 連携、mod_jk.dll、mod_jk.conf
2002.11.01 PostgreSQL + Web 編4 - Cygwin 2.05b、Cygipc 1.11.1 インストール、移行
MySQL 編資料
2003.06.01 MySQL 編1 - インストール、ODBC ドライバ、日本語設定、トランザクション設定
2003.06.01 MySQL 編2 - ODBC + VB ADO、テーブル作成、レコード更新、レコード参照
2003.06.01 MySQL 編3 - ODBC + ASP ADO、テーブル作成、レコード更新、レコード参照
2003.06.01 MySQL 編4 - PHP、レコード更新、レコード参照、トランザクション
2003.06.01 MySQL 編5 - JDBC + JAVA Servlet、JSP、レコード更新、レコード参照
2003.06.01 MySQL 編6 - テーブル作成、制約、項目タイプ、キー作成、順序作成
2003.06.01 MySQL 編7 - テーブルクリア、テーブル定義変更、整合性制約定義、権限
2003.06.01 MySQL 編8 - 問い合わせ、レコード参照、クエリ、select、like、count、concat
2003.06.01 MySQL 編9 - 表結合(join)、単純結合、等価結合、外部結合、再帰結合
2003.06.01 MySQL 編10 - スカラー副問い合わせ、件数指定、LIMIT、HAVING、USING
2003.06.01 MySQL 編11 - 問い合わせ、抽出、ソート、where、like、order by、desc
2003.06.01 MySQL 編12 - 問い合わせ、集計、平均、最大、最小、重複、集合、複合
2003.06.01 MySQL 編13 - 数値関数、余り、四捨五入、切り捨て、切り上げ、数値書式
2003.06.01 MySQL 編14 - 文字関数、連結、空白削除、置換、切出、検索、長さ、数値
2003.06.01 MySQL 編15 - 特殊関数、多重判定、ヌル判定、ヌル比較、case、nullif
2003.06.01 MySQL 編16 - 日付関数、システム日付、切捨、日付差、日付加算、書式
2003.06.01 MySQL 編17 - テーブルコピー、レコード追加、修正、削除、表切り捨て
|
VB |
SQL |
Perl |
PHP |
ASP |
JSP |
C |
PC |
HP |
FAQ |
フリーソフト |
Copyright (C) 1999-2015 Y.SAK
SQL チューニング編2 - SQL 実行計画解析、EXPLAIN、表走査、索引走査 - SAK Streets
