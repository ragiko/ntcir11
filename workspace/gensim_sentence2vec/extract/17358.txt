
型の変換は「as.numeric」のような関数を使う。型を調べる場合は「mode」関数を使う。検査する場合は「is.」のような関数を使う
ベクトルは「c(1,2,3)」によって表現され、「x <- c(1,2,3)」とすることで x がベクトルとして定義される
行列は「matrix(c(...),n)」によって表現され、「A <- matrix(...,n)」とすることで、 A
がn行(成り行きの列数)の行列になる(ベクトルのサイズが12で、n=3ならば、3X4
の行列になる)。Aが3x4の行列ならば、A[,1]は1列目の3要素からなるベクトルと同じこと。
「matrix(ベクトル, 行数(,
byrow=T))」と書くと、ベクトルの要素を行数の個数ずつの列ベクトルに分解して並べる、「byrow=T」とした場合はベクトルの要素数を行数で
割った数を列のサイズとして、その個数ずつに分割した行ベクトルと並べる、という意味。
cbind(列ベクトル1, 列ベクトル2, ...):列ベクトルを指定して行列を作る
rbind(行ベクトル1, 行ベクトル2, ...):行ベクトルを指定して行列を作る
参考:データ型
ベクトル
x <- c(1,3,5) # x[1]=1, x{2}=3, x[3]=5 と同じy <- c(1, 8, 5.4, 4)a <- c("A", "B", "AB", "w <- cbind(Data1=x, Data2=y)  # x,y を列ベクトルとして、4行2列の行列を作る、             # 1列目にはData1、2列目にはData2という名前を付けるy <- matrix(c(1,2,3,0,1,2),3) # 3行2列の行列を作る、11,21,31,12,22,32の順A <- matrix(c(1:6),2) # A は 2 x 3 行列で、((1,3,5), (2,4,6))A <- matrix(c(1:6),2, byrow=T) # A は 2 x 3 行列で、((1,2,3), (4,5,6))A[1,] # 1行目の行ベクトル (1,2,3)A[,2] # 2列目の列ベクトル (2,5) の転置data <- cbind(ID=seq(1:5),math=c(3,4,9,7,10),R=c(8,2,7,5,6)) # 縦に並べる(5行3列)colnames(data) <- c("ID","math","R") # データテーブルだけ作って後から名前を定義する場合 rbind() : 横に並べる
dim(A) : 行列Aのサイズ(行数、列数)
dim(A) = c(3,4):ベクトルAを3行4列の行列として定義、あるいは行列のサイズを変更(dim属性にベクトル値を代入)
nrow(A):行列Aの行数(length(A[,1]と同じ)
データフレーム(テーブル)
数値データと文字データが混在する場合
df <- data.frame(Math=x, English=y, BloodType=a)
データフレーム操作
ファイルからの入力
クリップボード経由
エクセルでデータテーブルを作成し、それを全選択してクリップボードにコピー。次いで
df <- read.table("clipboard", header=T)
とすれば、dfに入力される
エクセルファイルから直接入力:gdata
エクセルファイル(.xls)を読むためには、ライブラリが必要
library(gdata)
最初は「そんなライブラリは無い」と断られるので、インストールが必要
「パッケージ/パッケージのインストール」メニューから、ミラーサイトとgdataライブラリを指定すれば、自動的にインストールされる。Excelファ
イルを取り込む場合は
read.xls("dataFile.xls")
とすればよい(はず)
csvファイルの読み込み、保存
指定されたディレクトリにあるcsvファイルを読み込む
read.csv("testdata.csv", header=T, skip=3)write.csv(df, "testdata.csv", row.names=F)
ディレクトリの変更:「Rconsole」をアクティブにして「ファイル/ディレクトリの変更」メニューを選択、「フォルダの参照」ウィンドウで指定する
データの編集
fix(df)
と入力するとデータエディタが開き、データが表形式が表示され修正可能になる(ただし、カーソルキーが無いので、ある桁だけ修正する、というような細かい
操作はできない。もとのExcelファイルを使って修正し、再定義した方が能率的)
変数の追加
新たに列を追加する(合計の計算のように)
df <- transform(df, Sum=x+y)
項目の追加
列(新規項目)を追加するには「cbind」関数を使う。項目名を追加するには、「colnames」関数を使う。
df <- cbind(df, newItem)colnames(df)[length(df[1,])] <- newItemName
データフレームの統合
同じ行数を持つ複数のデータフレームを結合する
dfs <- merge(df1, df2, ...)
データフレームの抜粋
1列目と2列目だけからなるデータフレームを新たに作る場合
dfp <- df[c(1,2)]
データのソート
xベクトルの大きさの順に並べ替える
z <- order(df$x)dfsort <- df[z,]
ファイルの保存
write.table(df, file="results.txt")
もちろん、あとで
df <- read.table("results.txt")
によって復元出来る
Rのデータ構造
