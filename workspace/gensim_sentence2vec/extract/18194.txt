 
質問 
001D60CD【マニュアル「パフォーマンス管理」に以下の記載がありますが、ここでいう効率はスペース効率のことである、と理解していますが正しいでしょうか?】  
回答
<<< QUESTION >>> 2012/10/02 15:12:23 
<環境> DB2 10、z/OS V1.13 現在DB2 V7からV10へ、再構築でUNLOAD/LOAD形式で移行を検討しています。  可変長を含む索引について、ご教示いただきたいことが2点あります。  Q1) マニュアル「パフォーマンス管理」に以下の記載がありますが、ここでいう効率はスペース効率のことである、と理解していますが正しいでしょうか? 18バイト以下でも、埋め込みなしの場合は、索引のみアクセスが使用できるので、処理効率はよくなる、と理解しています。  <マニュアルの記載箇所> DB2 10 for z/OS > DB2 パフォーマンスのモニターおよびチューニング > パフォーマンス管理 > システム・パフォーマンスの管理 > パフォーマンスに関するストレージの構成 > ディスク・ストレージの向上 > ディスク・スペースの効率的な使用 > 索引の評価  <マニュアルの記載内容> 「索引の埋め込みを効率よく使用するには、次のようにします。 一般的な規則として、埋め込みなしの索引を使用するのは、保管される平均の大きさが、列当たり 18 バイトより大きい場合だけです。 例えば、VARCHAR(128) の列について定義されている索引キーがあり、そのキーの実際の長さが 8 バイトであるとします。この場合、以下の計算から分かるように、NOT PADDED として定義されている索引に必要なストレージの量は、PADDED として定義されている索引の場合の約 9 分の 1 ですみます。 」   Q2) マニュアル「DB2 for z/OS概説」に索引列の比較についての記載があります。 以下(1)～(3)の場合の比較の動作について、教えてください。  <前提> 列A CHAR(8) 列B CHAR(8) 列C VARCHAR(18)  (1) 複合列索引(A,B,Cの順) 比較条件 WHERE A='xxxxxxxx' AND B = 'yyyyyyyy' というように比較条件に可変長列が含まれない場合は、A、Bの固定長列部分はまとめに比較されますか。  (2) 複合列索引(A,B,Cの順) 比較条件 WHERE A='xxxxxxxx' AND B = 'yyyyyyyy' AND C = 'zzzzz' というように比較条件に可変長列が含まれる場合、A+Bはまとめて、C列のみ個別に比較されるのでしょうか。  (3) 複合列索引(A,C,Bの順) 比較条件 WHERE A='xxxxxxxx' AND B = 'yyyyyyyy' AND C = 'zzzzz' というように比較条件に可変長列が含まれる場合、A,B,C列それぞれ個別に比較されるという理解で正しいでしょうか。  <マニュアルの記載箇所> DB2 10 for z/OS > DB2 の概要 > DB2 for z/OS 概説 > データベース設計のインプリメンテーション > 索引の作成 > 一般的な索引属性  <マニュアルの記載内容> 「ただし、NOT PADDED 文節の使用には、次の欠点もあります。  ・DB2 は、列が最大長まで埋め込まれているときは、キー全体を比較するのではなく、対応する可変長列のペアを個別に比較する必要があるため、索引キーの比較の時間が多くかかります。 (Index key comparisons are slower because DB2 must compare each pair of corresponding varying-length columns individually instead of comparing the entire key when the columns are padded to their maximum length.)  ・DB2 は、可変長列ごとに、追加の 2 バイトの長さフィールドを格納します。したがって、最大長に達するまでの埋め込みの長さが 2 バイト以下である場合は、埋め込みを行わない可変長列の方が、実際にはストレージ所要量が多くなることがあります。」  <<< ANSWER >>> 2012/10/02 19:38:56  A1&2) (1)～(3)全てご理解の通りでよいと思います。  PADDED索引については、索引キーに可変長項目を持つため、キー長の使用したデータの取り扱いが必要になる為、列毎での操作になります。 可変長列項目を扱う場合は必ずデータ長フィールドを呼んで、各列のオフセットを計算する必要があります。 よって、内部的にも処理コストが大きくなります。 ただし、PADDED索引が提供するメリットを享受できるようなアクセスパスが使用される場合(Index Only accessや索引サイズ)はそれに余りあるメリットが得られる可能性もあります。 当然、NOT PADDED索引は逆のことが言え、MATCHCOLSまでの述部評価については、固定で評価できるという点はメリットになりますが、Index Only accessができないことや索引サイズが大きくなってしまう事で、索引に対するI/O量が増え、結果としてCPUコストも増える可能性があります。   以上
IBM DB2の可変長列を含む索引の比較処理について - Japan
