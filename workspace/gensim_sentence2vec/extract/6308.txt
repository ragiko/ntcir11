[ \t\r\n\f]*
以下はCSSのコアとなる生成規則である。
ここから先の章ではこの生成規則について説明する。
[D CSS2の文法]では、よりCSS2に限定した文法を掲げる。
stylesheet  : [ CDO | CDC | S | statement ]*;
statement   : ruleset | at-rule;
at-rule     : ATKEYWORD S* any* [ block | ';' S* ];
block       : '{' S* [ any | block | ATKEYWORD S* | ';' ]* '}' S*;
ruleset     : selector? '{' S* declaration? [ ';' S* declaration? ]* '}' S*;
selector    : any+;
declaration : property ':' S* value;
property    : IDENT S*;
value       : [ any | block | ATKEYWORD S* ]+;
any         : [ IDENT | NUMBER | PERCENTAGE | DIMENSION | STRING
| DELIM | URI | HASH | UNICODE-RANGE | INCLUDES
| FUNCTION | DASHMATCH | '(' any* ')' | '[' any* ']' ] S*;
この文法では読み易さを優先してCOMMENTという字句を省いてあるが、COMMENTは他の字句の間ならば任意の位置にいくつでも出現してよい。
上の文法でSという字句は空白類文字を表す。
空白類文字には、スペース(Unicode 32)、水平タブ(9)、行送り(10)、復帰(13)、書式送り(12)が含まれる。
他にも全角スペース(8195)や表意空白(12288)などスペースに似た文字が存在するが、これらは決して空白類文字の1種ではない。
4.1.2 キーワ−ド(Keywords)
キーワードは識別子の一種であり、引用符に挟んではならない。
つまり:
red
これはキーワードだが:
"red"
これはキーワードではなく文字列である。
他にも間違った例を挙げておく:
4.1.3 文字と活字ケース(Characters and case)
次の規則は常に拘束力を持つ:
原則として、CSSスタイルシートでは大文字と小文字を区別しない。
ただし、CSSの制御下に無い部分においてはその限りではない。
たとえば、HTMLのid属性値とclass属性値、フォントの名称、URIなどにおける活字ケースの区別は、本仕様の対象外である。
特に要素名の活字ケースについては、HTMLでは区別しないがXMLでは区別することに注意せよ。
CSS2の識別子(identifiers)には、セレクタに含まれる要素名、クラス名、一意識別子などがあり、使用可能な文字は[A-Za-z0-9]の範囲にある文字、ISO10646で161以上のコードが振られている文字、それにハイフンだけである。
識別子の先頭文字はハイフンや数字であってはならない。
また、識別子は、エスケープ文字やISO10646のコード番号による参照も含むことができる(次項参照)。
たとえば「B&W?」という識別子は「B\&W\?」あるいは「B\26 W\3F」と書き表すこともできる。
[UNICODE]と[ISO10646]の文字コードは、1対1対応であることに注意せよ。
CSS2では、バックスラッシュ(\)に3種類のエスケープ効果がある。
まず、文字列の中では、後ろに改行が続くバックスラッシュは無視される。
つまり、文字列にはバックスラッシュも改行も含まれないことが前提である。
次に、CSSで特別扱いされている文字からその特別な意味を取り除く効果がある。
16進数値以外のあらゆる文字からは、バックスラッシュでエスケープすることによって特別な意味を取り除くことができる。
たとえば「"\""」は単独の二重引用符から成る文字列である。
スタイルシートのいわば前処理機構である字句及び構文解析ルーチンは、これらのバックスラッシュを取り除いて意味を変更してしてまってはならない。
最後に、文書作成者が容易に打ち出せない文字を参照することもできる。
この場合、バックスラッシュの後ろには、[ISO10646]の文字コードを表す16進数が続く。
16進数の次に紛らわしい数字や文字が続く場合、コードの終端を明確にする必要がある。
それには2通りの方法がある:
スペース(あるいは他の空白類文字)で示す:「\26 B」(&B)
6桁に満たない16進数でも上位桁を補う:「\000026B」(&B)
実際にはこれら2つの方法を組み合わせて使うとよい。
16進数の後では空白類文字が1つだけ無視されるので、数値エスケープ文字の後に本当のスペースを挿入するには、スペース自体をエスケープするか、スペースをふたつ続けなければならないことに注意せよ。
バックスラッシュによるエスケープ文字は、常に識別子か文字列の一部だと考えてよい。
(つまり、「{」は特別な役割を持つ区切り文字だが、「\7B」は違う。
同様に、「\32」はクラス名の先頭文字に使えるが「2」は使えない)
4.1.4 文(Statements)
あらゆるバージョンのCSSスタイルシートは文(statements)列を成す(前出の文法を参照)。
文には2つの種類がある:@規則と規則集合である。
文の前後には自由に空白類文字を挿入してよい。
本仕様において、「immediately before」「immediately after」などの表現は、間に空白類文字やコメントが入らないことを意味する。
【訳注:訳文では直前・直後と書くように心掛けているつもり】
4.1.5 @規則(At-rules)
@規則の先頭には@キーワード(at-keyword)が来る。
@キーワードは「@」の直後に識別子が続いたものである(@import、@pageなど)。
@規則は、次に出現するセミコロン(;)までか、次に出現するブロック終端子までの全体から成る。
認識不能な@規則に遭遇した場合、UAはその@規則全体を無視して、次を解析し続けなければならない。
CSS2のUAは、ブロックの内部に出現する'@import'、任意の規則集合より前に出現する'@import'を無視しなければならない。
CSS2の構文と基本データ型
