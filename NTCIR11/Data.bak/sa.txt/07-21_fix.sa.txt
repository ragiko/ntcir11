すみませんお待たせしました
石川高専のと申します
自動シーン分割を利用した
ビデオ教材作成支援システムということでこれについて簡単にご説明させていただきます
最近ネットワーク上で利用できるビデオ教材がいろいろ増えてきます
ビデオ教材を利用しますとご存知のように要点や考え方が手軽にわかるということで
予習復習自学自習これらに有効であろう
しかし
ビデオ教材の種類や数はまだまだ少ない
ビデオ教材実際に作るためには結構手間と時間がかかってしまうというのが問題です
でたとえば
教室等で講義を録画しますと

一般には
こうような流れになろうかと思いますまず出欠確認等があって
導入それから話題一演習一話題二演習二まとめ
この中で必要なシーンの抽出もしくは
不要なシーンの削除を行えば
最低限のコンテンツができる
しかしながらこの話題といいますがシーンの境界位置を決めるというのはなかなか大変な作業というか時間がかかっ
そこで
われわれは録画したビデオ素材を話題ごとに自動分割することによって
ビデオ教材作成の手間を少し軽減してあげようとそういうシステムを構築するということを目的として始めました

本システムの概要なんですがまずビデオ素材から
音声情報を取り出しましてこの音声情報をもとに
音声認識しまして
テキスト情報にします
このテキスト情報かなり苦しいテキスト情報ですが
これを用いましてシーン
分割位置の推定を行いまして
シーンに分けます
でこのシーンの中で不要なものだけを削除するだけで基本的には
まー最低限のビデオ教材ができるだろう
でまず音声の収録環境なんですけれどもこのような今やっているような形で
説話型のマイクを使って
それをワイヤレストランスミッターで
ポーダブル
アンプに送って
それをＤＶカメラで
収録する

かなり安上がりな構成
でこのような構成でちょっと
数年前に
予備実験を行ったところ
評価
対象はＩＴＡの
評価部百文なんですけど
これを実際こう私の方で読み上げまして
やってみましたら
正解率が九十五％ぐらいあるのでデータベースとほぼ同等の
数字が出ていましたのでこの収録環境で大丈夫でだろう
で次にその実際の授業
を
取ったものをやってみましたところ音声認識してみましたところ
やはりかなり苦しくて
五十％ぐらい
しか出ない
単語正解率で
五十％ぐらいしか出ない
で言語モデルの方を
新聞記事から
講演の方に切り替えたら
六．五四パーセントぐらいちょっと上がった
それでもまだまだ苦しい
そこで試しにということで
実際の行った講演の書き起こしテキストを
実際に読み上げまし
読み上げて
それを収録して再度認識してみます
そうすると七十％ちょっとぐらいになる
これは何のためにやったかというとどの辺がんばれば可能性があるのかなということで少し目途をつけたかっただけでしてこれから何が言えるというわけではないですがちょっと乱暴ですけど
この差を見ますと十四．五ぐらいあるので
少なくとも音響
モデルをがんばればこのぐらい行けるかもしれない
残りは言語モデル
かもしれない
というぐらいの気持ち
でこういう苦しいテキスト情報をもとに
シーン分割位置推定を行うわけですけれども
その方法にはいろいろ
ご提案されていますがまず
基本的な方針としてこうシーンがいくつかありまして
こう隣接しているシーン間が

こう似ていれば
一つのシーン
で似ていなければ
ここにシーン境界があるだろう
というような

一般的な方法です
で
その各シーン
を表すような指標というのを
求める必要があるんですけれどもこの方法もいろいろご提案されていまして
ＴＦＩＤＦを用いる方法それからＴＦＩＤＦを考慮した総合情報量であるとかさまざまなχ二乗を用いる方法とかいろいろございますが
ここでは独立成文分析を用いた指標を用います
でどのようなものかとごく簡単にご説明しますと
独立成文分析を
用いる指標としてまず用意するのが
各文あたりの語の頻度分布こういう
語の頻度行列語と文の関係をも
まず求めます
で
ＩＣＡ
独立成文分析を用いて
この
語と文の関係を話題と文
話題と語の関係に分離することができる
でこの話題と文の関係を指標インデックスに使う
これによりましてこの話題数は自由に設定できるので次元を
簡単にコントロールできて


サイズが小さくなるんで計算量とかにも有利
うまくグルーピングできれば精度ももしかしたら上がるかもしれないというちょっと気持ちがあります
で
まず隣接するシーン間が似ているかどうかを調べるんですがそのためには一般的に用いられるコサイン余弦を用いる
でこの余弦が

小さいほど似ていないということでシーン境界だろう
でこの隣接するシーンシーン境界をダアーとずらしましてすべての余弦の
総和を求めて
この総和が最小になるようなこのシーンの
位置
これを
求めればいい
これは動的計画法で求めることができるので
そのような形で実装致します
でシステムの
構成ですけれども
大きく三つに分かれている
で
一つはシステム本体
それからもうひとつはポーズプラグイン
それから
音声認識を用いたプラグイン
で
ポーズプラグインは
ポーズ情報だけを使ってとにかく講義が終わって
すぐ編集したいという場合時間がないという場合には有効
で音声認識を用いたプラグインは
大まかにご説明させていただいた方法で
まず

スピーチＡＰＩ対応の音声認識
ソフトがあればどれでも結構なのでそれを使って音声認識します
で音声認識しましたら
その音声認識情報を音声認識したテキスト情報を茶筌を用いて形態素解析をしまして
で名詞と動詞
と自立語を抽出しましてその語の頻度分布を求めて
その語の頻度分布から
話題と文の関係をＩＣＡで求めて
それを

動的計画法で
シーン境界を求めるというような流れ
をこの辺でやっている
でこのシステムおよびソースコードはこちらのＵＲＬの方で公開しておりますので
あまり
中身は恥ずかしんで

ご覧いただければ幸い
でシステム実行例なんですけれども
実行しまして

音声ファッ
ビデオファイルを指定しますと
自動的に
音声認識をしてそれからこういうような画面になります
で左側が
自動的にシーン分割されたシーン
でスタート位置と継続時間ぐらいが表示されてる
あんまり見てくれよくなんですけど
このシーンを適当にこう選ぶとその箇所がこちらの方で再生自動再生される
でこれいらなければいらないところでデリートボタンを押して
基本的には消していただくだけで編集終わり
ということ
ですからきわめて初心者でも非常に簡単に使えると思います
でどうしても途中で切りたいという場合に限ってちょっとカットボタンをちょっと使って面倒な操作が必要です
ですから消す分には非常で手軽
でこのシステムと言いますか自動
分割利用の効果を確認するために評価実験を行います
被験者は十六名で
編集対象は講義の約三十分分を収録した
ビデオ
素材五種類
五人の先生の授業を用います
で開始の状態としましては
自動分割を行った状態と行わない分割なしの状態
評価の順序もありなし
なしありでそれぞれ半分
こういう形で
実験を行います
でビデオ編集時の指示としましてこれから授業を録画したビデオを編集してもらいます
復習するために利用するビデオを作ってください
というような指示で

でいらないと思った部分は削除してくださいこの程度の情報ぐらいしか与えずに好きにやってもらいます
被験者は

学生さんです
でその実
施した後にアンケート調査を行いまして主観評価の結果なんですが
自動分割ありがとても
使いやすかったという人が六名
やや使いやすかった六名
どちらも違いはないゼロ
やや
使いにくい
とても使いにくい二名という感じで約七十五％の人たちが使いやすいと答えている
で残りの四名については
結構操作にあまり慣れていない学生さん
のようです
ですからある程度
操作に
慣れている人たちはほぼかなりの確率で
分割ありの方が編集しやすいというふうに答えています
で編集にかかった時間なんですけど
自動分割なしの場合は平均して二千三十三秒
それに対して分割ありという場合は
千七百四十六秒ということで
三十分の授業なので千八百秒
ですから千八百秒よりも多少
平均で
低い
編集時間で終わっていると
じゃこんなに早く終わってまともに編集できたのということでちょっと不安になりますので
ちょっと調査してみます
でこちらがちょっと分かりにくいですがリコール
再現率
こちらが

適合率
でこのブルーの
こちらがＦ値ですがブルーのものが自動分割直後のもの
要するに自動で行った結果ですね
編集直前の状態
まず再現率なんですが
三十％ちょっと
っすね
それで

次に
自動分割ありで

編集を行った後の結果ですが
四十％ぐらいにあがってわずかしか上がらないのにちょっと驚きました
で
この
黄色のものが自動分割なしで編集した直後のものなんですが四十まで行かずちょうど中間ぐらいになった
まあこれから見ると

自動分割ありにした方がかえっていいぐらいというか同程度以上にはなっている
かな
でちょっと驚いたのは先ほども申しましたように
リコールの方で
あまり
大きくならない
要するに人が判断しても機械が判断してもちょっとは下がるんだけども
この差がゼロになれば
さっきのデリートボタンを押すだけで勝手に全部終わるということになる
でこの差異の部分だけカットボタンを押してちょっと手間がかかるということなるですから目標としてはこの差がゼロになるというのが目標になる
一方で適合率の方はかなり改善します要するにデリートボタンを押していらないのを消していくということですね
この操作あまり
この差異があっても
操作としてはそれほどロードではありません
負荷は少ない
ということで精度もまあまあ
でちょっとその
ちょっとの
この辺のちょっとの
改善を
する一つの方法といいますが
方法例としましてまだまだいろいろ方法があると思いますが
ちょっと
試した
例として二千一年にさんらがご提案されているテキストベースのトピックを分割する手法として
統計的手法によるシーン分割というのがご提案されているんでそれをちょっとこちらの授業音声といいますが
に適応してみます
でこのＳって書いてあるのが
シーンもしくはセグメントの並び
Ｗって書いてあるのが
単語の並び
でこの単語の並びが与えられたときに
このセグメントもしくはシーンの
並び
を最大化するようなシーン境界といいますが
を求める問題という形で形式化されて
これを
実際に
解かれた
で
結果としてはなんか
こんなような
ラプラス法みたいな形で近似されているようですけど
これを実際使いまして
実験の結果としまして
ちょっと分かりにくいんですが
横軸は
シーンの分割数です

シーンの分割数を上げれば上げるほど当然ですが
再現率は上がっている
こちらがシーンの分割
率というのは
全体の文数分のどのぐらいたとえば零．一ですと全体の文数が
五百文だったら
その十分の一の五十分割がしているという感じになります
で縦軸のこちらが
再現率こちらが適合率
で再現率の方が
重要といいますが先ほど申し上げったように
こちらの適合率の方は消すだけで済む
けど
こちらがある程度
あってほしい
ということで
こちらの実線の赤色の方が

隣接するシーン間
を比べた方法です
でこの点線の
青い
ものが統計的手法による
ものです
でこのちょっと差異
わずかですけど
統計的手法による
方法の方がちょっと改善されているようなんで
こういうの等をいろいろ工夫して使っていけば

いいんじゃないかな
いうふうに
思っております
で以上まとめますと
ビデオ教材
作成を支援するために
ビデオ編集システムを開発し公開させていただく
で機能としては自動シーン分割機能
のみを持っておりまして
で必要なシーンを選択するだけで教材作成が可能で
でこれだけにこだわったのは
その他の機能については世の中にビデオを編集するソフトウェアが山のようにありますので
こちらにお任せすればいいだろう
ですからそのシーンを分割するところだけ限ってそこをすばやくしてあとは
いろいろ自分の好きなソフトウェアを使って編集してもらえばいいんではないかという
それから約
評価実験の結果約
七割七十五％の被験者が
自動シーン分割を利用する方が使いやすいと答えていて
編集時間も約一割以上削減できます
でこちらの方で
公開しております
と時間があるようなら
デモを









機能として少し
去年少しやったと思いますが復習
として
まず考え方としてちょっとこういう概念を
持ってください

システム起動しまして
システムを起動しましてそれから

音声認識を
行わせて自動的にシーン分割を行うとこちらのような感じで自動的にリストと言いますがシーン別に開始時刻等が表示されて
でそのシーンを選べばそこが
再生されて行きます
やってみましょうか
でこの中でいらないなと思うところを
削除するだけで基本的には
編集が終わると
いいなという感じです
で
でその制御機能ですね今この制御機能として少し
去年少しやったと思うんですが復習
として
たとえばここでやっぱり切りたいなと思ったら
ちょっと位置合わせ面倒なんですけど
ここでカットってやるとカットできる
持っていた
まず考え方としてちょっとこういうが
基本的にはこのような形で
シーンを選んで削除ボタンを押すだけで編集が終わるといいなということで

こういうものを作っておりましてもうちょっと精度よくやれば
本当にデリートボタン
だけで
済むのではないか
ただし注意点としてはちょっと先ほどもございましたが

この結果です
ここにもありますように
この辺
の
差を埋めれば何とか
もうちょっとさらに使いやすくなるのかな
でこの辺の
人間でもかなりリコールが低いということから

それによる
ばらつきというか
かなり大きいかなあというふうに感じております
以上
