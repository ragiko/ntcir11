それでは発表をはじめます
まず今回の報告全体の流れなんですけども
まず最初に背景と目的を述べまして
で次に我々が提案しておりますベクトル量子化を用いた
音声中の検索語検出の手法について説明しまして
今回の報告で提案する
照合スコアの正規化について説明します
でその評価実験について述べまして
次にＮＴＣＩＲ−１０ＳｐｏｋｅｎＤｏｃ−２で新しく設定された
ＩＳＴＤを我々が提案している
ベクトル量子化を用いた手法で試してみましたので
それを紹介して最後にまとめたいと思います
でまず研究の背景ですが
近年ハードディスクなどの
記憶装置の大容量化や低価格化が進んでいること
また情報通信技術の発展に伴って
ＹＯＵＴＵＢＥなどの動画投稿サイトをはじめ
様々な所にマルチメディアコンテンツが蓄積されるようになってきており
これらに対する検索機能のニーズは高まっています
動画やＰＯＤＣＡＳＴなど多くのマルチメディアコンテンツは音声データを含んでおりますので
音声データを対象とした検索技術は重要です
その一つとしましてユーザーが入力したキーワードが話されている区間を
自動的に検出するＳＴＤの研究が活発に行われています
ＳＴＤにおける解決すべき課題について説明します
最も簡単なＳＴＤの手法としまして
音声ドキュメントを大語彙連続音声認識を用いて
得られた認識結果に対してテキスト検索を行う手法が考えられるんですけども
こちらが
完
結型果物の日本という音声ドキュメントに対して
柑橘というキーワードで検出を行った例を示しているんですが
ここでは柑橘が
音声認識システムの辞書に収録されていない未知語であったため
認識結果に
柑橘は現れず
検出を行うことができていません
このような未知語が音声ドキュメントを特徴付けることも多いため
未知語に対応することは重要であると言えます
また柑橘が完結と言ったように誤認識が起こった場合も同様に検出することができません
音声認識では認識誤りが避けられないのでＳＴＤにおいてもこれが課題となっています
未知語に対しては
サブワード単位での認識結果が広く用いられています

サブワード列で表現されたキーワード
と類似した系列を探すことで
ある程度は認識誤りが起こっても検出を行うことができるんですが
その分
誤検出も増えてしまいます
また一般に単語単位の認識に比べて
サブワード単位の認識は精度が落ちるとされており十分な精度を得ることができていません
これらの課題を解決しつつ高精度な検索を実現することを目的としています
そこで我々は
音響的な特徴を残した音声ドキュメントの表現形式としまして
話者ごとにえ音響情報のベクトル量子化を行った
ＶＱコード列を用いる手法を提案しています
この手法では音声を三十四種類の
音素
音素の場合で三十四種類の記号で表現するのに比べまして
ＶＱコード列ですと
千二十四種類といったような細かい表現が可能になっております
これによって例えばあとおの間のような曖昧な音声なども表現することが可能になりますので精度が向上するということを考えています
この手法では話者情報が既知であるということを前提としていまして
話者ごとにベクトル量子化を行うことで
話者による音声の特徴量の違いを考慮しています
このベクトル量子化を用いたＳＴＤの流れについて説明します
まず前処理としまして
音声ドキュメントから音響情報を抽出しまして
話者ごとにベクトル量子化を行い
ＶＱコード列で表現しておきます
その一方で大語彙連続音声認識を行いまして
得られた結果を音素列に展開しておきます
実際に検出を行う際にはＶＱコードと音素間の関連度がないと照合を行うことができませんので
この
関連度我々はＶＰスコアと呼んでいるんですけども
このＶＰスコアを先ほどの音素列とＶＱコード列から予め学習お行っておきます
で実際に検
索語検索を行う際には
サブワード列とんで表現されたキーワードと
ＶＱコード列で表現された音声ドキュメントを
先ほどのＶＰスコアを局所スコアとした連続ＤＰマッチングを行いまして検出を行います
このまま検出することもできるんですが
さらに精度を高めるために
いったん可能性のある候補を全て検出しましてそれらに対して再評価を行って最終的な検出結果を得ています
ベクトル量子化では時間構造を考慮したベクトル量子化を行いたいためセグメント量子化を導入しています
前後二フレームを含めた計五フレームこの場合ですと
ＭＦＣＣ十二次元のパラメーターを用いているので
合計六十次元の
ベクトルを一つのセグメントとしまして
セグメント単位でベクトル量子化を行っています
ＶＱコードと音素間の関連度である
ＶＰスコアは
音声認識結果の音素列と
ベクトル量子化かして得られたＶＱコード列の
各フレームにおける対の出現頻度に基づいて定義しています
出現頻度はこちらの例ですと音声認識結果がりんごで
ＶＱコード列がこのような
ＶＱコード列であったとしますと
白抜きの三角の場合で
Ｒで二回
Ｅでは〇回
Ｎでは〇回Ｇでは一回Ｏで二回という容量で数えましてこちらの式でスコアを学習しています
この学習は話者ごとに行いまして実際にはもっとたくさんの学習データが
得られるという前提で学習しています
今回はこの音声認識結果にＮＴＣＩＲから提供されている音節１ＢＥＳＴの認識結果を用いています
このＶＰスコアだけを用いて検出を行うこともできるんですが実際に予備的な実験を行ってみると
時間構造が
不自然な
検出結果が多数現れましたので
検出候補の再評価を行っています
再評価では連続ＤＰマッチングの平均スコアと
時間構造の
自然さの指標である音素時間長歪みを定義して用いています
この音素時間長歪は例えばこの上の例のような
照合フレーム数を持つ検出候補は時間構造が自然なんですけども
こちらの下のように少数のサブワードが
ほとんどのフレームを占めてしまっているような
不自然な時間構造を持つ検出候補の値が
大きくなるように
こちらの式で定義しています
この音素時間長歪みと
連続ＤＰマッチングの平均スコアを統合した
統合スコアを用いて再評価を行っています
平均スコアと音素時間長歪みをそれぞれ
平均と分散を用いて
正規化し
統合したスコアＰＩを用いまして
閾値処理を行って
検出を行うか否かの判定を行っています
このベクトル量子化を用いた
ＳＴＤの手法では
フレームごとに独立したＶＱコードと
音素の照合を行っており
ＨＭＭのような
時間構造に対する制約を設けておりませんので
やはり時間構造が不自然な誤検出が
発生する可能性があります
そこで
今回は照合フレーム数の長い音素の影響を強く受けてしまうことを防ぐために
キーワードの音素ごとに照合スコアを正規化する手法を提案します
こちらが連続ＤＰマッチングを行った際の例なんですけども
Ｉ番目のフレームにおける累積
スコア
を
んＩ番目のフレームにおける平均スコアであるエスバーアイは
こちらのような式で定義しておりまして
Ｉ番目の
フレームにおける照合開始フレームをスタートアイとしますと
この例ではスタートアイからＩまでが十フレームで
累積
スコアが五．八七ですので
この照合フレーム数で割ることで
〇．五八七という要領で
平均スコアを計算していました
このように
した場合正規化を行わないと

えと発声されている音声ドキュメントに対して
絶対音感というキーワードで検出を行った
例で見ると
絶対音感の
えという音素は実際に音声ドキュメントで発声されている音素ですので
スコアが高くなって
照合フレーム数も長くなるということが考えられます
その他の音素については実際には発声されおりませんので
スコアは低くまた照合されるフレーム数も短くなることが考えられますここで先ほどのように
照合フレーム数で平均をとりますと全体として
このえの音素の部分の影響を強く受けて高いスコアが平均スコアが高くなってしまいますので
実際には絶対音感とは発声されていないんですが
誤検出が起こってしまうということが考えられます
そこで正規化を行った平均スコアの場合を
この様な式で定義しました
この場合ですとまず
各音素ごとにいったんスコアを平均します
ここではえの部分の音素はやはり高くなってしまうんですけども
その他の音素については
平均のスコアは低くなりまして
その後
サブワード
の長さで
平均を取ります
スコアの低いサブワードのほうが多いので
平均スコアは小さな値になって先ほどの様な誤検出を抑制できると考えられます
この照合スコアの正規化を用いた
手法の性能を評価するために評価実験を行いました
検索対象の音声ドキュメントは
日本語話し言葉コーパスの
コア百七十七講演で
キーワードは
音声ドキュメント処理ワーキンググループによって策定さている
未知語五十語を用いて検出を行いました
ベクトル量子化を行う際の音響情報は
十二次元のＭＦＣＣのパラメーターで
前後二フレームを含めた計五フレームの六十次元のベクトルを用いています
ＶＱコードの種類の数であるコードブックサイズは千二十四種類
コアの学習に用いる音声認識結果は
ＮＴＣＩＲ９ＳｐｏｋｅｎＤｏｃから提供されています音節１ＢＥＳＴを用いています
評価尺度には再現率適合率Ｆ値ＭＡＰを用いています

正規化を行った場合と行わなかった場合に加え従来から広く行われておりますサブワード列照合とも比較を行います
このサブワード列照合はスコアの学習に用いたものと同じ
音節１ＢＥＳＴの認識結果に対して
編集距離を局所距離とした連続ＤＰマッチングを行う手法です
結果がこちらの様になっていまして
上が再現率と適合率の曲線で
下がＦ値ＭＡＰの表になっています
サブワード列照合の場合と

正規化を行わなかった場合を比べますと
あまり大きな性能の差はないんですが
正規化を行うことで
Ｆ値で
六．六％
ＭＡＰで六．八％性能が向上しまして
サブワード列照合よりも高い性能が得ることができています
照合スコアの正規化の手法が有効であったと言えると思います
またＮＴＣＩＲ１０ＳｐｏｋｅｎＤｏｃ２で
新たに設定されたタスクであるＩＳＴＤを

我々が
用いているベクトル量子化を用いた手法で試してみました
ＳＴＤを行った際の
スコアの最大値が低いものほど
キーワードが存在しない可能性が高いと考えまして
これをＩＳＴＤのスコアとして用いました
この実際にＩＳＴＤを行った場合がこちらのようになっておりまして
検索対象の音声ドキュメントは先ほどと同じ
日本語版し言葉コーパスのコア百七十七講演で
全講演用の既知語セット百語をキーワードとして検出を行った結果となっています
このグラフ中の赤い印がＦ値が最大となった箇所を示しており
最大となったＦ値は七十三．三％でした

これである程度ＩＳＴＤが行えているということが分かります
まとめますと
音声ドキュメントの表現形式として
音響情報をベクトル量子化して得られるＶＱコード列を用いる手法に対して
検討を行いました
照合スコアの正規化を行う手法を提案し
Ｆ値で
六．六％
ＭＡＰで六．八％性能が向上することを確認しました

今後の課題としまして処理時間を高速化するということがあげられます
またＩＳＴＤの閾値を今回は手動で決定しましたがこの閾値の決定方法について検討を行いたいと考えています
またＶＱコードと音素間のスコアについて
まだ検討する余地があると考えておりますのでここの検討を行いたいと考えています発表は以上です
