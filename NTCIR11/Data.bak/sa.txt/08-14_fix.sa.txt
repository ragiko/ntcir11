じゃあ始めます
東京工科大学のと申します
感性表現による音検索のための音響特徴量の分析というタイトルで発表します
あ 大丈夫ですね
サウンドアドバイザーというですね効果音検索システムをやってるんですけど
これ去年の二月のＳＬＰで最初に発表しまして
色々調べてみるとですね曲を追加したり変更するとこれ結構大変だということがわかりました
それで今回はですね音響特徴量を使って感性ベクトルを生成する
にはどうすればいいかというような方法について発表します
今行われている一般的な検索はですねテキストベースのものがほとんどですね先ほど先生が非常に重要なことをおっしゃいまして
世の中の音声データたくさんあるわけですけども音声認識性能の性能が音声認識性能があがってきたんで
それをテキストに書くことができてでだからテキストによって
音声データが検索できるようになったという話があったわけですけども
そういうふうにですねデータですね音データというのは音声の場合には音声認識を使って認識すればいい訳ですけども
世の中見回してみるとですね音データでたくさんあるのは多分だと思うんですけどね
じゃあ音楽はですねどうすりゃあいいんだということになるわけですね世の中にたくさん音楽がある訳ですけどもどうやってそれを検索するかと
で今までの検索っていうとですねテキストでやろうと思うとどうしてもですねアーティストの名前とかですね曲のタイトル
ジャンルとかですねそれに付随するお話とかですねそういうので検索しなきゃなんない
いう訳ですけどもこういうようなタイトルとかですねていうのは必ずしも中の音楽を反映してるわけではない
先ほど効果音検索システムっていうのやってるっていう話しをしましたけども
なんでそういうのやってるかというとですね例えば放送のですねバックグラウンドミュージックを探すあるいは映画のですね
にちょうど適したようなようなですね音楽を探す
これ膨大な音楽ファイルの中からですね探すの結構大変な話なんですよね
望みの音効果音をですね的確に探してくれるようなシステムがあったらこれは便利だろうと
いうんでやってるわけなんですけど
そうするとですねこういうようなタイトルとかですねそういう
情報だけじゃなくってその感性的なもの印象とか気分
それからどういう状況の音楽なのかというようなですねそういうようなその内容に直接関係するような
事柄で検索ができることが望ましい
と思われるわけです
感性を使った検索っていうのはですね今までにもいろいろ提案されてましてここにあるようなものいろいろ
あります


一番下にあるのがですね去年の二月に話しました内容なんですけどもその上にあるのがですねやはりベクトル空間法を使ったような検索方法ですね

サウンドアドバイザーのこれコントロールの画面なんですけどもこれはＭＡＴＬＡＢというソフトで作ってありまして

ここのとこですね
この
ここのところがポップアップメニューになってまして項目としてはこの左側にある八項目楽しさ悲しさ落ち
着き
怒り恐怖不気味明るさ爽やかさ
ポップアップメニューの中にですね五段階の評価値を入れられるようになってまして今どちらともいえないとちょうど中間のものが表示されてますけどもこれをですね非常に遠いとか
あるいは非常に近い
いうふうにセットしてこれをセットした上でこの検索ボタンを押すんですね
そうすると選ばれた曲がここに表示される
ついでに音声合成機もついていて読み上げてくれるんですけど
去年の二月のＳＬＰでやったのはですね相対的な検索
をやる必要があるっていうんでここにもっと＋とかもっと−ってボタンがついてます
というのはですねこれ
音楽検索

やってるとですね必ずしもこのシステムが持ってる
この座標軸とですね個人の感性がちょっと違ってたりしまして
選ばれた曲よりももっと楽しい曲とかいうふうにですね今選ばれてきた候補を基準にして検索をするっていうのがこれ結構有効なんで
そういう検索ができるようなアルゴリズムをですね去年の2月のＳＬＰ研究会に提案して
そのために用意したこのボタンが付いています

それでですね
中身はどうやってるかとですねベクトル空間法の類似度でベクトルの類似度で検索しています
今ここにですね感性項目を一二三というのがありましてこれ先ほどの八項目に対応してまして

この感性項目の一がたとえば楽しさで感性項目の二が悲しさで感性項目の三が怒りとかですね
こういうのに対応しているわけです
検索要求は先ほどのポップアップメニューで与えますから一つのベクトルとして与えられるわけですね
これに最も近い角度のですねこの角度を測りましてこれの角度が最も近い
この曲の二が検索結果として選ばれる
第二候補第三候補もやっぱり角度の小さい順に選ばていくと
いうようなこういう方法を取ってるわけです
そうするとですね
この曲の一とかですね曲の二これ全てですね感性ベクトル空間中でどういう値を持ってるかっていうのあらかじめ
調査しておかないといけないわけですね

使ってる曲はこんな感じの曲ですこれは効果音ＣＤより八十八曲選んで

たとえばこの楽しいなんていうのはですね

こういうのははっきりしててよくわかるんですけど
これ神々の怒りというタイトルなんですけどね

これなんでよくわかんないと思うんですけどこういうふうにですねタイトルを見たんじゃなかなかこう検索にでてこないやつってのはいっぱいあるわけなんですね
でこういうのを検索したいわけです

最初に感性ベクトルをテーブルを作った時にどうしたかっていうと八十八曲全曲についてアンケート調査をしました
十四人の被験者にですね聞いてですね
たとえば曲の一この一二三四五というのは五が非常に
近い
これは一が非常に遠いと
楽しさからは非常に近いとか非常に遠いと
いうような回答の結果をそのままここにですね累積したもの書き込んであります
これはそのままですね回答の頻度分布を表わしていることになって一種の確率分布なんですね

このようにですねたとえば曲の一は恐怖からは程遠いというのが十二人が一に集中しているわけですけどこういうようなものはですね
非常に誰が聞いても恐怖からは程遠いと
いうような感じになるわけです
だけど結果がですねこういうふうに五四四というような感じでですねばらける場合もある
こういうものは人によって感じ方が違うある人は悲しいと感じるしある人は悲しくないと感じる
こういうのもわけですねですからこういうような確率分布を覚えておくというのは非常に重要なことなん
わけです

八項目のですね楽しいとか悲しいとか
ていうののですねそれぞれ
五次元ずつ用意しまして全部で四十次元のベクトル
ちょっと変わった感じしると思うんですけどたとえば
非常に楽しい非常に悲しい非常に楽しい中くらい楽しい
あんまり楽しくないと
こういう四十次元のベクトルで作っていました
ところがですね今八十八曲あるわけですけどももっとたくさん追加したいんですね
そうするとこれまたアンケート調査しなきゃなんないんでこれは大変だと
いうんでですね
じゃあどうするかっていうとそれぞれの曲の感性ベクトルがですねなんとか音響特徴から自動的に作れないかなと
思ってるわけです


感性用語の形にしとくと検索がしやすくなるというふうに直感的に考えていただいてもいいんですが
音声
ドキュメントの場合にですね音声認識機というのが性能があがってきてテキストに落とせると
だからテキストで検索ができるということになるわけですけども
じゃあ音楽の場合には

音声認識機にあたるものがないわけですね
何らかの形でその音楽に対してテキストを発生させる
いうのが必要になってくるんじゃないかなと思ってるわけです
私も情報処理学会のですねこの音声ドキュメント処理ワーキンググループのメンバーの一人なんですが
そういうのはですね側面からちょっと
そういう音の検索っていうものをですね
ちょっと考えてみたいなと思ってこういう研究をやってるわけです
それで実際このサウンドアドバイザーていうＭＡＴＬＡＢのプログラムはですねエクセルで書かれた感性ベクトルのテーブルを読み込んでこれに基づいて検索を行います
この感性ベクトルテーブルをですね音響特徴いくつか用意しまして
それから導こうというわけなんですが容易に想像つくのがですね
この音響特徴の重み付けの和でこの感性項目
これを導いてくるということです
これには重回帰分析という手段が使えますのでこれで
これ横軸音響特徴の重み付け和ですがこれから感性項目一たとえば楽しさがどのくらいのレベルであるかというのを出してこようというわけです
つまりですねやろうとおもっているのは今までこの楽曲があってアンケート調査を
して感性ベクトルテーブルを出していた
いうかわりに音響特
徴を出してそれから変換行列を用意してこれで感性ベクトルのテーブルを作ってあげましょうと
いうわけですね

この変換行列をどうするかというとですね今八十八曲のアンケート調査結果がありますから
これを使ってしてあげましょうと
学習してあげましょうということになるわけです
でですね本当はこの四十次元のベクトルですね直接
音響特徴から導けると
いいわけなんですというのは先ほども説明しましたように
人によるばらつき
を反映した確率分布を表してますからできればこれをそのまま音響特徴から出したいんですけども
ちょっと
今回はさぼったというか簡単化しまして
各楽しさとかですね悲しさそれぞれ一つの値で表現することにしました
つまりですねこの確率分布の平均値ですね
この場合ですとこの四六四というこの回答の結果の平均これを計算してみますと
ここに来ます
のでこの楽しさが１．０という値を持つ
いうような形で感性ベクトルを四十次元から八次元に圧縮して使うことにしました

これ具体例ですね曲一曲二曲八十八まであって
楽しいが−０．７８とかこんな値になって出てくるわけです
変換行列はこんな形になりまして感性ベクトル一次元から八次元までですね
ありましてでこれに音響特徴のベクトルこれをこれ数値データなわけなんですけどもこれを入れてあげますと
この

マトリックス掛けるベクトル＋バイアスですね
これで感性ベクトルの値が出てくるこの係数変換係数は重回帰分析によって求める
というわけです
具体的な変換方法は八十八曲について複数の音響特徴量を求めておきます
八項目の感性項目それぞれについて全データの音響データを使って
重回帰分析を行って
変換マトリックスですね
変換行列を作成する
いうわけです
まず予備検討でですね
そもそもこの方法で何かできるのかどうかていうのを検討してみました
用意した音響特徴なんですけどもごく
当たり前のパラメーターなんですけどもピッチの平均パワーの平均それからピッチ分散パワー分散
それから
楽器の入れ替わり頻度とかですねどのくらいめまぐるしく曲が進んでいくかというのを表すためにですね
動的尺度これ最近あんまりなじみ無いかもしれないですけどもデルタケプストラムのですね二乗和ですね
よくセグメンテーションをしたりするのに昔使ってたものですけどこれを使います
ピッチの平均はですね落ち着いてるとか華やかさを反映してるんじゃないかと思われますしパワーの平均は静かであるか元気であるか
ピッチの変動の大きさですねピッチとかパワーの変動の大きさは単調な曲か激しい曲か
いうようなことを反映できるんじゃないかなと思って入れてみました

えいやとやっただけあってですね八曲のうち
二つだけしか上手く説明できませんでした
楽しいと悲しいについてはですねこれ横軸が音響特徴の重み付け和で縦軸が感性ベクトルの値ですね楽しいの値です
ここの破線で書いてあるのがこれが信頼性曲線といいまして
この要するに重回帰分析のこの傾きですねこいつがどのくらい信頼できるかという範囲を表してます
これがこの水平線をクロスしてますとこれは一応どういうふうにばらつきがあったとしても
この重み付け和が＋にいけば感性ベクトルの値も＋に動くという
ことを表してましてこれは信頼できるということになるわけです
楽しいと悲しいについては一応信頼できる結果が得られ
ました


具体的な値を見てみるとですね
大体楽しいと悲しいはかなり典型的なの特長なんでですね
このパワーの平均の係数
はこれは同じですが
大体ですねパワーの分散これ符号反転してると思うんですけどピッチ平均とかですね
こういうので大体符号が反転しててかなり違う特徴であるということがわかります
できたその音響特徴から結局は
楽しさがいくつ悲しさがいくつというのはそういう感性ベクトルのテーブルを作るわけですけども
これもですね全曲聴いてもらってまた評価実験するってのもちょっと大変なのでですね
出てきたこの感性ベクトルがですね感性ベクトルのテーブルが元のテーブルにどのくらい近いかというのでですね評価しました
元のテーブルというのはアンケート調査に基づいて作ったテーブルです
感性ベクトルをですね音響特徴から導いたテーブルですねそれとの間のユークリット距離つまり各要素がどのくらい違うかってのの差を取って二乗してですね足し合わせて平均すると
というような尺度を使って
テーブル間の距離を測りました
標準偏差はですね０．２９ぐらいになりましてこれ
まあまあかなと思いましたというのはですねこのベクトルは−２から＋２までの値でふれるわけですね

全く値が逆転してしまっているとこれは標準偏差が
それに比べればちっちゃいなと思って
まあまあかなと思いましたがまだまだですね説明上手く説明できるのが楽しいと悲しいだけなんでもうちょっとですねいろいろ
追加しました
追加したのはですね動的尺度を求めるときのですねケプストラムの次数を変えたりですね窓幅を変えたりいろいろやってみました
ケプストラム次数のですね低いところはスペクトルの概形に関係したもんですからたとえば楽器が変わったとかですねそういうものを反映していると思いますが
高い次数のケプストラムはピッチ変動とかですね
そういうものをいろいろ反映してるんじゃないかと思って色んな種類のですね動的ケプストラムをですね作って
それを付け加えてみました


それによりましてですね一応八項目のうち五項目楽しい悲しい恐怖明るさ爽やかさ
の五項目についてはある程度音響特徴量の線形結合で上手く説明ができるということがわかってきました
これは楽しいですねさっきよりも分布が綺麗です
もうちょっと相関が
出てきました悲しいもそうですね
そのほかにも恐怖とか明るさ爽やかさいずれの場合にもまあまあ相関がある感じの分布になっていて重回帰直線の信頼範囲が
かなり狭まってきましたのでこれは使えるかなと思ってます
結果のですね標準偏差見てみるとさっきえいやと放り込んだパラメーターの場合と比べてですね
だいぶ標準偏差ちっちゃくなりまして
０．０７９８１ということでかなり元の
アンケート調査に基づく感性ベクトルに近くなってきたんじゃないかな
と思います
以上ですね音響特徴量から感性ベクトル
これを生成する方法について説明しました主な方法としては重回帰分析による導出ですね

音響特徴としてはピッチとパワーと動的尺度を使いまして八項目の感性項目のうち楽しい悲しい恐怖明るさ爽やかさについてはある程度説明ができることがわかりました


動的尺度のですねバリエーションをいろいろ工夫しましてそれで感性
ベクトルのですねテーブルが改善したことがわかったんですが
今後の課題としてはですね未知曲での評価今これ結局クローズの評価をやってるのと同じようなもんなんですね
それでオープンのデータについてどのくらい上手くいくかというのをやっ
てみたいと思っています
また楽曲の特徴を表すのにですねもっとどんどん音響特徴量を入れてってですね
もっと今の音声ドキュメント処理でやってるのを音声認識のレベルに上げるにはですねもっと猛烈にいろんな
特徴を出してこないと
最終的にはですねショパン風の
出てきたらおもしろいんじゃないかなと思ってます
以上です
