それでは静岡大学の小暮が
この題目で発表を行ないます
背景と目的ですけども
近年ｅ−ｌｅａｒｎｉｎｇのシステムとか例文Ｓ授業コンテンツ作成ツールとかいろいろすでに
いろいろなものが公開されてる状況となっております

現在今収録に使っている
ＥＺプレゼンテイター
がありますけども
これは講演が終了すると
後でこの講演をもう一回見れると
いうアプリケーション
でこのようなアプリケーション
がありまして例えば講義でいえば学生が後で復習が出来る
わけなんですけども

途中から見たい
という状況の時にスライド単位でしかアクセスができないと
いうふうになっていまして
そういう状況に対しまして

知りたい内容
自体に直接アクセスするという要求があります
ではそういうことをするためにはどうすれば良いのかということなんですけども二種類やる必要がありまして

収録したコンテンツに対して必要な情報をインデキシングするという
ものと
今度は作成したインデキシング済みのコンテンツを検索する環境というのが必要になります
で本研究ではまず一番最初にやるべきこの部分
ですね
でこの研究
にまず対象を絞りまして
でこういう研究を進める特にインデキシングをするためには
音声認識をしてそれに必要な情報を付与していくという
ことが必要なので
そういうコーパスが必要ですよねという
のが背景となる
でそういうコーパスが今あまり無いというか一般的には公開されているものが無いので
収録しましょうというのが
本研究の
一つ目の目的
でこの収録に関しては大部分に関しては

昨年度の音響学会で報告をしております
で研究の二つ目の目的なんですけども実際に収録した
音声を
特にですね
今回いろいろなマイクで収録をしていますけども
そのうちのピンマイクで収録した講義の音声を認識したところだいたい
五十とか
から六十ぐらいの
単語正解精度が出てるんですけどももうちょっと上げたいと
音声
の音声コンテンツの検索だともうちょっと認識率が欲しいので
認識率を上げましょうと
でこれを本研究の目的その二としていますのでこの発表では
コンテンツの収集と講義音声の認識の精度向上という二つの目的を上げておる
で二音語講義音声コンテンツコーパスというのを
今作成している
状況です
で第一弾に関しては音響学会ですでに発表をしています
目的は先ほど述べたとおりです
対象は二千五年から二千七年に
こちら三大学で収録したもの
話者等はこれぐらいになっておりましてすでにモニター版を公開しております
でここに
ありますようにヘッドセットあるいはハンドマイク
あとピンマイクですねで収録に関してはＩＣレコーダーダクトレコーダー等を用いております
また今ＰＣで録音していますのでＰＣで録音したＷＭＮ音声というのも
一部の講義では用いております
で公開するコンテンツの内訳としては実際に収録した音声ファイルとあと書き起こしですね
で書き起こしに関しては
ちょっと詳細はここでは省略しますけども
ＣＳＪに基づいた
タグを
付けております
ただ全部ではなくて
ＣＳＪの一部
とあと
こちらで定義した六

定義した新しいものも付けています
あとこちら三つに関しては
講義をした方の了解が取れた場合にはパワーポイントのファイルとスライドの切り替え
もうこちらはＥＧプレゼンテイターというアプリケーションが収録が終わると
スライドをＪ−ＰＥＧになっていましてそのＪ−ＰＥＧのそれぞれがどの時間に切り替わったかという時間情報がとれますのでこちらが二乗で取れる
あと予約情報も付けましょうというのが
ここで公開しようとしているコンテンツコーパスの内訳となる
内訳は
というか比較をしてみたんですけども
もう見てもらえばわかるんですけどもとりあえず量的にはかなりシーズンエリアが小さくなっていますが
タグがですね
ちょっとまだ検討中ではあるんですけども変わりますあと
スライドデータとか切り替えの時間が付きます
いうところ
あともう一つは長さですね一
単位の長さが講義と講演でやはり講義の方が長いという
特徴がある
で収録したうちの一部
実際に音声認識をしてみました
というのでその結果ですね
条件はＣＳＪの学会講演音声の男性のみ
九百七十講演から学習したトライフォンの三十二項目を三千十二状態の音響モデルを使いまして
音響分析条件はこのようになっている
デコーダーはちょっと認識実験が
時間時期がちょっとずれていましたので当初の時には三．五と三で
新しい方が四．０を使って認識を行なっています
で言語モデルに関しては
ＣＳＪの言語モデルとあと毎日
新聞のコーパスとウェブのコーパスの三種類から七つを
で作成した言語モデルは
こんな感じですで
ＣＳＪの
九百七十というのは
学会講演のみ
で学習したもので
三千三百という方は学会講演と模擬講演
とかあと対話
ＣＳＪに含まれている全データから
ＣＳＪで定義しておいたテストデータを除いた全定義
あとこちらは毎日新聞の十四年間のデータ
でこちらは

こちらの参考文献で上げています百ギガのウェブデータから学習した言語モデル
で対象講義は収録したもののうち十一講義を対象と
しております
あと一部ですね
ちょっとまだ全講義は使っていない講義の前半部分
一部を使っているものもありますけども十一講義が対象となっている
で話者は五名ですね
で収録したもののフィラー率がこんな感じになっております
結構デコボコ
になっております
で収録した対象のこの十一講義三と五がちょっと欠番になっておりますけども十一講義の平均だとだいたい七．二％
となっ
てですねちょっとＣＳＪ
こちらはテストデータのうち四つを選んで
比較対象としたんですけどもこちらと比較すると違うんですけども
ＣＳＪ全体でみるとだいたい六．八％ということで
ＣＳＪと
講義のフィラー率はあまり差はないかなあと思っておる
でここでですね今ちょうどいろいろなマイクを
つけていますけども
四つのマイクで講義を収録してみました
でこちらでマイクの性能と実際の音声認識の性能を
実際に認識の数値として
調べましょうと
いうのをやってみました

で収録十一講義のうち十二と十三というのが新しく収録したものなんですけども
こちらに関して単語正解精度
単語正解率がそれぞれこのようになりました
でまず
マイクの比較ですね
標準的なピンマイクと
ある程度高性能のものと
ハンドマイクと
ヘッドセットマイクですね
今今ちょうど付けているヘッドセットですけども
でこちらがだいたいそのままですね
出ています
で
特にこの辺の差はマイク自体の性能の差だと思うんですけども
ハンドマイクとヘッドセットで
結構出ているのは
マイクの性能以外に
マイクと口の距離ですね
ヘッドセットだと
一定の距離である程度安定して良い音質がとれるんですけども
ハンドマイクで収録するとどうしてもそれをなんかこういうふうに指差し
してマイクの位置が変わってしまうと
いう状態で音声がちょっと安定してとれてない
のも若干影響が出てるんじゃないかと思います
でここまでがマイクの比較ですね
でこちらは言語モデルの比較になるんですけどもこちらは
音響学会で発表した内容とほとんど
一緒です
で傾向としましては

講義の種類によって若干傾向が違いまして
Ｌ
十二十三こちらに関しては原稿の方には書いてありますけどもＣＳＪ

の内容と
結構似ているような
もう言語モデルとかあるいは
音声対話とかそういうような関連した構図
でこちらの真ん中のっていうのが

プログラミングとか実験のような
ＣＳＪとあまり関係のない方
になっていましてパープレキシティでみるとこんな感じになっています
似てるものだとＣＳＪウェーブニュースの順に性能が良く
て
似てないものだとウェーブとＣＳＪがだいたい同じぐらい
なっておる
で未知語率をみるとこんな感じになっていますけども
先ほどだいたい傾向は似ていて
似ているものは未知語率が低くて
似てないのが若干増えてしまう
ことですね
こちらちょっと調べてみたというやつなんですけども未知語中
のフィラーがどの程度あるのか
ていうのをみるとだいたいこのような感じになっております
でこちらはですね
こちらとはちょっと傾向が
変わっておりまして状況としては多分なんですが
例えばＬ四とＬ十三
あるいはＬ八からＬ十一ですね
話者
によっ
て
同じような傾向が出てるのかなあという気がしております
で実際認識をした結果です
ちょっと見にくいんですけども

だいたいのところＣＳＪ
こちらの
見にくいんですが
左三つ
がＣＳＪ
でウェーブっというのが右の四本のうちの左二本ですね

ちゃう右二本です
これとかこれですね
でこうみると正解精度でみるとウェブとＣＳＪがだいたい同じぐらいの性能
で
ＣＳＪの左三つのとこでみると
九百七十よりも三十三本全部使った方が良いでしょう
で全部使った場合も多いは多い方が良いでしょうというのが単語正解精度で
ウェブの状況となる
単語正解率でみると少し
若干傾向が変わりまして
ＣＳＪ
この

並びですねニュースは全体的に悪いっていうのは当然
これ予想できる結果でして

で単語正解率って先ほどと変わっ
た傾向というのは

この辺の
ＣＳＪと似ているようなところだと見てもらうとわかるんですけども
一番左が良い結果となっています
これは学会講演のみで
言語モデルを作った方が
ＣＳＪとよく似た
講義だという
一方ですねこの辺の
ものだと左を見ると九百七十よりも三千三百のほうが
性能が
ちょっとここ逆転してますけども
そういう傾向が見られると
いうこと
ですね
つまり似てない講義ＣＳＪとあまり関係の無い講義は
ＣＳＪの全
コーパスで学習した方が良さそうだ
いう傾向が見られる
でここまではＣＳＪ
じゃないＣＳＪと比較してＣ
ＪＮＣと呼んでますけども
そちらの
性能
だいたい見てみると
ですね
で
で先ほどちょっと言いましたけどもこちらのあたりで
もう少し性能が良くないとこれで認識した音声コンテンツを実際検索に使うというのはちょっと
まだ精度が低いということですね
せめて六十七十ぐらいは欲しいので
まだ到達できていないのが結構ある
というところで認識率を上げないといけませんよねというところなんですけども

昨年度のこちらのワークショップの方で発表したんですけども
認識対象の講義に関連する講義の書き起こしを言語モデルで使うと
認識率が向上するっていうのは
示したんですけども

そういう書き起こしを準備するっていうこと自体は結構コストが高いので
もうちょっと簡単にできないのかと
いうので最近ですとスライド情報を使う
と認識率が改善できますよねと
いうのが一個出てきておりますけども

全体の講義でみるとですねまだパワーポイントを使っていない講義というのも結構あります
でそういう講義だとこの手法が使えませんということで
シラバスをちょっと使いましょうというのが
ここで提案したい方法となる
シラバスだと大学に関して講義をするのであればシラバスは
ほぼ安定して取れるんじゃないかと
いうことですね

でシラバス情報をどうやって
使おうかという話になるんですけども
ウェーブ
を検索して
検索された中で
似たやつを
絞り込む
あるいは
絞り込む前に検索のキーワードをうまく
シラバスから抽出するという方法が
あるんですがいろいろと
手法がありまして原稿の方には書いてありますけども
あるんですけども
いろいろと
めんどくさいことをやらないといけないんですねということで今回は簡単にやりたい
ということで
シラバスから
単語を取り出してその単語を
辞典で検索してしまおうという手法を考えました
でこちらはですねいろいろ手法はあるんですけども今回は日本語版のＷＩＫＩＰＥＤＩＡを使いました
でネットワークの負荷等考えて実際にＷＩＫＩＰＥＤＩＡのダンプをダウンロードしてローカルで
エスケルサーバに登録すると
いうことを行なう
でどのように登録したかですけども
まずですね

ちょっとここが人手なんですけども
シラバスに書かれている講義を
キーワードで取り出しまして

まずキーワードの拡張を行なうと
でその後
拡張された探索からこういうような
感じでキーワードを拡張したあとに
この単語を直接ウィキペディアで
完全一致で
文章を取り出す
で取り出した文章に
入っているリンク情報から新しいキーワードを
作ってもう一度検索をすると
いう感じで文を種類集めております
でＣワンＣＴＷＯと二つできましたのでこれで二つ作ったのと
もう一つですね
こっからここへの拡張とこっから
ここに抽出したものっていうのは実際講義と関係ないものも結構含まれてしまうので
それを手作業で削除したっていうのがＭＯＤが付いているものになります
たいてい集めた文章はこのぐらいになります

で
単体で言語モデルをみてパープレキシティを
調べたところこんな感じの傾向がみられて

未知語が
一回目よりも二回目の方が
削除されているので
ＣＳＪとこれらを
併用すると良いんじゃないかと
思って併用してみましたというのがこれぐらいになります
でちょっと
こっから全部そうなんですけども

Ｃっていうのが
ＣＳＪの
のみですねでＷ一番右がＷＩＫＩＰＥＤＩＡで修正したフォーカスのみ
でこの間に含まれているのは
そのまま足したもの
とあとは
ＣとＷの
文の比が
百対五とか百対十になるようにそれぞれ
文を
加算したものになります
でＣ五十のウィッキー二のここがちょっと
ここ以降全部ちょっとイレギュラーなデータになっていますがそれ以外はスムーズになるかと
でこちらでみると
補正パープ率に関して十一．六％削減ができているので認識率が改善できる可能性があると
講義単体だと
こういうぐらいがありました
で実際認識をしてみたところ
ＣＳＪ単体でやるよりもやはり
認識性能が良いと
いう結果が得られています
先ほど言いましたがちょっとここはイレギュラーで
ちょっと言語モデル何回か作り直したんですがちょっと
こう出てしまっていて
可能性としては

語彙の選択のあたりで
ＣＳＪと
ＷＩＫＩＰＥＤＩＡの混合する時の語彙の関係で認識に必要な語彙がたまたま選ばれている
という状況の可能性があります
で単語正解精度に関してもこのように
向上は得られます
で
こちらのというのはこちらはキーワードの拡張を完全に自動でやった場合でこちらは
逐次キーワード
を見て
不要なものを手作業で削除した場合ですね
でこれとこれの比較を見てみるとやはり手作業でキーワードを削除する不要を削除するとやった方が性能が
良いという結果が得られました
でですねこちらは全単語で見たんですけども
名詞
のみ
に注目すると
だいたいこんな感じになっておりまして

平均でだいたいこのぐらい向上して
講義単体でみると
最大で六．四パーセント
性能を向上させることができました
でまとめに移ります

この研究は二種類の
が含まれてますねまずは収集した
コーパスの分析を行ないます
でマイクの性能
と音声認識性の高いそう考えると
当たり前の話ですけども実際に
数値を示します
あとですねピンマイク
で収録した音声はやはりまだ認識
率が低いと
いうのを実際に示します
で講義音声の認識を
性能を向上させるために
シラバス
から人手で
キーワードを抽出します今回は

二十一個のキーワードを
抽出してＷＩＫＩＰＥＤＩＡを検索して
コーパスを
作ったところ認識率が向上しました
今後の課題ですけどもまずコーパス
ですねこちらは正式版公開に向けて

準備を行なっています
モニター版はすでにこちらのＵＲＬにて公開中です
で現在注目しているところ講義がですね現在アルゴリズムとデータ構造というプログラム系の講義のみでしか
やっていませんので他の講義でも一応これができるかどうか
改善されるかどうかを検証したい
いうところとまだ
改善はしましたけどまだ音声認識率が低いので
さらなる
向上を図りたい
いうところで
終わりたいと思いますありがとうございます
