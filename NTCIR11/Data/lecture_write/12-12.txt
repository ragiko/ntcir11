それではＳＴＤに基づく未知語に頑健な音声ドキュメント検索法と題しまして豊橋技術科学大学のが発表いたします
まず背景ですが近年の情報通信網の発展により利用可能なマルチメディアコンテンツというものが爆発的に増加しております
しかしこれらのコンテンツにはファイル名やタイトル以外に付与されているメタデータというものが多くなく
したがって従来のテキストベースの検索技術だけを用いて目的のコンテンツを検索するということが困難となっており
マルチメディアコンテンツに対応した検索手法が必要とされております
そのなかで音声ドキュメントと呼ばれます人の発話を含むようなコンテンツに関しましては
大語彙連続音声認識技術を用いることで
その言語情報を利用した検索が可能となっています
しかし認識結果を用いていることにより音声認識誤りや未知語といった問題がありますので
誤認識に対し頑健な音声ドキュメント検索手法の開発が必要とされています
音声ドキュメントに対する検索は大きく二種類に分かれております
ひとつは先ほどのセッションでも説明ありました音声検索語検出ＳＴＤです
こちらはユーザによって与えられた検索語が音声ドキュメント中のどこに出現するかという位置を検出するタスクです
もう一方は音声ドキュメント検索ＳＤＲといいまして
こちらはユーザによって与えられた質問文に関連する文書を音声ドキュメント集合中から見つけてくるという内容検索のタスクとなっております
音声検索語検出は位置の特定というタスクの性質上
未知語や認識誤りに対する様々な対応手法が提案されております
例えば
認識結果を複数利用する手法や
複数の認識システムによった
結果を利用する方法さらに誤りを許した一致判定法などがあります
しかし
音声ドキュメント検索に対しましては
音声認識結果に対してそのままテキストベースの検索を適用するという手法が一般的です
間接的な対応
として索引を併用する方法や翻訳モデルによって補完する方法
またウェブを利用して文書を拡張するなどといった方法はありますが
直接的に未知語や誤認識に対策を行った例というのは多くありません
ここで
一般的なＳＤＲ手法について簡単に説明します
こちらがシステム図なんですけれども
事前処理として音声データに対し大語彙連続音声認識を用いて
テキストへと変換します
このテキストから
単語の頻度情報といった索引付けを行います
ユーザによって質問文が与えられますと
形態素解析やストップワード除去などを行ってそれを単語集合へと変換し
索引等を参照して各文書と質問文との間の関連度を計算して回答として出力します
関連度の計算にはベクトル空間法が広く用いられており重み付けにはＴＦＩＤＦ法などが提案されております
この従来法には認識誤りされてしまった語や未知語が単語索引に現れないという問題があります
一般に固有名詞といいますのは検索のときの有効な手がかりとなる単語なんですけれどもこちらは未知語となりやすいため
検索語として利用できず検索性能が低下してしまいます
また
ドキュメントよりもより小さな単位パッセージという単位での検索が難しいという問題もあります
パッセージには
もともと
手がかりとなる単語数が少ないため
認識誤りや未知語といった影響を大きく受けてしまうためです
従来の検索システムですと高い認識率の下では頑健な検索が可能であるということはもう既に知られているんですけれども
実際にシステムを利用する場面において必ずしも高認識率を期待するというのは難しいということがあります
そこで
やはりＳＤ
Ｒにおいても未知語や認識誤りに直接対策を行う必要があると考えられますそこでＳＤＲにＳＴＤの手法を組み込むことでその性能を向上させることができないかということで今回研究を行っております
こちらが
その提案法のシステム図となります
事前処理では音声データに対し音声認識を行った結果をテキストとして使います
そして
ＳＴＤ手法の必要に応じてサブワードでの索引付けを行います
ユーザによって質問文が与えられますと質問解析を行いそれを単語集合へと変換します
この各単語について
それぞれＳＴＤを行います
ＳＴＤのステップでは
単語をサブワード系列へと変換し認識結果を参照して
それぞれの語の検出結果を求めます
これをもとに質問文とそれぞれのドキュメントとの間の関連度を計算して最終的に出力を行います
このＳＴＤを行うことによって未知語や認識誤りの語を文書検索の際に手がかりとして利用できるというメリットがあります
このため固有名詞が未知語であったとしても検索時に利用できること
さらにパッセージ内でも利用できる単語数が増えるというメリットがあります
また大語彙連続音声認識よりも高速な音節認識の結果を利用することから
索引付け時に高速な処理が可能となり大量のデータを処理できるといったメリットもあります
ここで本研究におけるこのＳＴＤＳＤＲの実装について説明していきます
音声認識には連続音節認識を用いました
またＳＴＤステップで必要に応じて音節バイグラムでの索引付けも行っております
質問解析では形態素解析とストップワード除去を行い質問文を単語集合へと変換します
このとき単語は長さが二音節以上のものを用いています
サブワード系列への変換では単語を音節列へと変換しています
次いでＳＴＤには今回三種類のＳＴＤ手法を実装しました
後ほど説明いたしますが
連続ＤＰマッチングを行った手法
索引付けと連続ＤＰマッチングの併用手法
また索引のみを用いたＳＴＤ手法です
ＳＴＤにおいて湧き出し誤りの影響を押さえるために音節長が二の単語については完全一致のみを検出と今回しております
文書のランク付けにはＳＴＤの検出結果から
それぞれの語の出現頻度を求め
ＴＦＩＤＦ重み付けを用いて文書と質問文との間の関連度を計算しています
それでは
今回実装しましたＳＴＤ手法について説明していきます
まず連続ＤＰマッチングです
こちらはＳＴＤにおいて最も基本的な手法でして
距離行列の計算には以下の式を用いています
音節間の距離には今回バタチャリア距離を用いました
しかし連続ＤＰマッチングには検出に時間がかかるという問題があります
ＳＤＲにおいては一クエリあたりに複数の検索語が含まれています
したがって
その全ての単語について連続ＤＰマッチングを行う必要があるんですが
そのため
検索語数に比例してＳＤＲ自体の検索時間が増大してしまうといった問題があります
また
さらに
検索語が増加するようなクエリ拡張などといった
ＳＤＲの性能改善が難しいという問題もありますそこでＳＴＤの高速化が必要となってきます
高速化を行うために
まず索引を用いて見込みのない発話をそもそもスキップしてしまおうという索引付けと連続ＤＰマッチングの併用手法を実装しました
まず事前処理として音節バイグラムの索引を作成します
ここで始めに音声ドキュメントの構成について簡単に説明します
音声ドキュメントはそれぞれに文書ＩＤというものが
付与されています
そして
ドキュメント内は
ポーズをポーズによって発話と呼ばれる単位に区切られており
それぞれの発話には発話ＩＤが付与されています
この各発話について
この音節列から
一音節ずつずらす音節バイグラムを作成します
この音節バイグラムと文書ＩＤと発話ＩＤのペアをエントリに持つような索引を作成していきます
検索語が与えられますとこちら
検索語に対しても同様に一音節ずつずらすようなバイグラムを作成します
そして
このバイグラムを
索引を参照して
この検索語のバイグラム集合のうち一定の割合が出現するような発話は
検出の候補としてその発話に対してのみ連続ＤＰマッチングを行っていきます
またさらに高速にするために
そもそも連続ＤＰマッチングを行わないという索引のみのＳＴＤ手法も実装しました
まず事前処理として
先ほどの手法と同様に音節バイグラムを作成します
また
あいだ一音節をスキップする
スキップ音節バイグラムも作成します
これら二つのバイグラムを
まとめて一つの索引として
音節バイグラム索引を作成します
ユーザによって検索語が与えられますと検索語に対しても
一音節ずつスキップするバイグラムと
あいだ一すみませんあいだ一一音節をスキップするバイグラムと二種類を作成しまして
これらをまとめて
索引を参照し
この集合の
内一定の割合が出現するような発話に関しては
検索語が出現したと見なしてそこを
その発話を検出としています
ここでスキップバイグラムを用いることによって
挿入誤りや脱落誤りによって
挿入誤りや脱落誤りがありますと検索語を検出することが難しいということがあるんですけれども
スキップバイグラムを用いることによって
その誤りに対処した検出が可能となるというところでスキップバイグラムを用いております
で
システムの性能を評価するためのＳＤＲ性能評価実験を行いました
こちらはテストセットとしてＣＳＪのＳＤＲ評価用テストコレクション
対象が二千七百二講演で
質問文は
講演の内容を問うような三十九の質問文
検索の単位は講演単位としています
システムの性能を評価するためのクエリはこの三十九の全てのクエリであるＡＬＬクエリと
検索語が既知語のみであるＩＶクエリ
検索語に未知語を含むようなＯＯＶクエリという三種類について性能を比較しました
用いた音声認識結果はＮＴＣＩＲ９で配布されたものでして
音響モデルがＣＳＪの音声データで学習された音素トライフォン
言語モデルは
ＣＳＪからオープン条件で学習されたもので
大語彙連続音声認識では音節正解率が八十四．八六パーセント
連続音節認識で音節正解率が七十八．一六パーセントです
性能の評価の指標にはＭＡＰという検索システムの性能を示すような指標を用いました
こちらは
正解文書が検出された時点での適合率の平均値を表しています
実験システムには大きく従来法と提案法さらに
従来法と提案法を混合した手法という三種類を実装しました
従来法では
音声認識には大語彙連続音声認識を
質問解析では形態素解析とストップワード除去を行いました
索引には
認識結果をそのまま利用した単語索引と音節バイグラム索引の二種類の索引を
二種類のシステムを作っています
音節バイグラム索引では単語認識結果を音節列へと変換しそこから
バイグラムの出現頻度索引を作成しています
関連度の計算にはベクトル空間法を用い重み付けにはＴＦＩＤＦ法を使用しています
続いて提案法です
音声認識には連続音節認識を用いました
質問解析は従来法と同様に形態素解析とストップワード除去を行っています
ＳＴＤシステムには先ほど説明しました三種類のＳＴＤシステムを実装しました
関連度の計算は従来法と同様にＴＦＩＤＦ重み付けに基づくベクトル空間法を使用しています
続いて混合システムについてです
まず事前処理として大語彙連続音声認識と連続音節認識二種類の認識によって
二種類の索引を作成しています
質問解析は形態素解析とストップワード除去を行い
関連度の計算はＴＦＩＤＦ重み付けに基づくベクトル空間法です
このとき単語が既知語であるときには単語索引を参照
し未知語のときにはＳＴＤの結果を利用しています
実際に例を示しますと
クエリがマガーク効果についてというクエリだったとき
形態素解析によってマガークと効果という二種類の単語が出てきます
これに
この二種類の単語について文書ベクトルを作成していくんですけれども
マガークは未知語
効果は既知語となっております
したがって未知語であるマガークに対してはＳＴＤを実行し
その検出を頻度として
文書ベクトルを作ります
既知語である効果については単語索引を参照し
その結果を
用いています
以上のシステムをまとめますと
全てのシステムにおいてランク付けと重み付けには同等の手法を用いています
異なっている点は音声認識に大語彙連続音声認識を用いているか音節認識を用いているかというところと
索引付けのところで
単語を使っていること音節バイグラムを使っているといったところで違いがあります
では実験結果です
まず従来法の書き起こしに対する性能を見ますと
赤いライン既知語のクエリに比べ緑色のラインＯＯＶクエリの方が性能が高いことがわかります
つまり未知語は検索時の有効な手がかりであるということを
このグラフは示唆していると考えられます
そしてこちらは認識結果に対するそれぞれのシステムの性能です
まず
ａｌｌクエリ全てのクエリに対する性能を見ますと
中央の三つのライン提案法は
一番左の従来法に比べ従来法の性能には達しませんでした
こちらは
音節を用いることによって漢字情報などが欠落してしまうことが原因の一つであると考えられます
しかしながら
緑色のラインですね
未知語のクエリに関しましては
単語索引では未知語クエリの性能が著しく低下してしまっているのに対し
提案法はいずれも
高い性能を示しました
つまり
提案法は未知語に対し頑健であるということが言えると思います
また
従来法と
提案手法を混ぜた混合システムでは
従来法で検索できなかった未知語クエリに関して
性能の改善が見られました
続いてこちらは一クエリあたりの平均検索時間です
連続ＤＰマッチングを用いた手法では
非常に時間がかかってしまっているんですけれども
索引を用いることで
それぞれ
速度の向上が
図る速度の向上を図ることが出来ました
しかし
まだ従来手法にはちょっと
達していないんですけれどもこちらは
現在実装にちょっと改善の余地があるためで理論上は
索引のみを用いている手法は従来法と同程度の性能が今後見込めると思っています
続いて
システムのＳＴＤの性能とＳＤＲの性能との間の関係について調査の実験を行いました
テストセットは先ほど行ったＳＤＲ評価用のテストコレクションに含まれている検索語百六十六語について行っています
今回検索の単位は発話単位です
認識結果は先ほどの実験と同じ物を用いております
まずグラフについてですが横軸がＳＴＤの性能F値を示しており縦軸はＳＤＲの性能マップを表しております
こちらが連続ＤＰマッチングに関するグラフでして
ご覧のようにＳＴＤと性能とＳＤＲの性能には強い相関があるということがわかりますさらに索引のみを用いた手法やすみません索引との併用手法や索引のみを用いた手法と同様に
同様の傾向が見られましたまた
従来法に関しましても従来法のＳＴＤ性能と
ＳＤＲ性能に
関係がありこれは同じライン上にありますので
今後ＳＴＤの性能をあげていくことでＳＤＲ自体の性能もあげていくことができると思われます
これは
書き起こしに対するものも同等の傾向が見られました
さらにこちら提案手法の三種類のみを見てみますと
索引のみをもちいた簡易なＳＴＤでもここではあまりＳＴＤの性能に差がないように見られましたので
実際にどうなのかということで各手法についてＳＴＤ性能の詳細な調査を行いましたテストセットはＣＳＪのＳＴＤ評価用テストコレクション
コア講演百七十七講演に対
し検索クエリは未知語の五十語です
音声認識結果は先ほどと同じものを用いているんですけれども
コア講演のみにですと音節認識で音節正解率が八十八．八八十一．八パーセントとなっております
こちらが実験結果です
青いラインが連続ＤＰマッチングの
赤いラインが索引との併用手法緑色のラインが
索引のみですけれども
ＳＴＤの性能を見ますとやはり
簡易システムである索引付けのみですと
かなりの性能が低下してしまいました
ＳＤＲにおいてあまり性能が変わらなかったというのは今回ＳＤＲの検索語が特異であったということが理由であると考えられます
まとめです
未知語誤認識に対して頑健なＳＤＲ手法の提案としまして
音声検索語検出のシステムを取り入れた
手法を提案しました
提案法は未知語の影響を受けなかったため
未知語の影響を受けずに頑健な検索が可能であるということがわかりました
また索引を用いることによって検索の高速化を達成しました
ＳＴＤ性能とＳＤＲ性能には強い相関があるということが今回わかりましたので
ＳＴＤシステムの性能改善により
ＳＤＲの性能を更に改善することが可能であるということがわかりました
今後の課題についてです
今後は提案法の有用性についてさらに調査を行っていく予定です
提案法は未知語や誤認識の多い文書に対して頑健であるという
予想があるんですけれども
現在対象としている文書の認識率が高い
なっていますので
今後認識率の低い文書や未知語率の高い文書に対して性能を調査していく予定です
また
今回索引を用いることで検索高速化が達成できましたので
クエリ拡張など検索性能の更なる改善に取り組んで行く予定です
以上発表を終わりますありがとうございました
