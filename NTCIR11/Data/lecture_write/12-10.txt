それでは複数音声認識システムを併用した
音節Ｎグラム索引による
検索性能の改善と題しまして
豊橋技術科学大学のが発表させていただきます
まず全体の流れはこのようになっています
まず研究目的と背景ですが
音声を含んだマルチメディアコンテンツの増加に伴い
これらを効率的に検索する手段というのが望まれています
しかしながら
こういった音声を人手で書き起こすということには非常にコストがかかります
そこで音声認識システムを用いて自動的に書き起こす必要があります
しかしながら自動で書き起こした結果には認識誤りが含まれていまして
さらに大語彙連続音声認識で認識したものには
辞書に登録されていない単語未知語
が書き起こされないという問題があります
そしてさらにその従来手法である連続ＤＰでは長時間の音声ファイルに対して処理時間に問題があると
いうのが現時点の問題点としてあります
これらを踏まえて目的として認識誤りや未知語を含んだ長時間の音声ファイルに対して高速な検索手法の提案と評価
というのを上げています
そして
今回の発表では特に挿入脱落この距離の厳密化と複数認識システムの併用
これらを用いた性能の改善に着目しています
まず概要ですが
音声データから単語を検索したりといった時には
一般的にはこの音声データを自動音声認識
でテキストに書き起こすと
いう処理を
含めます
その際に大語彙連続音声認識で認識してしまうと
辞書に含まれていない単語が認識結果に出力されないという問題があります
そこでさまざまな研究で行なわれているのは単語単位ではなくそれより小さいサブワードの単位で認識をしてテキストに書き起こすといった方法が取られています
本研究では音節認識を用いてテキストに書き起こしします
このように
音節で認識することで未知語でも認識することができます
しかしながら認識誤りの問題がありまして置換誤りや
脱落誤り
挿入誤りといったものがあります
そして検索の従来法としましてはまず一般的なのが連続ＤＰによるワードスポッティングがあげられます
この他にも索引を用いたＳＵＦＦＩＸＡＲＲＡＹや単語集合を用いたＢＡＧＯＦＷＯＲＤＳといったものが挙げられています
本研究ではサブワードの距離付きＮグラムという
方法を提案しています
そして今までに提案した
提案した手法について説明します
我々のシステムの概要がこちらの図になっていまして
まずユーザーから検索語がテキストで与えられます
そしてこの検索語が未知語か既知語かの判定を大語彙連続音声認識の辞書を使って判定します
もしこれが未知語であった場合
音節認識結果からあらかじめ作成した距離付きＮグラム索引
こちらから音節単位で検索を行ないます
そしてもし既知語であった場合はそれに加えて大語彙連続音声認識結果
を用いた単語単位での検索
こちらを併用します
そしてＮグラム索引の構築の方法をここで説明します本研究ではこのＮグラムのｎを
三としまして音節のトライグラム
を索引として採用しています
Ｎグラム索引は出現値とそのトライグラム
のペアで構成されていまして
各ポジションで
トライグラムを作っていきます
そして作ったこれらを
辞書順にソートしておくことで高速に検索することが可能となります
そしてこの索引からの検索方法ですが
この検索語が例えば
フーリエという検索語が与えられた際に
これをまず複数のトライグラムに分割します
そして
この場合ですとフーリというトライグラムとウリエという二つのトライグラムに分割してこれをそれぞれ索引から検索をします
そしてそのそれぞれの検索結果
から出現値の連接を確認しまして連接が確認できたものを最終的には検出というふうにしています
そして認識誤りに対しまして対策をおこなっていまして
我々は置換挿入脱落それぞれに対して対策をおこなっています
まず置換誤り対策では認識結果の複数候補上位ｍベストを用いて
トライグラムを作成して索引を構築することで対処しています
また
挿入誤り対策
では音節を一つ飛ばした三つ組み
トライグラムを作成して索引に登録すると
いう方法で対処してます
そして脱落誤りに関しましては検索の際に
検索語を脱落させて検索することで
対策を行なっています
そして
これらの認識誤り対策を行なうことで誤検出が増加してしまうという問題があるんですが
これに関してはその認識誤り対策をどの程度おこなったかという情報を
距離として索引に記録しておくことで対処しています
実際に例で説明しますとまず置換誤り対策はこの例ですと認識
候補認識結果のスリーベストまで
を使ってさまざまなパターンのトライグラムを構築していきます
でこのようにすることで
正しい音節がこのスリーベストに含まれていた場合にえー置換誤りに対処できるといった方法になっています
でこの時の距離というのは
このワンベストからの距離
ＢＨＡＴＴＡＣＨＡＲＹＹＡ距離を使って定義しています
そして次にそのダミーを含めた索引ということでその置換誤り対策のもう一つの手法としまして
先程説明した置換誤り対策ではその複数候補に含まれている場合は対処できる
正しい音節が含まれている場合は対処できるんですが
それでも検出できないというものが多く存在していまして
これを解決するためにどのような音節でもマッチするような音節アスタリスクをダミーとして索引に登録しておくという方法を提案しています
実際どのようなものかというとこういったアスタリスク
をトライグラムにつき一つのみ許して
索引を作っていき三つ組みを登録しておくという方法になっています
でこの時のダミーの距離というのは先程のＢＨＡＴＴＡＣＨＡＲＹＹＡ距離に比較と比べまして比較的高い固定値というのを採用しています
このようにすることで複数候補に含まれない置換誤りを対処することができます
で次に挿入誤りこちらに関しましては
挿入誤り対策では
いっ三つ組みを作る際に一音節飛ばした三つ組みを作っておくと
いうことで
この場合ですとウを飛ばした三つ組みやクを飛ばした三つ組み
これらを
索引に登録しておきます
でこの時の距離は従来手法今まで提案してきた手法ですと〇か一挿入の挿入を許したか許していないかの二値で表わしていましたが今回はこの距離を厳密化するということで後ほど詳しく説明いたします
そして脱落誤り
の対策に関しましては検索語から
検索語の音節を
脱落させて
検索すると
いうことを行なっていまして
検索語から音節を脱落させて複数回検索するということで対処しています
で
この時の距離も従来手法では
脱落させた音節の数
を距離として
採用していましたが今回はこれを厳密化しました
また挿入と脱落こちらの対策を組み合わせることで置換誤り対策にもなります
例えばこの例ですとフーリエ
フーリエという単語がフクーリエとウがクに置換されてしまった場合に
まず挿入誤り対策で
一つ飛ばしの三つ組みをフリエという三つ組みを作っておく
おきます
で検索の際に脱落誤り対策で検索語からウを脱落させた検索語フリエで検索することで
認識結果に
ウが含まれていない置換誤りがあった場合でも検出が可能となっています
そして本手法のＤＰとの類似点としましては
まず
その挿入と脱落のコストというのを任意に設定することができるという点が挙げられます
逆に相違点としましてはＤＰと異なってそのＤＰは検索語と認識結果の
音節列の距離を正確に計算することができるんですけど本手法はこれをすることができないと
いう
違いがあります
また
ＤＰはｎ音節に対してｎ個の挿入誤りと二分のＮ個
の脱落誤りを許していますが
本手法では三音節あたり
で一音節に
というふうに制限しています
で本手法のほうが制限が厳しいためリコールは減少してしまうんですがプレシジョンは向上すると
いうふうに考えられます
で今回提案する手法としまして距離の厳密化ということで
従来手法では先程説明したとおりに挿入脱落これらの距離は
挿入の有無と脱落の音節の数
をとして定義していました今回厳密化するにあたって
誤りと仮定する音節の前後のコンテキストとのＢＨＡＴＴＡＣＨＡＲＹＹＡ距離を採用しました
実際に例であげますとこれは挿入誤り対策の場合で
このクを挿入誤りと
仮定してスキップしたトライグラムを作る際の距離というのは
この
挿入誤りと仮定した左右の音節
この場合ですとフとウの距離を計算しまして小さいほうを採用すると
いう方法をとっています
なので距離は先程ゼロか一かの二値だったものをこのように変更しました
でまた
今回はその左挿入と仮定した音節の左コンテキストの母音部分も考慮して
距離
を定義しました
この場合ですとリという
音節左コンテキストがあるんですけどその際の
母音部分であるイ
これも距離に考慮
距離として考慮しました
そして複数認識システムの併用ということで
本研究では性能検索性能の改善のために二つのシステムを使って
索引を構築しましてそれぞれの検索結果を統合するといった方法をとっています
まずベースとなる認識システム一は本研究室で開発されたデコーダにＳＰＯＪＵＳ＋＋を
使って
音響モデルは音節モデルを使っています
そして今回新たに併用する認識システム二のほうはデコーダにＪｕｌｉｕｓを採用しまして音響モデルはトライフォンモデルとなっています
そして
その複数認識システム併用のの流れなんですがまず
ＳＰＯＪＵＳの
認識結果とＪｕｌｉｕｓの認識結果から
それぞれＮグラムの索引と単語の転置インデックス索引を
それぞれ作っておきます
で
あらかじめ二つ二つの索引を作っておき
検索語を与えられた際に
この索引からそれぞれ検索をおこないます
そしてこのＳＰＯＪＵＳの認識結果から作った検索結果とＪｕｌｉｕｓの検索結果
こちらのどちらかに
含まれていれば検出とすると
いうような方法で併用を行ないました
で
評価実験に入ります
で今回検索対象としましたのは日本語話し言葉コーパスＣＳＪのコアデータ約四十四時間を使っていて
検索語には音声ドキュメント処理ワークグループの
コアデータテストコレクションこちらのドライランを使いました
未知語既知語それぞれ五十種類となっています
そして
認識に用いた
条件としましてＳＰＯＪＵＳ＋＋のほうでは音響モデルは左コンテキスト依存の音節モデル学習にはコア講演を除いた二千二百二十五講演を使っています
言語モデルは音節の四グラムの言語モデルで学習は音響モデルと同様になっています
そしてＪｕｌｉｕｓのほうはこれはのワークショップで配布されました認識結果こちらを使っております
まずＳＰＯＪＵＳ＋＋の認識システムの音節認識結果はこのようになっていまして
五ベストまで考慮すると九十一％と非常に高いコレクトになっています
でＪｕｌｉｕｓのほうはこのような結果になっていましてＪｕｌｉｕｓのほうはセンテンスレベルのｎベストを使っているためカバー率が低いのでコレクトが八十三％となっています
そしてベースラインとして用いる連続ＤＰは音節単位
での連続ＤＰで
距離は
音節ＨＭＭに基づくＢＨＡＴＴＡＣＨＡＲＹＹＡ距離
を使っています
で認識結果の複数候補を用いるということで今回は認識結果の五ベスト
ＳＰＯＪＵＳの五ベストを使いました
距離の定義はこのような式になっていてパスは
示している通りになっています
実験内容はこのようになっています
まず従来手法とベースラインの
グラフをここに示しています横軸はリコールで縦軸はプレシジョンとなっていますこれを見ますと従来手法でも
ベースラインよりも性能がよいというような結果が得られています
でこの従来手法に対して距離の厳密化ということで
挿入誤りの距離を厳密化した際のグラフがこちらになっていますＦ値の最大値が従来法が〇．五六三なのに対して
提案手法で挿入誤りの距離を厳密化することによって約二％の改善が得られています
でそして脱落誤り一方脱落誤りのほうは
こちら青い線になるんですが
従来法よりも性能が下がってしまうというような結果になっていますこちらに関してはちょっとまだ原因が良く掴めていません
そして挿入の距離の厳密化をした際に母音の考慮をした場合としない場合のＦ値の最大値をこちらに示していまして
母音の考慮はしないよりは母音を考慮したほうが良いというような結果になっています
で挿入と脱落こちらの距離
を両方とも
厳密化した場合のグラフが紫の線になっていてＦ値で見ると
最も良いこの比較している中では最も良いというような結果になっています
で次に複数認識システムの併用ということで
ベースライン
は従来法がこちらになっていましてこれに対して
Ｊｕｌｉｕｓの五ベストの音節認識の五ベストの結果を併用したのが青い線になっています
これを見ますと従来法よりもＦ値で三％の改善が三％程の改善が得られていてグラフで見ても
大幅に改善しているということがわかると思います
しかしながら
Ｊｕｌｉｕｓのテンベストやコンフュージョンネットワークこれらを使いますと
候補数が増えてしまうためか湧き出し誤りが増加して精度がさがってしまうというような結果になっています
そして既知語のほう
こちらのほうは従来法のベースラインと従来法がこちらのようになっていてこれはそれぞれＳＰＯＪＵＳの大語彙認識結果
から作成した転置インデックスを採用し
転置インデックスを使った方法になっています
でこれに対して提案手法
に
そのＪｕｌｉｕｓの音節の五ベストの結果をしたものが青い線
それに加えてＪｕｌｉｕｓの大語彙認識の結果こちらを足したものを紫の線になっていますでやはり認識システムを併用することで五ベスト
を併用することでＦ値で約二パーセントの改善が得られていますしかしながら大語彙認識の結果を併用すること
で
従来法よりは良くなっているんですけど
Ｆ値の最大値は従来法よりも下がってしまっていますがほぼ同じ程度というような結果になっています
で最後に検索時間の比較なんですが
まず
今までのＤＰマッチングと従来法の検索時間の比較がこちらになっていまして
従来法ですと
ＤＰマッチングよりも
約六百倍
従来法は一ｍｓで
一あたり一ｍｓで検索することが可能となっています
なので
ＤＰに比べて六百倍高速というような結果になっています
で今回提案した複数認識システム
あとダミーを含めた場合の
検索時間がこちらになっていまして
ダミーを加えることで検索時間は
遅くなってしまうんですけど
またその複数認識システムを併用した場合でも一ｍｓほど遅くなってしまうというふうな結果になっていますがこれでもＤＰに比べて約五十倍
の高速に検索することが可能となっています
でまとめになります
未知語検索ではその
距離の厳密化による性能の改善が
得られたと
挿入と脱落の距離をバタチャリヤ距離
で定義することで性能の改善が得られました
また複数認識システムの併用こちらは未知語既知語共に性能
音節認識結果の五ベストを
併用することで性能が改善することを示しました
検索時間に関しましてはダミーを用いてかつシステムの併用を行なっても平均一クーリエあたり十三ｍｓと非常に高速に検索ができるということを示しました以上で発表を終わります
ご清聴ありがとうございました
