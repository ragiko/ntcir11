はいおはようございます
豊橋技術科学大学のと申します
本日は
フィラー予測モデルに基づくフィラー付き言語モデル
の構築という題目で発表させていただきます
一番最初背景なんですけれどもこちらに参加してらっしゃるみなさんにはことわる必要ないかもしれませんけれども
話し言葉に対する処理これまでディクテーション
読み上げに対する処理っていうのはさまざま行なわれてきたんですけども今後は話し言葉に対する処理っていうのが主流になっていくでしょうっていうのが
みなさんの見解の一致するところだと思います
で
ところがですねその話し言葉を対象とした処理を実現しようと思いますと
書き言葉と違いまして非常に多様なフィラーですとか言い直しですとか言い淀みそういったような
文法的にあまり正しくないまっとうでない
そういういろいろなさまざまな
現象が発生しまして
でそういう現象のために音声認識が非常に苦労するところであるっていうのが
これまたみなさんの見解の一致するところだと思います
でそれでですね現在の音声認識技術っていうのは
統計的なモデルに基づくものが主流になっていますから
そういう多様な話し言葉に対する現象を取り扱う場合であっても
やはり
多様な話し言葉の現象さまざまいろいろなものを全て取り扱っているような大規模なコーパスというのがもし
仮に存在するのであれば話は非常に簡単で
そういうコーパスから
話し言葉の多様な現象に
対応した言語モデルというのを作ってやって
でその言語モデルに基づいて
音声認識というのを行なっていけば良いと思われるのですけれども
現実にはそういうことはありませんでして
例えば国内で最大の日本語話し言葉コーパスを持ってしてでも
持ってしてましても
講演音声として二千七百二件
朗読音声として五百二十三件で合計で約七百五十万語と
でそれに対しまして例えばこれまで使われているような新聞記事で見ますと
このぐらい非常にたくさんありまして
で最近ではもうウェブなんかでも収集することができますから
この差というのは
開くことはあってもおそらく今後縮まることはかなり難しいと
でそれは一体どこに大きな原因があるかといいますと
こちらの日本語話し言葉コーパスの方は
非常に
日本語話し言葉コーパスのいわゆる話し言葉コーパスの構築というのは非常に高コストな処理であるっていうところが問題になってきます
でそういったような背景で対象とするドメインのコーパスが十分に得られない
そういう状況でどうしていきましょうかということが今後研究課題になっていくと思います
で
それでですねというわけで本研究の目的なんですけども
大量の書き言葉コーパスから
話し言葉言語モデルが構築できれば良いんじゃないかということを研究しています
で
ただですね現段階ではまだもう少しここまでは行ってませんで
書き言葉コーパスの代わりにですね不正確な話し言葉コーパスというものに注目しております
これは一体どういうものかといいますと
議事録とか講演録といった形で作成されている
フィラーなどは話し言葉特有の現象までは書き起こされてないけれども
その講演の内容は十分に書き起こされているような
そういったようなコーパスを想定しており
でそういうその程度のコーパスであっても正確な話し言葉コーパスに比べれば
十分に作成コストが低くて
議事録講演録というのはかなりたくさん作成されておりますから多分それは言えると思うんですけども
そういったコーパスから
話し言葉言語モデルを作ることができるときっと十分に有用であろうと
でそういうわけで本研究では
そういう不正確な話し言葉コーパスから
フィラー予測モデルに基づいて
フィラーに対応した言語モデルというのを作りましょうということの試みを報告させて頂き
関連研究は非常に多数
これまで存在するんですけども
そういったものとして例えば一番典型的な例としては
南條らによる大規模な日本語話し言葉データベースを用いた講演音声認識という研究では
例えば
話し言葉言語モデルに対して
対象ドメインの書き言葉言語モデルを混合して
でそれで対象ドメインに適応するということをやっております
でまたらによる二千五年の統計的機械翻訳の枠組みに基づく言語モデルの話し言葉スタイルへの変換という研究では
書き言葉から話し言葉への変換規則というものを
統計的な機械翻訳モデルとして表現しまして
でそういうモデルを
同一の
同一の内容に対する
話し言葉と
書き言葉の両方のコーパスを用意しまして
でその両方のコーパスからこの翻訳モデルを学習し
で
そしてその翻訳モデルを使って書き言葉言語モデルを変換して話し言葉モデルに変換するということをやっております
でこういったような取り組みがあるんですけども
我々の提案手法はこういうのとはちょっと方法が違いまして
どういうことをやるかといいますと
まずフィラーが正確に書き起こされた話し言葉コーパスと
フィラーが
フィラー等話し言葉についての現象は不正確に書き起こされている議事録速記録そういったようなコーパス
この二つのコーパスを用意します
でそしてフィラーが正確に書き起こされた話し言葉コーパスの方を使いまして
フィラー予測モデル
と我々が呼んでいるものを
学習します
で
このフィラー予測モデルというのは我々の定式化の基ではフィラーの
挿入箇所を決定する
フィラー挿入モデルと
その
指定された挿入箇所に対してどういうフィラーを挿入するのがよろしいかといことを選択する
フィラー選択モデルという二つに分割して定式化しております
でこのようにしてフィラーが正確に書き起こされた話し言葉コーパスから
フィラー予測モデルというのを学習します
で
そうしましてもう一つ用意しておきましたこちらの
話し言葉に対する現象は正確には書き起こされていない
議事録とか速記録といったような形の
不正確な話し言葉コーパスに対しまして
このフィラー予測モデルを使ってフィラーの挿入ということを行います
でこうしますとこの
対象とするドメインのフィラー付きのコーパスを得ることができます
でこうしておきましてこのフィラー付きのコーパスから
通常の言語モデルを構築する方法適当にトライグラムでも何でも構わないんですけどもそういったものをやって
言語モデルを得るとほんでこれでこのようなことをやりますと
本来話し言葉に対応していなかった
不正確なコーパスから
フィラーに対応した言語モデルを作ることができると
これが我々の提案する手法になります
でそうしましてそれでじゃあ実際にどうなりますかということでフィラー予測モデルは
挿入箇所を推定するモデルと挿入箇所に対して語彙を推定するモデルの二つに分割して定式化しております
で最初の方は条件付確率場ＣＲＦと呼ばれるもので学習しまして
もう一つの方は普通の条件付確率で表現しております
でそのですねフィラー挿入モデルの方は具体的にはどうやってますかといいますと
例えば例題としてこの画面を見ると・・・みたいな文を考えて頂きたいと思う
でこの画面を見るとという・・・という文に対しましてフィラーを挿入しましてこの画面をえー見るとといったふうに
フィラーを挿入します挿入するという例題を考えます
でこれに対しまして
この
最初に与えられた文
のこの文をまず形態素列に分解します
で
その形態素列に対しまして
このフィラーが挿入される箇所の
直前にあたるこの助詞をに
このをに対しては
直後にフィラーが挿入されるというラベル
このラベルＦを
付与します
それ以外の形態素に対しましては
直後にフィラーなどの挿入ありませんからそういったとこにはフィラー挿入されないよというＯＴＨＥＲだよということでラベルＯを付与していきます
でこうっていう風にしてフィラーの挿入箇所直前にはラベルＦを与えるといった形それ以外のところにはラベルＯを与えるといったような形で
フィラーの挿入箇所を各形態素のラベルへの分類問題といったような形で定式化し
この分類問題を解くというモデルをＣＲＦを使って学習すると
そういったような流れになっております
でＣＲＦにつきましては最近の自然言語処理および音声認識では非常に
多数の研究例があります
けれども
そういう識別モデルです
でこれでこの識別モデル使いますと非常に
柔軟な素性設計ができるということが特徴でこれが今回
すみません柔軟な素性設計ができまして
でかつわりと少なめのデータに少な目の学習データに対しても良い
性能が得られるということが知られております
でそれで今回の研究に適しているでしょうと
いう風にしてＣＲＦを使っております
で
式としてはこういう形になりますいわゆる普通の
エクスポネンシャルな
表現系のの典型的な形になっておる
でじゃあそうしましてこのＣＲＦで学習する
でじゃあどういう実験を構成しましたかということを説明します
先ほどの我々の提案手法
とほとんど図としては一緒なんですけれども
学習コーパスとしてはつまり先ほどの図でいいますと
正確な話し言葉コーパスにあたる部分ですけれども
こちらとしましては日本語話しコーパスから二千百五十二講演を取り出して使いました
でもう一つ議事録講演録にあたる部分なんですけどもこちらの部分は本当の議事録講演録を使えれば本当は一番都合が良いんですけどもそれはちょっと
まだ
データとかの関係で難しかったものですから
話し言葉コーパスから
五百講演取り出しまして
そこから
フィラーを取り除いて
でフィラーなしのコーパスを作りました
これで先ほどの提案手法でいいますと議事録速記録の部分は
こういう風にして作ったフィラーなしのコーパスで少し代替さしていただいております
でそうしまして
こちらの学習コーパスからＣＲＦでフィラー挿入モデルを作ると
でこのフィラー挿入モデルとフィラーなしのコーパスから
フィラー付きの開発コーパスを作ると
でフィラー付きの開発コーパスから言語モデルを作ります
でこの言語モデルの性能というのは日本語話しコーパスからやはり取っておきました五十講演のテストセットを使ってパープレキシティを計算して
評価すると
そういったような構成になっている
でそれでですねどういう評価してみたんですけども
まず
すいません
前の図で絵のこのここの開発
コーパスの時に
フィラーをいっぺん取り除いてもう一度フィラーの挿入をやりました
ですから
ここんところでどのぐらいフィラーが
正確に
再現されたかというのが重要になってくるわけで
で
その再現のどれぐらい
精度良く再現されたかというのは
目標としては
この話し言葉コーパスもともとフィラーを除去する前のコーパスがあります
このコーパスは
完全に正解データのはずですから
このコーパスを使って
言語モデルを作りまして
その言語モデルを作って得られる性能というのが我々の目標値っていうことになると思い
でそうしましてもう一度この表を見て頂きたいんですけれども
この一番下の行
に書いてあるものがですね
開発コーパス
ＣＳＪの五百講演から
フィラーをまったく除去せずにトライグラムを作成した場合の性能です
でその場合テストセットパープレキシティーが七十六．七になりましたこれが我々の研究の目標値になります
でそれに対しまして
その開発コーパスから一旦
フィラーを取り除きます
その上でフィラーを取り除いた上で
フィラーが例えば十分の一の確率でフィラーが発生するよっていうことでしたらその十分の一の確率でランダムにフィラーを挿入します
でそうしたコーパスを作ってやりまして
でそのコーパスから作った言語モデルっていうのが八十六．二というテストセットパープレキシティになりまして
こちらがベースラインになります
でそうしましてじゃあ我々のやつはどうなっていますかといいますと
提案手法その一はですねＣＲＦで
かつ
直前二形態素直後二形態素および現在の形態素を素性として予測モデル挿入モデルを学習しますとテストセットパープレキシティの七十七．二という値が得られました
つまりこれはどういうことになっているかといいますと
ベースライン
アトランダムにコンテキストを考えずにフィラーを挿入した場合に比べますと
結構よろしいと
でかつ
その開発コーパスで達成される一番良い値に対しても結構近いと
ということでですね我々の提案手法はかなり良い感じでフィラーを再現することができるよということになっております
でもう一つ音声認識ていう課題を考えますと
今後オンラインでやらなければいけないかもしれませんので
で
後ろの
直後の形態素というのを考慮しなくても
考慮しなかった場合どうなるかということが興味あるところだと思いますけれども
そちらをちょっと見てみますと七十九．四という形になりまして
で
これは当然のことながら
直後の形態素を見た方が当然性能は良いんですけれどもそれなりに
ベースラインに比べると結構良い性能を保って再現することができると
というわけでこの表では我々の提案手法というのは
ベースラインに比べると結構良い性能が達成できるよとでかつ目標値に結構近い値だよということが主張できると思います
でもう一つですね
フィラー挿入モデルの素性への比較なんですけれども
すいません
素性としまして先ほどのやつは形態素を全て使ってたんですけれども形態素全て使っていますとドメインに依存した形態素も使ってしまっていますからそういうドメインに依存しない形態素等も使った方が良いんじゃないかドメインに依存する形態素は使わない方が良いんじゃないかということを検討してみました
でそうしますと
七十七．五という形になりまして
これはドメインに依存するものも含めて全ての形態素を使った場合に比べてやはり若干落ちていますけれども
それでもベースラインに比べると結構良いよということになっております
であと学習コーパスフィラー予測フィラー挿入モデルを学習する学習コーパスの分量がどれ程かどれ程になったらどれぐらい良いかということをちょっと検討してみました
でそれでだんだん少なくしていったんですけども二百講演ぐらいまではほとんどテストセットパープレキシティは低下しません
でそれに対して二百から下がっていきますとどんどんどんどんどんテストセットパープレキシティが悪くなっていきますので
フィラー挿入モデルを学習するためには二百講演ぐらいは少なくとも必要だよということが見てとれま
でもう一つ講義音声データベースに対してテストセットパープレキシティどれぐらいになりますかということを評価しましたけれども
これの場合でもやはり目標値に結構近い値というのを再現することができると
いう風なことになっております
でこういう風な形でとりあえずフィラー挿入モデルの方がうまく動くよということがうまく示せたと思います
で次にフィラーの語彙挿入する箇所が決定されたあとどのフィラーを挿入するかということを推定するモデルについて説明します
でこちらの方は実は非常に簡単でして単に直前に
こういうような情報が現れた時に
フィラーがどのフィラーになるかということを考えるという条件付きの確率で表現しております
でそうしましてでいろいろ
やってみたんですけども
でフィラーのどういうフィラーが良いかっていうと直前ポーズだったりとか口の形で決まるよとかそういったふうにいろいろ様々に
素朴な仮説というのがあると思うんですけども実はそういうのでは不十分でしてやっぱり直前の形態素ですとか
そういったものを考えた方が性能がよろしいということが結果として出ています
でただ
形態素そのものを使ってしまいますと
ドメインに依存してしまいますので
でドメインに依存しない
素性を使ってみますとどうなりますかといいますと
ドメインに依存しない組成を使いましてもそれなりにはちゃんと推定できるっていうことがわかります
でバイグラムとトライグラムというのを比較してやりますとやはりトライグラムを使った方がよろしくてですね
ちょっとフィラーでなぜ直前だけじゃなくて
直前のものまで効くかというのがちょっといまいちよくわからないんですけどもとりあえずトライグラムを使った方がよく効いております
でそうしまして
そういったような条件付き確率への学習セットから
学習するフィラーフィラーすいません
フィラー選択モデルというのを作るということをやります
でそれでこのフィラー予測モデルを統合しまして言語モデルを作るという実験をやりました
でそれで今度はですね
目標値に対しまして
四通りの実験を行ないました
我々の提案手法の一番
提案したいのはこれです
つまり
フィラー挿入モデルとしてはＣＲＦを使ってコンテキストを使います
でかつフィラー語彙の選択の方もやはり直前の二形態素なりそのコンテキストを使います
でこうしますと
テストセットパープレキシティは八十六．五ということで
でこれは開発コーパスの値に十分近くて
かつベースラインよりはかなりベースラインよりはかなり改善してると
というわけで
フィラー挿入モデルとフィラー選択モデルを統合した場合であってもやはりフィラーはそれなりに再現できるということが示せたと思います
で
それに対しまして他のところをちょっと見比べて頂きたいんですけども例えば両方ともユニグラムを使うつまり全然全くコンテキストを使わないというのがベースラインで
でここの
ＡとＢはどう違うかといいますと
フィラー挿入モデルはコンテキストを使って
フィラー選択モデルの方はコンテキストを使ったり使わなかったりというふうにパラメータ書いてあります
でそうしますと
テストセットパープレキシティはここで
二ポイント下がっております
で
それに対しましてフィラー語彙選択モデルの方はコンテキストをそのまま使いまして
ＣＲＦフィラー挿入モデルの方はコンテキストを使わないというふうに変えますと
テストセットパープレキシティは七ポイント程下がっております
という風に見比べますと
フィラー挿入モデルの方が
テストセットパープレキシティには有効であろうというところが見て取れます
で以上まとめさせて頂きますと本発表では不正確な話し言葉コーパスから話し言葉言語モデルを構築する方法としてフィラー予測モデルを用いる方法を提案しました
でＣＳＪを対象とする実験によりまして実際の話し言葉に近い言語モデルを構築できることを示しました
で今後の課題としては実際の議事録講演録を使った実験ですとか他ドメインのコーパスを使った実験とかそういったことを検討していきたいと思っております
発表は以上になります
