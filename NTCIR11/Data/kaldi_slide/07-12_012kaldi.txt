でそれでですねえーとーどういうあのー評価してみたんですけれども
まず
えっとーすあすいませんあの
えー
前の図であのこのここの開発
コーパスの時に
えとフィラーを一遍取り除いてもう一度フィラーの方になりました
ですから
えっとここのところでえとどのぐらいフィラーが
正確に
再現されたかというのが重要になってくる訳で
で
えっとーおー
その再現のどのぐらい
精度良く再現されたかというのは
えっと目標としては
この話し言葉コーパス元々フィラーを除去する前のコーパスがあります
このコーパスはあのまー
完全に正解データーのはずですから
このコーパスを使って
言語モデルを作りまして
その言語モデルを作って得られる性能というのが我々の目標値っていうことになると思う
でそうしましてもう一度えとこの表を見ていただきたいんですけれども
えこの一番下の行
で書いてあるものがですね
えーその
えー開発コーパスえっと
ＣＳＪのえっと後えーっと五百公園から
えー
フィラーを全く除去せずにトライグラムを作成した場合の性能です
でその場合えーテストセットパープレキシティー七十六．七になりましたこれがえ我々の研究の目標値になり
ですそれに対しまして
その開発コーパスから一旦
フィラーを取り除きます
そして
その上でフィラーを取り除いた上で
フィラーが例えば十分の一の確率フィラーが発生するよってことしたらその十分の一の確率でランダムにフィラーを挿入します
えそうしたえコーパスを作ってやりまして
でそのコーパスから作った言語モデルっていうのがえ八十六．二というテストばセットパープレキシティーありまして
こちらがベースラインになりま
でそうしましてじゃえっと我々のやつがどうなってますかと言いますと
え提案手法その位置はですねＣＦで
かつ
直前に形態素直後に形態素および現在の形態素素性としてえっと予測モデルを学科の方言はあのモデルを学習しますとえテストセットバック率七十七．三という値が得られました
つまりこれはどういうことになってるかと言いますと
えーベースライン
後ランダムにコンテキストを考えずにえーとフィラーを挿入した場合に比べますと
結構よろしいと
でかつ
えーその開発コーパス達成される一番良い値に対しても結構近いと
ということでですねえと我々の提案手法はまーかなりえといい感じでそのフィラーを再現することができるよということになっており
でもう一つその音声認識という課題を考えますと
えっとー今後そのオンラインでやらなければいけないいけないかもしれませんので
でえっとーその
後ろの
直後の形態素というのを考慮しなくても
考慮しなかった場合どうなるかということが興味あるところだと思いますけれども
そちらをちょっと見てみますとえ七十九．四という形になりまして
で
えとこれはえーとん当然のことながら
直後の形態素見た方が当然性能はいいんですけれどもまーあのそれなりにえっとー
そのえっとベースラインに比べるとま結構いい性能を保ってえー再現することができると
という訳でえとこの表ではその我々の提案手法というのは
ベースラインに比べると結構いい性能が達成できるとえかつ目標値も結構近い値であるということが主張できると思い
