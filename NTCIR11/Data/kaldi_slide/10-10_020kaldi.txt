で
えー次にあのサブワードについてですが
えーっとー
サブワードの使い方としましてまずえー
講義ビデオを事前に音声認識しておきまして
えー子音を分割しておきます
そして各子音ごとにトライホン系列をこう用意して
ここが事前準備
もう一つ二で事前の準備といたしまして
えこの音声認識に使った
え音響モデル
えこちらの方を
えー各トライホンごとにコンフュージョンマトリックスをこう作って
置きまして
えー
それで
えー実際の
えー検索の場合にはキーワードから
えここに
えーあこれをトライホン系列に直しましてこのトライホン系列と
え確信度のトライホン系列をえ単純にれ連続ＤＰ
を
えー力を渡され
やっています
でえ先程の高速化手法を使えば随分早くなるんだろうなと思いながらお聞きしており
で
えーまこの連続ＤＰなんですけれどもその時にはま昔のスプリット本当に出ると思うんですが
あのー
トライホンのコンフュージョンマトリックスを
使っていますので距離計算てのはまー
しなくている
みんな
でこの中の上位
ｎ個の
えスポッティング結果を
持ってきまして
えーその
スポッティング結果でえ順位ごとに
えか例えば
新一が一であれば
えスコア一を加え
えー子音には
え
二であればに分の一を加え
順位をちょっと見にくいですがスポッティング中に文の位置のスコアを
ちょっとこれはアドホックであれなんですが
他にも言い方を切ってあると思うんですけど
取り敢えず
えースコアを
えこのスポッティングされた一によって
えー確信に加えるということで
でスコアが一番大きいものを
検索結果と
で勿論この
えー
ここのキーワード
えこのやり方と先程の
えキーワード補間
