はいそれでえーっとそのスコープんタームでセクションに関する関連研究ですけどもまとめますと大体こういった手法が提案されています
で一番あのベーシックなあの基本的な方法は連続ＤＰマッチングでとこうという方法です
ただ連続ＤＰマッチングですとあのー検索対象の文書全部食べないといけませんので効率が悪いと
えそこで
えーと各印付けをすることによって効率化しようという手法が幾つか提案されてます
で一つ目の代表的な手法これまー殆どの手話こちらなんですけども金張ってるとファイルを使いましょうという方法です
でこれはまテストでもよく使われる方法でま言わば辞書を作っておきましょうということですね検索したい
ものの辞書を作っておいてその辞書に載ってるものに関してはその一応
あのすぐに来てるというような作品を作っておきましょうと
いう必要が
あそういう非常になってます
でえーっとこちらの方はその辞書が必要必要でそこに載ってないものも検索されない訳ですね
あそこが
あのちょっと音声ドキュメント対象にする場合は問題で
えーと音声のドキュメントだという事例がありますので必ずしもその全ての
えーっと
あのー
文字列をここに乗せるって何かす必ずも容易ではないと
でま昨日のながら先生の発表はこちらの方で
えーとまそこの索引付けの方を色々と工夫されて
色んなパターンのされるというようなことを発表だったと思います
でもう一つの方法は
あのーさフィックスアレーを使うという手法でこれは
あの木の御発表がありました
えー葛先生の発表に相当します
でこちらの方は
えーどういう手法がかと言うとその検索対象のドキュメントの方を
えー圧縮しましてえーっとその
んドキュメントの共通部分をえーツリー上に圧縮してえーっと
同じところはまとめて検索できるようにすると
いうことでその上でＤＰマッチングしてやろうという手法ですね
で
えーっとたらえーとこの方法だとえーと音声ドキュメントのまやはりその
認識に揺れがあるというところが
あのー大きな
問題になりまして
えーっとテキストの場合だと一にあの決まるのでそこで圧縮がうまく行きますけれどもえーと恐らくその色々な認識こうたくさんの認識法がある中で
えーとその中でえーっと共通部分を見つけるというような
かんかなり扱いは難しいだろうと
いう風に想像できます
でまたいずれの手法ですね従来のいずれの手法も
えーとその検索の問題に対しては閾値を使ってると
えーっとその検索したいものがどのぐらい
えー誤りが許されてるかという閾値を設定してその閾値内の
えー距離を持つような候補を出すというような問題を
えー解いているという手法になってます
はいそれで
