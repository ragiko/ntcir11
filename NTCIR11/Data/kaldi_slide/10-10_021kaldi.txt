キーワード拡張との併用っていうのも可能ですので
えーそれについて
えちょっと調べてみます
で
えー横軸は同じくキーワード数で縦軸は平均逆数順位です
でえーっとまずこの一番下の
ラインがサブワードだけを使った場合今の方法でサブワード
でえ実験をした場合です
それからその上のグラフ
は
えーっと
ちょっと見にくいんですが
え辞書
のみでキーワード拡張したものがあの薄いブルーのない
で
えーっと
この
これに
えーサブワードと両方を加えるとちょっと見にくいんですけど
ここの
キーワードが一つしかない時はサブワードがちょっとに結果が
出てるんですね
で実際
えどんな単語かなと思って見てみましたらＵＮＩＸの授業なんかで
ＰＷＤとかですね暮れとかって言ってるような
部分がちゃんとサブワードでは回
してみたい
してそういうようなキーワードが少ない時には
えそういうのは結構聞くみたいで
えー
この部分が
えっとわずかに
かもしれませんが
えーっと両方を使うことによって
えーっと改善
しており
でこの
えーこれがディックプラスサブワード
でこのやり方としては
えーまず最初にキーワード補間で
えー引っ掛かったものについては
要するにキーワードが
あのあるものについては
えちゃんとあのー未知語ではなくて
え辞書にあるものについては
えわざわざサブワード検索はしない
これちょっと計算量の関係でしないという形で
を取ってますので殆ど計算量の増加は殆どあります
それに対して
そのえー辞書にあるない関係なしに
えーサブワードはとにかく全部やると
本当に併用っていう形で
えーこれはちょっと計算量は
先程の
え高速化をしない限り非常にちょっと現実的ではないんですがあの性能の
白あを調べるって意味で調べた
ものですが
えこの場合
えーっとキーワードおよび
連想キーワード連想されたキーワード両方についてサブワード
えー検索全てについてやった場合はこの一番上の
え赤い
部分です
まー
これでやりますとえー
少し性能は
上がるんですけどもえー検索時間もそれなりに増えてしまう
っていうことで
えー
ちょっと高速化しない限りちょっと
じゃちょっと難しい
