で
次にサブワードについてですが
サブワードの使い方としましてまず
講義ビデオを事前に音声認識しておきまして
シーンを分割しておきます
そして各シーンごとにｔｒｉｐｈｏｎｅ系列をこう用意しておく
ここが事前準備です
もう一つ事前の準備と致しまして
この音声認識に使った
音響モデル
こちらの方を
各ｔｒｉｐｈｏｎｅごとにコンヒュージョンマトリックスをこう作って
おきまして
それで
実際の
検索の場合にはキーワードから
ここに
これをｔｒｉｐｈｏｎｅ系列に直しましてこのトライフォン系列と
各シーンとのｔｒｉｐｈｏｎｅ系列を単純に連続ＤＰ
を
力技で
やっています
で先ほどの高速化手法を使えばずいぶん早くなるんだろうなと思いながらお聞きしております
で
この連続ＤＰなんですけれでもその時には昔のスプリット法と似てると思うんですが
ｔｒｉｐｈｏｎｅのコンヒュージョンマトリックスを
使ってますので距離計算というのは
しなくていいという
感じになっています
でこのうちの上位
Ｎ個の
スポッティング結果を
持ってきまして
その
スポッティング結果で順位ごとに
例えば
シーン一が一位であれば
でスコア一を加えると
シーン二は
二位であれば二分の一を加える
順位ちょっと見にくいですがスポッティング順位分の一のスコアを
ちょっとこの辺はアドホックであれなんですが
他にも良い方法きっとあると思うんですけど
とりあえず
スコアを
このスポッティングされた順位によって
各シーンに加えるということで
でスコアが一番大きいものを
検索結果といたしました
でもちろんこの
ここのキーワード
このやり方と先ほどの
キーワード補完
