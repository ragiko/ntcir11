それでは音声中の検索語検出のための音素遷移ネットワークのエントロエントロピー分析について山梨大学大学院のが発表します
本研究ではＳＴＤのためのインデックスである音素ネットワーク型インデックスの複雑さに着目しそのエントロピーの分析を行いましたその結果とエントロピーによる検索度改善の試みについて本日は述べます

まずはじめに研究の背景です
近年記憶媒体の進歩やネットワークインフラの充実により
大量の音声や映像が保存利用可能となってきています
それに伴いこれらのデータから任意のキーワードを含む発話やシーンの検索を
効率よく行いたいという要求が高まってきました
音声認識音声中の検索語検出の一般的な手法は音声認識結果を利用したものとなりますが
検索語が認識不可能な語
未知語である場合や
認識性能が低い場合には検出性能が低下してしまいます
このような背景から音声中の検索語検出ＳＴＤの性能の向上が必要となります
性能向上のために我々は
音素遷移ネットワークＰＴＮを用いたＳＴＤ手法を提案してきました
これは複数の音声認識システムの出力を利用してネットワーク型のインデックスを構築し
ＤＰを用いた音素単位での検索語の検出を行うものです
またＰＴＮを構築する際に得られる情報を利用した
誤検出抑制したＳＴＤ手法も提案してきました
さらに
け
音素数の少ない検索語の誤検出を抑制するために
検索語の音素数に基づいた探索パラメータの調整を行いました
これにより高い検索性能を実現することができました
今回は我々が提案したインデックスのＰＴＮの複雑さに着目し
そのエントロピーを分析しました
その分析結果を検索エンジンに適切に導入することで
誤検出を抑制しさらなる検索精度の向上を目指すことが
本研究の目的となります
今回の発表における報告要点です
まず前回のワークショップのおさらいとなりますが
ＰＴＮを用いた誤検出抑制したＳＴＤ手法について述べます
次に
ＰＴＮのエントロピーを分析し
その分析結果を用いた誤検出抑制手法について述べます
最後に本手法をテストコレクションにより
評価を行っ
たことを述べます
この図は本研究におけるＳＴＤのタスクとなります
まずインデックスを構築するために音声データを
複数の音声認識システムに入力し
その出力を
ＳＴＤ用インデックスのＰＴＮに変換します
次に検索語の検出を行うために
検索語を音素単位の検索語に変換し
先ほど構築したＰＴＮから検索語の検出を行うことで
ＳＴＤ結果が得られます
今回はこのＰＴＮの
複雑さに着目しエントロピーを分析しました
次に複数の音声認識システムの利用方法についてです
本研究では形態の異なる五種類の言語モデルと
二種類の音響モデルの組み合わせにより
十種類の音声認識システムを構築しています
言語モデルの内訳ですが
ＷＢＣは

形態素単位のトライグラムであり
かな漢字混じりで構成されています
ＷＢＨはＷＢＣをすべてひらがなで構成したものとなっています
ＣＢは文字単位の
トライグラムでありすべてひらがなで構成されています
ＢＭは文字系列単位のトライグラムであり
系列はすべて二文字のひらがなで構成されています
ノンはすべてのモーラの出現確率が等しくなっており
擬似的に連続音素音節認識を実現しています
音響モデルは音節百二十四種からなるシラブルモデルと
音素四十三種からなるトライフォンモデルを使用しています
各モデルはＣＳＪのコア講演以外から学習を行っています
またデコーダにはジュリアスリビジョン四．一．三を使用しています
ここで予備実験として複数の音声認識システムの
音声認識率を調べました
実験対象の音声はＣＳＪのコア講演音声です
実験結果より
単一の
音声認識システムのテンベスト出力を
組み合わせた結果よりも
複数十種類の音声認識システムのワンベスト出力を組み合わせた結果のほうが
音節正解率が高くなることがわかりました
つまり
単一の音声認識システムの出力より
複数の音声認識システムの出力を組み合わせたほうが
任意のキーワードを見つけられる可能性が高くなると言えます
しかし
正解精度を見ると分かる通り
大量の挿入誤りが発生しているため
多くの沸き出し誤りが発生する可能性が高くなっています
次にネットワーク型インデックスの構築方法についてです
まず例えばですが音声データコサインという発話したデータを
複数の音声認識システムに入力すると
その認識結果が得られます
でその次にこの認識結果を
音素列に変換し
アライメントを取ります
最後にこのアライメントが取られた
一つの列をアークとして登録することで
ネットワーク型インデックスが構築されます
ネットワーク型インデックスの特徴として
ヌル遷移を意味するアットマークが存在します
ヌル遷移はノードを飛ばしての検索ができるため
柔軟に幅広い検索が可能となります
次にＤＰを利用した用語検索エンジンについてです
本研究ではＤＰマッチングにおける距離尺度に
編集距離を用いています
編集距離は一致の場合は遷移コストを〇
誤りの場合は置換脱落挿入にかかわらずすべて一としたものです
この図はＰＴＮから検索語コサインをけんしゅ
つする例となっています
この例ではコサインのＫＯＳは
ＰＴＮのアーク中に含まれているため一致として遷移をしていきますが
次のアークにはＡが含まれていないため
ここはヌル遷移を使用してノードを飛ばして検索を続けます

最終的に
ヌル遷移がこの検出結果には含まれているため
本研究ではヌル遷移のコストを
〇．一に設定しているので
インデックスと検索語の距離は〇．三となります
最終的にこの距離が
設定したしきい値以下であれば検索語が検出されたと判断します
次に誤検出抑制パラメータについてです
誤検出抑制パラメータはＰＴＮを構築する際に得られる情報を利用したものであり
今回は二種類を用意しました
一つ目はボーティングですボーティングは同じ音素を認識していた音声認識システムの数を表しており
多くの認識システムで認識されているほどその音素の信頼度が高くなる可能性があります
二つ目はアークウィッズです
アークウィッズはニノード間に存在するアークの数を表しており
アークの数が少なくなるほどそのノード間の認識結果の
信頼度が高くなる可能性があります
誤検出抑制パラメータは編集距離ベースの
距離計算に
パラメータを加味することで適用されます
ボーティングとアークウィッズ共に一致の場合の遷移コストに加味することで
一致した音素がどの程度信頼できるかということが加味された用語検索エンジンとなります
例えばボーティングの値がこのような数値になっていたとすると

左のノードアークでノード間では
信頼度が低いため
コストが高く設定され
右のノートでは信頼度が高いためコストが低く設定されます
アークウィッズに関しても同様で
左のノードではアーク数が多いためコストが高く設定され
右のノートではアークが少ないためコストが低く設定されます
ここで現状のＳＴＤ性能を評価するための実験を行いました
実験条件です
検索対象の音声データには
ＣＳＪのコア講演音声を
検索語にはコア講演用未知語テストセットとエンティサイルナインのテストセットを用いました
こちらのテストセットは場合に応じて未知語と既知語に分割しています
評価尺度にはリコールプレシジョンカーブＦ値マップを用いました
実験結果です
まずはリコールプレシジョンカーブです
コア講演用未知語テストセッ
トを使用した場合
編集距離のみの場合ではこのようなカーブとなっていますが
誤検出抑制パラメータを導入することで大幅に検索性能が向上していることがわかります
特にボーティングとボーティングやアークウィッズを組み合わせることによって
同じリコールを維持したままプレシジョンが二十％以上
改善していることがわかります
次にエンティサイルナインテストセットです
こちらの編集距離のみの場合はこのような結果となっていますが
誤検出抑制パラメータを導入することで改善
検索性能が改善していることがわかります
しかし

リコールが七十％前後では編集距離のみの場合の方が
検索性能が高くなってしまっています
次にＦ値とマップの値についてです
コア講演用未知語テストセットはＦ値マップともに
誤検出抑制パラメータを導入することで検索性能が大幅に改善しています
一方エンティサイルテストセットでは
マップは改善しているもののＦ値はボーティング単体以外のみでは検索性能が低下している
という結果となってしまいました
これは一部の検索語において

誤検出抑制パラメータの効果が薄く

湧き出し誤りを抑制できなかったためだと考えています
以上のことから
誤検出抑制パラメータを導入することで検索性能が向上することがわかりました
また以前よりしきい値を細かくすることにより
ボーティング単体のほうが検索性能が高くなっていることがわかりました
次にＰＴＮのエントロピー分析についてです
まずはエントロピーの算出方法です
本研究ではＰＴＮの任意のノード間のエントロピーをボーティングエントロピーとして

そのニノード間に存在する音素の数と事後確率により算出しています
事後確率はその音素をあ出力した音声認識システムの数に基づき算出を行っています
算出方法はこのような式で
行っています
次にＰＴＮボーティングエントロピーを利用してＰＴＮ全体のエントロピーＰＴＮエントロピーを求めます
こちらはこのような式で算出を行っています
なお一つのＰＴＮは音声ひと発話分の音声認識結果より構築を行っています
この図はＰＴＮを模したものであり
これらの数値はその音素を認識していた音声認識システムの数を表しています
この例では
ボーティングエントロピーは各このような値となっており
最終的にＰＴＮのエントロピーはこのように算出できます
最後に
ある検索語が含まれる区間のみのエントロピーを
求める式がこちらとなります
先ほどのＰＴＮのこの四角で囲まれた区間を検出区間とすると
ボーティングエントロピーはこの間ののみの
値を使用しＰＴＮのエントロピーを算出するため
先ほどとは異なる値となっています
それでは分析の結果です
まずは各テストセットに含まれる検索語が存在する区間のエントロピーを集計した結果です
その結果がこちらの表となります
赤い四角で囲まれた未知語の検索語と
緑色の四角で囲まれた既知語の検索語では
既知語の検索語が含まれる区間のほうがエントロピーが低いことがわかります
これは未知語が含まれる区間では単語認識が不可能であるため
音声認識システム間の揺れが大きく
アーク数の多い
ＰＴＮが構築されやすいためだと考えています
それに対して既知語が含まれる区間では
単語認識が可能であるため
音声認識システム間の揺れが小さく
アーク数の少ないＰＴＮが構築されやすいと言えます
以上のことから情報量の観点から見ても既知後のほうが検出が容易であると言えます
そこで今回は未知語の検索語が含まれる区間のエントロピーが高くなるという事実を踏まえ
エントロピーのしきい値を設定しました
これはＳＴＤコストのしきい値と連動する形であり
エントロピーのしきい値よりも
検出区間のエントロピーが低かった場合には
その結果を誤検出と見なし棄却するようにしました
これにより高リコールでの沸き出し誤りを抑制
し検索精度が改善できないか調査を行いました
この図は

横軸にエントロピー縦軸にＳＴＤ検出コストを取った場合の
検出結果
正解検出と誤検出の一部の
分布を示したものです
この一次直線が今回設定したエントロピーのしきい値で
こちらは
本研究の検索エンジンの最大の検出
コストである〇．九のときに
最もエントロピーの高い正解検出の最大値である値になるように設定しています

この線の右
上この線より上の部分の
部分であった結果は棄却を行います
図を見ると分かる通り正解検出を
いくつか棄却してしまうため
リコールが低下することが予想されますが
それに見合うだけの誤検出が抑制できれば
検索性能が改善できます
エントロピーのしきい値の導入結果です

こちらのウィズアウトエントロピーは先ほど示した従来の結果であり
ウィズエントロピーは今回のエントロピーしきい値の導入結果となっています
コア講演用未知語テストセットでは最大のＦ値となる
しきい値付近では
正解検出を棄却してしまっているため
若干性能が低下してしまっていますが
リコールが六十五％から八十％にかけてはエントロピーによる誤検出の抑制により
検索性能が改善していました
続いてエンティサイルテストセットでは
今回は未知語の検索語にのみエントロピーの
しきい値を設定しましたが
全体的にリコールが低下してしまう結果となりました
次にあＦ値と最大しきい値での誤検出数についてです
こちらも
正解検出を削ってしまったため
Ｆ値が若干低下していますが
最大しきい値での誤検出数を見てみると
エントロピーのしきい値を導入することで従来の
ものよりも十分の一近くに誤けんしゅ
つを減らすことができました
以上のことから正解検出が棄却されるため最大のＦ値が若干低下してしまうことがわかりました
また高リコールでの誤検出を大幅に抑制することができましたが
最大のＦ値となるしきい値付近では効果が薄いことがわかりました
さらに未知語であっても
エントロピーの低いものが存在することがわかりました
単純なエントロピーによる足切りでは効果が薄いことがわかったので

ここで更に分析を深めるため最良のＳＴＤ性能時の
エントロピーを調べました
その結果がこちらとなります
図のあ表の正解検出とはその
最大のＦ値となる閾値で検出
された
正解を含む発話のことであり
誤検出はそのしきい値で
検出されたものの
不正解であったものの発話であり
不検出は
その閾値では検出されなかった
あ正解発話のことです
表を見て分かる通り正解検出
誤検出
不検出の順にエントロピーが高くなってっていることがわかります
また正解検出のエントロピーが低いことから

検索語を含む発話では
音声認識システム間の揺れが小さい場合には
検索語の検出が容易であるといえます
一方不検出のエントロピーが高いことから
音声認識システム間の揺れが大きい場合には
検出閾値を固定すると
検索語の検出が困難であることも言えます

この場合しきい値を緩めることで検出が可能となりますが
同時に誤検出が増加してしまいます
以上のことから未知語既知語に限らず誤検出を抑制しようとすると
エントロピーが低い発話しか検出できないことになってしまいます
そこで
検索精度を改善するためのアプローチの一つとして
エントロピーが高い発話に対する音声認識上の対策が必要であると考えています
また誤検出よりも
不検出の発話の方がエントロピーが高いことから
誤検出された発話では検索語と類似している音素列が
複数の音声認識システムで認識されている可能性があります
こちらは

単純な音素系列マッチングであるＤＰでは
誤検出かどうかの判断が難しいため
何らかの対策が必要であると言えます
終わりにまとめとしてＰＴＮを用いた
誤検出を抑制したＳＴＤについて述べ
誤検出抑制パラメータを導入することで検索性能が向上することが示されました
またＰＴＮのエントロピーを分析し
そのエントロピーの閾値を用いた誤検出抑制手法について述べました
こちらは高リコールでは誤検出を大幅に抑制することができましたが
最大のＦ値となるＳＴＤコストのしきい値では
効果が薄いことがわかりました
今後の課題として
今回のような単純なエントロピーによる足切りでは効果が薄いことがわかったため
より厳密な音響マッチングの導入をするなど
を検討しています
また音響尤度等のパラメータとエントロピーの関係の調査を行い
さらなる検索性能の改善を目指したいと思います
以上で発表を終わります
